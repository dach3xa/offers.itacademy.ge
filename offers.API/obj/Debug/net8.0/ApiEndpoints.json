[
  {
    "ContainingType": "offers.API.Controllers.AdminController",
    "Method": "Post",
    "RelativePath": "api/Admin/Category",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryDTO",
        "Type": "offers.API.Models.CategoryDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "offers.Application.Models.CategoryResponseModel",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 409
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "offers.API.Controllers.AdminController",
    "Method": "GetAllCompanies",
    "RelativePath": "api/Admin/companies",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[offers.Application.Models.AccountResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "offers.API.Controllers.AdminController",
    "Method": "ConfirmCompany",
    "RelativePath": "api/Admin/companies/{id}/confirm",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 204
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "offers.API.Controllers.AdminController",
    "Method": "GetAllUsers",
    "RelativePath": "api/Admin/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[offers.Application.Models.AccountResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "offers.API.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/company/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "companyDTO",
        "Type": "offers.API.Models.CompanyRegisterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "offers.Application.Models.CompanyResponseModel",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 409
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "offers.API.Controllers.AuthController",
    "Method": "LogIn",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountLoginDTO",
        "Type": "offers.API.Models.AccountLoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "offers.API.Models.LoginResponseDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      }
    ]
  },
  {
    "ContainingType": "offers.API.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/user/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDTO",
        "Type": "offers.API.Models.UserRegisterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "offers.Application.Models.UserResponseModel",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 409
      },
      {
        "Type": "offers.API.Infrastructure.ExceptionHandler.ApiError",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "offers.API.Controllers.CompanyController",
    "Method": "GetCurrentCompany",
    "RelativePath": "api/Company",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.CompanyController",
    "Method": "Post",
    "RelativePath": "api/Company/offers",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "offerDTO",
        "Type": "offers.API.Models.OfferDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.CompanyController",
    "Method": "GetMyOffers",
    "RelativePath": "api/Company/offers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.CompanyController",
    "Method": "GetMyOffer",
    "RelativePath": "api/Company/offers/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.CompanyController",
    "Method": "Delete",
    "RelativePath": "api/Company/offers/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.GuestController",
    "Method": "GetAllCategoriesAsync",
    "RelativePath": "api/Guest/categories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.GuestController",
    "Method": "GetCategoryById",
    "RelativePath": "api/Guest/categories/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.GuestController",
    "Method": "GetAllOfferAsync",
    "RelativePath": "api/Guest/offers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.GuestController",
    "Method": "GetOfferById",
    "RelativePath": "api/Guest/offers/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.UserController",
    "Method": "GetCurrentUser",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.UserController",
    "Method": "Deposit",
    "RelativePath": "api/User/deposit",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "depositDTO",
        "Type": "offers.API.Models.DepositRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.UserController",
    "Method": "GetOffersByCategories",
    "RelativePath": "api/User/offers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryIds",
        "Type": "System.Collections.Generic.List\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.UserController",
    "Method": "CreateTransaction",
    "RelativePath": "api/User/transaction",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "transactionDTO",
        "Type": "offers.API.Models.TransactionDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.UserController",
    "Method": "GetMyTransactions",
    "RelativePath": "api/User/transactions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.UserController",
    "Method": "GetMyTransaction",
    "RelativePath": "api/User/transactions/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "offers.API.Controllers.UserController",
    "Method": "RefundTransaction",
    "RelativePath": "api/User/transactions/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]