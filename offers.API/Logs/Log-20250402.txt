2025-04-02 14:01:09.537 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 14:01:09.708 +04:00 INF starting web host
2025-04-02 14:01:09.979 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:01:11.260 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:01:11.261 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:01:11.415 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:01:11.615 +04:00 DBG Creating DbConnection.
2025-04-02 14:01:11.679 +04:00 DBG Created DbConnection. (62ms).
2025-04-02 14:01:11.680 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:11.693 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.063 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.067 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:01:12.074 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-04-02 14:01:12.075 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (8ms).
2025-04-02 14:01:12.081 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:01:12.106 +04:00 INF Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:01:12.108 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.115 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (4ms).
2025-04-02 14:01:12.116 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.117 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.118 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:01:12.120 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:01:12.120 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:01:12.121 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:01:12.121 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:01:12.147 +04:00 INF Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:01:12.243 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:01:12.255 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:01:12.256 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:01:12.256 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:01:12.258 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 14:01:12.258 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:01:12.261 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:01:12.263 +04:00 DBG Committing transaction.
2025-04-02 14:01:12.267 +04:00 DBG Committed transaction.
2025-04-02 14:01:12.269 +04:00 DBG Disposing transaction.
2025-04-02 14:01:12.271 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:01:12.271 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:01:12.274 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:01:12.274 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:01:12.274 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:01:12.274 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:01:12.275 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:01:12.276 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:01:12.276 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:01:12.276 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:01:12.276 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:01:12.277 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:01:12.279 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:01:12.279 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:01:12.279 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:01:12.280 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:01:12.285 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:01:12.288 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.289 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:01:12.294 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 14:01:12.294 +04:00 DBG Committing transaction.
2025-04-02 14:01:12.294 +04:00 DBG Committed transaction.
2025-04-02 14:01:12.295 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:01:12.295 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:01:12.295 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:01:12.295 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:01:12.297 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:01:12.297 +04:00 DBG Disposing transaction.
2025-04-02 14:01:12.297 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.298 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:01:12.362 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 14:01:12.572 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 14:01:12.606 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.606 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.606 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:01:12.606 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:01:12.607 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:01:12.607 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:01:12.610 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:01:12.613 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.613 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 14:01:12.613 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.613 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:01:12.615 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:01:12.617 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.618 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 14:01:12.622 +04:00 DBG Hosting starting
2025-04-02 14:01:12.655 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 14:01:12.673 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 14:01:12.699 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 14:01:12.711 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 14:01:12.716 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:01:12.717 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 14:01:12.718 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:01:12.720 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 14:01:12.721 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 14:01:12.724 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 14:01:12.725 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 14:01:12.764 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:01:12.783 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 14:01:12.837 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:01:12.854 +04:00 DBG Creating DbConnection.
2025-04-02 14:01:12.855 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:01:12.857 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.860 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.860 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:01:12.860 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:01:12.860 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:01:12.861 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:01:12.880 +04:00 INF Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:01:12.893 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.894 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 13ms reading results.
2025-04-02 14:01:12.896 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.897 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:01:12.899 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:01:12.899 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:01:12.899 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:01:13.016 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 14:01:13.016 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 14:01:13.016 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 14:01:13.016 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 14:01:13.126 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 14:01:13.328 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 14:01:13.329 +04:00 INF Hosting environment: Development
2025-04-02 14:01:13.329 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 14:01:13.329 +04:00 DBG Hosting started
2025-04-02 14:01:13.884 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 14:01:13.905 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 14:01:13.906 +04:00 DBG Request did not match any endpoints
2025-04-02 14:01:13.991 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 14:01:13.993 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 14:01:14.095 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 14:01:14.098 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 14:01:14.108 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 1002.7632ms
2025-04-02 14:01:14.198 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 14:01:14.198 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 14:01:14.209 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 5.549ms
2025-04-02 14:01:14.210 +04:00 DBG Connection ID "18302628887244308485" disconnecting.
2025-04-02 14:01:14.299 +04:00 DBG Connection ID "17942340925644603393" disconnecting.
2025-04-02 14:01:14.300 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 101.5262ms
2025-04-02 14:01:14.446 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 14:01:14.446 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 14:01:14.446 +04:00 DBG Request did not match any endpoints
2025-04-02 14:01:14.474 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 28.2374ms
2025-04-02 14:01:14.475 +04:00 DBG Connection ID "18158513703463419908" disconnecting.
2025-04-02 14:02:02.178 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 67
2025-04-02 14:02:02.243 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 14:02:02.249 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 14:02:02.250 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:02:02.255 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:02:02.347 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 14:02:02.350 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:02:02.398 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 14:02:02.401 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:02:02.402 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:02:02.403 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:02:02.404 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:02:02.404 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:02:02.407 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:02:02.492 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:02:02.496 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:02:02.505 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 14:02:02.508 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 14:02:02.515 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 14:02:02.543 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 14:02:02.545 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:02:02.545 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:02:02.546 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 14:02:02.554 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:02:02.555 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:02:02.556 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:02:02.556 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:02:02.556 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:02:02.559 +04:00 INF Login attempt for randomuser@example.com
2025-04-02 14:02:02.569 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .SingleOrDefault(acc => acc.Email == __Email_0)'
2025-04-02 14:02:02.589 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 14:02:02.592 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 14:02:02.683 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:02:02.711 +04:00 DBG Creating DbConnection.
2025-04-02 14:02:02.712 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:02:02.712 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:02:02.713 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:02:02.714 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:02:02.714 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:02:02.719 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 14:02:02.722 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 14:02:02.772 +04:00 INF Executed DbCommand (53ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 14:02:02.849 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:02:02.883 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:02:02.883 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 110ms reading results.
2025-04-02 14:02:02.883 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:02:02.883 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:02:03.008 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:02:03.012 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:02:03.013 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:02:03.013 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:02:03.015 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:02:03.016 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 14:02:03.038 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 629.0294ms
2025-04-02 14:02:03.039 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:02:03.046 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:02:03.047 +04:00 DBG Connection ID "18158513699168452609" disconnecting.
2025-04-02 14:02:03.046 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:02:03.047 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:02:03.050 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 871.9027ms
2025-04-02 14:02:49.794 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories - null null
2025-04-02 14:02:49.797 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories'
2025-04-02 14:02:49.798 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)' with route pattern 'api/Admin/categories' is valid for the request path '/api/Admin/categories'
2025-04-02 14:02:49.798 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)'
2025-04-02 14:02:49.799 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:02:49.877 +04:00 DBG Successfully validated the token.
2025-04-02 14:02:49.880 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:02:49.896 +04:00 DBG Authorization was successful.
2025-04-02 14:02:49.896 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)'
2025-04-02 14:02:49.903 +04:00 INF Route matched with {action = "GetAllCategories", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategoriesAsync(System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:02:49.903 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:02:49.903 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:02:49.903 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:02:49.903 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:02:49.904 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:02:49.904 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:02:49.908 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:02:49.913 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:02:49.916 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:02:49.916 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:02:49.916 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:02:49.916 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:02:49.920 +04:00 DBG Compiling query expression: 
'DbSet<Category>()'
2025-04-02 14:02:49.927 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:02:49.930 +04:00 DBG Creating DbConnection.
2025-04-02 14:02:49.930 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:02:49.930 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:02:49.930 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:02:49.930 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:02:49.930 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:02:49.931 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:02:49.931 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2025-04-02 14:02:49.937 +04:00 INF Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2025-04-02 14:02:49.943 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:02:49.948 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:02:49.948 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 10ms reading results.
2025-04-02 14:02:49.948 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:02:49.949 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:02:49.965 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:02:49.965 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:02:49.966 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:02:49.966 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:02:49.966 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:02:49.966 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.CategoryResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 14:02:49.969 +04:00 INF Executed action offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API) in 65.3386ms
2025-04-02 14:02:49.969 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)'
2025-04-02 14:02:49.970 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:02:49.970 +04:00 DBG Connection ID "18158513707758387203" disconnecting.
2025-04-02 14:02:49.970 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:02:49.970 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:02:49.970 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories - 200 null application/json; charset=utf-8 177.1574ms
2025-04-02 14:03:03.413 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - null null
2025-04-02 14:03:03.415 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories/1'
2025-04-02 14:03:03.415 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)' with route pattern 'api/Admin/categories/{id}' is valid for the request path '/api/Admin/categories/1'
2025-04-02 14:03:03.415 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:03:03.415 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:03:03.420 +04:00 DBG Successfully validated the token.
2025-04-02 14:03:03.420 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:03:03.424 +04:00 DBG Authorization was successful.
2025-04-02 14:03:03.425 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:03:03.434 +04:00 INF Route matched with {action = "GetCategoryById", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategoryById(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:03:03.434 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:03:03.434 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:03:03.434 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:03:03.435 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:03:03.435 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:03:03.435 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:03:03.440 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:03:03.442 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:03:03.442 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:03:03.443 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:03:03.444 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:03:03.444 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:03:03.444 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:03:03.445 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:03:03.445 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:03:03.445 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:03:03.445 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:03:03.445 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:03:03.466 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-04-02 14:03:03.474 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(1) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(1) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:03:03.477 +04:00 DBG Creating DbConnection.
2025-04-02 14:03:03.477 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:03:03.477 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:03:03.477 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:03:03.477 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:03:03.478 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:03:03.478 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:03:03.479 +04:00 DBG Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__p_0
2025-04-02 14:06:28.621 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 14:06:28.794 +04:00 INF starting web host
2025-04-02 14:06:29.027 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:06:30.021 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:06:30.022 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:06:30.131 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:06:30.318 +04:00 DBG Creating DbConnection.
2025-04-02 14:06:30.401 +04:00 DBG Created DbConnection. (80ms).
2025-04-02 14:06:30.407 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:30.425 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:30.853 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:30.860 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:06:30.872 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (5ms).
2025-04-02 14:06:30.877 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (17ms).
2025-04-02 14:06:30.892 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:06:30.933 +04:00 INF Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:06:30.939 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:30.955 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (8ms).
2025-04-02 14:06:30.956 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:30.958 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:30.960 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:06:30.965 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:06:30.965 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:06:30.965 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:06:30.966 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:06:30.999 +04:00 INF Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:06:31.095 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:06:31.101 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:06:31.104 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:06:31.105 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:06:31.107 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-04-02 14:06:31.107 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:06:31.109 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:06:31.111 +04:00 DBG Committing transaction.
2025-04-02 14:06:31.114 +04:00 DBG Committed transaction.
2025-04-02 14:06:31.115 +04:00 DBG Disposing transaction.
2025-04-02 14:06:31.117 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:06:31.117 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:06:31.121 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:06:31.121 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:06:31.121 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:06:31.122 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:06:31.122 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:06:31.123 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:06:31.123 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:06:31.123 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:06:31.123 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:06:31.124 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:06:31.126 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:06:31.126 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:06:31.126 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:06:31.126 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:06:31.129 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:06:31.132 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:31.133 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:06:31.139 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 14:06:31.139 +04:00 DBG Committing transaction.
2025-04-02 14:06:31.139 +04:00 DBG Committed transaction.
2025-04-02 14:06:31.140 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:06:31.140 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:06:31.140 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:06:31.140 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:06:31.142 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:06:31.142 +04:00 DBG Disposing transaction.
2025-04-02 14:06:31.142 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:31.143 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:06:31.242 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 14:06:31.729 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 14:06:31.804 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:31.804 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:31.805 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:06:31.805 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:06:31.805 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:06:31.805 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:06:31.809 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:06:31.813 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:31.813 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 14:06:31.814 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:31.814 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:06:31.816 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:06:31.820 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:31.824 +04:00 DBG Disposed connection to database '' on server '' (3ms).
2025-04-02 14:06:31.831 +04:00 DBG Hosting starting
2025-04-02 14:06:31.907 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 14:06:31.947 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 14:06:31.975 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 14:06:31.999 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 14:06:32.011 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:06:32.012 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 14:06:32.015 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:06:32.018 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 14:06:32.024 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 14:06:32.029 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 14:06:32.031 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 14:06:32.095 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:06:32.112 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 14:06:32.211 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:06:32.238 +04:00 DBG Creating DbConnection.
2025-04-02 14:06:32.240 +04:00 DBG Created DbConnection. (2ms).
2025-04-02 14:06:32.244 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:32.248 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:32.248 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:06:32.248 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:06:32.249 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:06:32.249 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:06:32.274 +04:00 INF Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:06:32.290 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:32.291 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 16ms reading results.
2025-04-02 14:06:32.293 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:32.294 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:06:32.295 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:06:32.295 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:06:32.295 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:06:32.699 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 14:06:32.699 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 14:06:32.699 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 14:06:32.699 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 14:06:32.785 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 14:06:33.154 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 14:06:33.154 +04:00 INF Hosting environment: Development
2025-04-02 14:06:33.154 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 14:06:33.154 +04:00 DBG Hosting started
2025-04-02 14:06:33.519 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 14:06:33.549 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 14:06:33.550 +04:00 DBG Request did not match any endpoints
2025-04-02 14:06:33.776 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 14:06:33.779 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 14:06:33.864 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 14:06:33.865 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 14:06:33.878 +04:00 DBG Connection ID "18158513703463419910" disconnecting.
2025-04-02 14:06:33.881 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 1116.5477ms
2025-04-02 14:06:33.963 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 14:06:33.978 +04:00 DBG Connection ID "17942340925644603395" disconnecting.
2025-04-02 14:06:33.978 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 14:06:33.979 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 8.0806ms
2025-04-02 14:06:34.029 +04:00 DBG Connection ID "17942340925644603397" disconnecting.
2025-04-02 14:06:34.030 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 52.1089ms
2025-04-02 14:06:34.231 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 14:06:34.232 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 14:06:34.232 +04:00 DBG Request did not match any endpoints
2025-04-02 14:06:34.259 +04:00 DBG Connection ID "17942340925644603399" disconnecting.
2025-04-02 14:06:34.260 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 28.726ms
2025-04-02 14:07:08.018 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - null null
2025-04-02 14:07:08.041 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories/1'
2025-04-02 14:07:08.045 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)' with route pattern 'api/Admin/categories/{id}' is valid for the request path '/api/Admin/categories/1'
2025-04-02 14:07:08.046 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:07:08.051 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:07:08.204 +04:00 DBG Successfully validated the token.
2025-04-02 14:07:08.206 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:07:08.213 +04:00 DBG Authorization was successful.
2025-04-02 14:07:08.214 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:07:08.240 +04:00 INF Route matched with {action = "GetCategoryById", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategoryById(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:07:08.241 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:07:08.242 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:07:08.242 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:07:08.243 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:07:08.243 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:07:08.245 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:07:08.316 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:07:08.318 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:07:08.322 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:07:08.325 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:07:08.328 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:07:08.328 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:07:08.328 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:07:08.333 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:07:08.335 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:07:08.336 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:07:08.336 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:07:08.337 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:07:08.364 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-04-02 14:07:08.439 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(1) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(1) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:07:08.454 +04:00 DBG Creating DbConnection.
2025-04-02 14:07:08.454 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:07:08.454 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:07:08.455 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:07:08.455 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:07:08.455 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:07:08.458 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 14:07:08.466 +04:00 DBG Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__p_0
2025-04-02 14:12:03.798 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 14:12:03.942 +04:00 INF starting web host
2025-04-02 14:12:04.433 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:12:06.030 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:12:06.032 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:12:06.201 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:12:06.368 +04:00 DBG Creating DbConnection.
2025-04-02 14:12:06.429 +04:00 DBG Created DbConnection. (58ms).
2025-04-02 14:12:06.431 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:06.443 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:06.801 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:06.807 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:12:06.813 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (3ms).
2025-04-02 14:12:06.816 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (8ms).
2025-04-02 14:12:06.827 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:12:06.860 +04:00 INF Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:12:06.862 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:06.871 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (4ms).
2025-04-02 14:12:06.871 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:06.872 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:06.873 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:12:06.876 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:12:06.876 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:12:06.876 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:12:06.877 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:12:06.892 +04:00 INF Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:12:06.959 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:12:06.964 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:12:06.966 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:12:06.966 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:12:06.967 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 14:12:06.967 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:12:06.969 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:12:06.971 +04:00 DBG Committing transaction.
2025-04-02 14:12:06.974 +04:00 DBG Committed transaction.
2025-04-02 14:12:06.975 +04:00 DBG Disposing transaction.
2025-04-02 14:12:06.977 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:12:06.977 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:12:06.979 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:12:06.979 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:12:06.979 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:12:06.979 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:12:06.980 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:12:06.981 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:12:06.981 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:12:06.981 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:12:06.981 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:12:06.982 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:12:06.983 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:12:06.984 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:12:06.984 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:12:06.985 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:12:06.988 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:12:06.990 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:06.991 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:12:06.996 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 14:12:06.997 +04:00 DBG Committing transaction.
2025-04-02 14:12:06.997 +04:00 DBG Committed transaction.
2025-04-02 14:12:06.997 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:12:06.997 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:12:06.998 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:12:06.998 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:12:06.999 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:12:06.999 +04:00 DBG Disposing transaction.
2025-04-02 14:12:06.999 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:07.000 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:12:07.077 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 14:12:07.370 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 14:12:07.440 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:07.441 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:07.441 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:12:07.441 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:12:07.441 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:12:07.441 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:12:07.446 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:12:07.450 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:07.450 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 14:12:07.450 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:07.450 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:12:07.453 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:12:07.457 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:07.459 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 14:12:07.468 +04:00 DBG Hosting starting
2025-04-02 14:12:07.490 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 14:12:07.506 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 14:12:07.515 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 14:12:07.529 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 14:12:07.536 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:12:07.538 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 14:12:07.541 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:12:07.545 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 14:12:07.547 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 14:12:07.549 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 14:12:07.550 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 14:12:07.609 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:12:07.626 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 14:12:07.741 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:12:07.760 +04:00 DBG Creating DbConnection.
2025-04-02 14:12:07.761 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:12:07.763 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:07.765 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:07.766 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:12:07.766 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:12:07.766 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:12:07.767 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:12:07.783 +04:00 INF Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:12:07.794 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:07.795 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 10ms reading results.
2025-04-02 14:12:07.796 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:07.797 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:12:07.798 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:12:07.798 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:12:07.798 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:12:07.870 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 14:12:07.871 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 14:12:07.871 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 14:12:07.871 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 14:12:07.934 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 14:12:08.099 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 14:12:08.112 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 14:12:08.112 +04:00 INF Hosting environment: Development
2025-04-02 14:12:08.112 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 14:12:08.113 +04:00 DBG Hosting started
2025-04-02 14:12:08.150 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 14:12:08.151 +04:00 DBG Request did not match any endpoints
2025-04-02 14:12:08.261 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 14:12:08.264 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 14:12:08.320 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 14:12:08.321 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 14:12:08.332 +04:00 DBG Connection ID "18230571306091282437" disconnecting.
2025-04-02 14:12:08.337 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 415.4627ms
2025-04-02 14:12:08.430 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 14:12:08.434 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 14:12:08.437 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 7.0124ms
2025-04-02 14:12:08.506 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 72.0216ms
2025-04-02 14:12:08.506 +04:00 DBG Connection ID "18158513699168452613" disconnecting.
2025-04-02 14:12:08.679 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 14:12:08.679 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 14:12:08.680 +04:00 DBG Request did not match any endpoints
2025-04-02 14:12:08.708 +04:00 DBG Connection ID "18230571301796315139" disconnecting.
2025-04-02 14:12:08.709 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 29.9024ms
2025-04-02 14:12:30.027 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - null null
2025-04-02 14:12:30.047 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories/1'
2025-04-02 14:12:30.053 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)' with route pattern 'api/Admin/categories/{id}' is valid for the request path '/api/Admin/categories/1'
2025-04-02 14:12:30.054 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:12:30.058 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:12:30.190 +04:00 DBG Successfully validated the token.
2025-04-02 14:12:30.194 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:12:30.206 +04:00 DBG Authorization was successful.
2025-04-02 14:12:30.208 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:12:30.249 +04:00 INF Route matched with {action = "GetCategoryById", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategoryById(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:12:30.254 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:12:30.254 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:12:30.255 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:12:30.256 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:12:30.256 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:12:30.259 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:12:30.390 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:12:30.392 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:12:30.405 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:12:30.413 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:12:30.416 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:12:30.416 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:12:30.418 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:12:30.423 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:12:30.426 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:12:30.427 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:12:30.428 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:12:30.429 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:13:00.196 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-04-02 14:13:00.260 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(1) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(1) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:13:00.279 +04:00 DBG Creating DbConnection.
2025-04-02 14:13:00.280 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:13:00.280 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:13:00.282 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:13:00.282 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:13:00.283 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:13:00.288 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 14:13:00.293 +04:00 DBG Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__p_0
2025-04-02 14:13:00.411 +04:00 INF Executed DbCommand (122ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__p_0
2025-04-02 14:13:00.474 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:13:00.501 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:13:00.501 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 90ms reading results.
2025-04-02 14:13:00.502 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:13:00.502 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:13:02.105 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:13:02.110 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:13:02.110 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:13:02.111 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:13:02.112 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:13:02.113 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.CategoryResponseModel'.
2025-04-02 14:13:02.125 +04:00 INF Executed action offers.API.Controllers.AdminController.GetCategoryById (offers.API) in 31865.8579ms
2025-04-02 14:13:02.125 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:13:02.126 +04:00 DBG Connection ID "18230571297501347861" disconnecting.
2025-04-02 14:13:02.126 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:13:02.126 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:13:02.126 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:13:02.128 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - 200 null application/json; charset=utf-8 32101.1205ms
2025-04-02 14:16:03.502 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:16:04.058 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:16:04.060 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:16:04.124 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:16:04.151 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:16:20.043 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:16:20.538 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:16:20.540 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:16:20.611 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:16:21.276 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:16:34.420 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:16:35.202 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:16:35.204 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:16:35.280 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:16:35.419 +04:00 DBG Creating DbConnection.
2025-04-02 14:16:35.492 +04:00 DBG Created DbConnection. (67ms).
2025-04-02 14:16:35.497 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:16:35.505 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:16:35.698 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:16:35.706 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:16:35.715 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (7ms).
2025-04-02 14:16:35.718 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (15ms).
2025-04-02 14:16:35.726 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:16:35.750 +04:00 INF Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:16:35.751 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:16:35.761 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (4ms).
2025-04-02 14:16:35.762 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:16:35.763 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:16:35.763 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:16:35.765 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:16:35.765 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:16:35.765 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:16:35.766 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:16:35.785 +04:00 INF Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:16:35.881 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:16:35.892 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:16:35.894 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:16:35.894 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:16:35.896 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-04-02 14:16:35.897 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:16:35.899 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:16:35.901 +04:00 DBG Committing transaction.
2025-04-02 14:16:35.905 +04:00 DBG Committed transaction.
2025-04-02 14:16:35.907 +04:00 DBG Disposing transaction.
2025-04-02 14:16:35.910 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:16:35.910 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:16:35.913 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:16:35.913 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:16:35.913 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:16:35.913 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:16:35.914 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:16:35.914 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:16:35.914 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:16:35.914 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:16:35.915 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:16:35.916 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:16:35.919 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:16:35.920 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:16:35.920 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:16:35.920 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:16:35.925 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:16:35.929 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:16:35.930 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 14:16:36.066 +04:00 INF Applying migration '20250402101621_UpdateModels'.
2025-04-02 14:16:36.078 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:16:36.078 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:16:36.078 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:16:36.078 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250402101621_UpdateModels', N'9.0.3');
2025-04-02 14:16:36.085 +04:00 INF Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250402101621_UpdateModels', N'9.0.3');
2025-04-02 14:16:36.086 +04:00 DBG Committing transaction.
2025-04-02 14:16:36.087 +04:00 DBG Committed transaction.
2025-04-02 14:16:36.087 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:16:36.087 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:16:36.087 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:16:36.087 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:16:36.093 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:16:36.093 +04:00 DBG Disposing transaction.
2025-04-02 14:16:36.094 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:16:36.095 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (1ms).
2025-04-02 14:16:36.102 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:16:36.109 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:16:36.110 +04:00 DBG Disposed connection to database '' on server '' (2ms).
2025-04-02 14:17:19.133 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 14:17:19.274 +04:00 INF starting web host
2025-04-02 14:17:19.447 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:17:20.472 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:17:20.474 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:17:20.603 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:17:20.764 +04:00 DBG Creating DbConnection.
2025-04-02 14:17:20.813 +04:00 DBG Created DbConnection. (47ms).
2025-04-02 14:17:20.815 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:20.829 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.178 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.183 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:17:21.193 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-04-02 14:17:21.195 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (13ms).
2025-04-02 14:17:21.204 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:17:21.232 +04:00 INF Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:17:21.234 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.246 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (6ms).
2025-04-02 14:17:21.246 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.248 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.250 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:17:21.253 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:17:21.253 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:17:21.254 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:17:21.255 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:17:21.274 +04:00 INF Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:17:21.368 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:17:21.381 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:17:21.383 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:17:21.383 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:17:21.385 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-04-02 14:17:21.385 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:17:21.390 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:17:21.393 +04:00 DBG Committing transaction.
2025-04-02 14:17:21.398 +04:00 DBG Committed transaction.
2025-04-02 14:17:21.401 +04:00 DBG Disposing transaction.
2025-04-02 14:17:21.404 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:17:21.405 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:17:21.407 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:17:21.407 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:17:21.407 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:17:21.407 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:17:21.408 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:17:21.409 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:17:21.409 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:17:21.409 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:17:21.409 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:17:21.410 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:17:21.412 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:17:21.412 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:17:21.412 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:17:21.412 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:17:21.415 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:17:21.418 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.419 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:17:21.424 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 14:17:21.425 +04:00 DBG Committing transaction.
2025-04-02 14:17:21.425 +04:00 DBG Committed transaction.
2025-04-02 14:17:21.425 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:17:21.426 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:17:21.426 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:17:21.426 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:17:21.428 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:17:21.428 +04:00 DBG Disposing transaction.
2025-04-02 14:17:21.429 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.429 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:17:21.519 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 14:17:21.853 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 14:17:21.925 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.925 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.925 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:17:21.926 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:17:21.926 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:17:21.926 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:17:21.930 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:17:21.933 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.934 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:17:21.934 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.934 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:17:21.935 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:17:21.938 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:21.939 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 14:17:21.945 +04:00 DBG Hosting starting
2025-04-02 14:17:21.969 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 14:17:21.985 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 14:17:21.995 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 14:17:22.004 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 14:17:22.010 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:17:22.012 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 14:17:22.014 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:17:22.015 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 14:17:22.016 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 14:17:22.018 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 14:17:22.019 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 14:17:22.159 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:17:22.177 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 14:17:22.304 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:17:22.333 +04:00 DBG Creating DbConnection.
2025-04-02 14:17:22.334 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:17:22.337 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:22.343 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:22.343 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:17:22.343 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:17:22.343 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:17:22.344 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:17:22.418 +04:00 INF Executed DbCommand (74ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:17:22.442 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:22.454 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 34ms reading results.
2025-04-02 14:17:22.457 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:22.457 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:17:22.459 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:17:22.460 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:17:22.460 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:17:22.744 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 14:17:22.744 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 14:17:22.744 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 14:17:22.744 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 14:17:22.849 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 14:17:23.188 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 14:17:23.188 +04:00 INF Hosting environment: Development
2025-04-02 14:17:23.188 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 14:17:23.189 +04:00 DBG Hosting started
2025-04-02 14:17:23.279 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 14:17:23.342 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 14:17:23.343 +04:00 DBG Request did not match any endpoints
2025-04-02 14:17:23.481 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 14:17:23.484 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 14:17:23.581 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 14:17:23.582 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 14:17:23.592 +04:00 DBG Connection ID "18302628900129210376" disconnecting.
2025-04-02 14:17:23.597 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 788.7214ms
2025-04-02 14:17:24.125 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 14:17:24.138 +04:00 DBG Connection ID "18374686481282236436" disconnecting.
2025-04-02 14:17:24.138 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 14:17:24.138 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 7.2161ms
2025-04-02 14:17:24.200 +04:00 DBG Connection ID "18374686481282236438" disconnecting.
2025-04-02 14:17:24.204 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 66.2647ms
2025-04-02 14:17:24.568 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 14:17:24.568 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 14:17:24.569 +04:00 DBG Request did not match any endpoints
2025-04-02 14:17:24.642 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 74.2044ms
2025-04-02 14:17:44.928 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - null null
2025-04-02 14:17:44.951 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories/1'
2025-04-02 14:17:44.958 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)' with route pattern 'api/Admin/categories/{id}' is valid for the request path '/api/Admin/categories/1'
2025-04-02 14:17:44.959 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:17:44.963 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:17:45.118 +04:00 DBG Successfully validated the token.
2025-04-02 14:17:45.125 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:17:45.142 +04:00 DBG Authorization was successful.
2025-04-02 14:17:45.144 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:17:45.184 +04:00 INF Route matched with {action = "GetCategoryById", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategoryById(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:17:45.190 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:17:45.192 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:17:45.192 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:17:45.193 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:17:45.193 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:17:45.195 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:17:45.307 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:17:45.310 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:17:45.316 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:17:45.318 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:17:45.319 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:17:45.320 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:17:45.320 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:17:45.326 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:17:45.328 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:17:45.329 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:17:45.329 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:17:45.330 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:18:10.918 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-04-02 14:18:10.944 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(1) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(1) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:18:10.957 +04:00 DBG Creating DbConnection.
2025-04-02 14:18:10.957 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:18:10.957 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:18:10.958 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:18:10.958 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:18:10.958 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:18:10.962 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 14:18:10.966 +04:00 DBG Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__p_0
2025-04-02 14:18:11.025 +04:00 INF Executed DbCommand (34ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__p_0
2025-04-02 14:18:11.088 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:18:11.108 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:18:11.109 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 83ms reading results.
2025-04-02 14:18:11.109 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:18:11.109 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:18:17.614 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:18:17.619 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:18:17.619 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:18:17.620 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:18:17.621 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:18:17.622 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.CategoryResponseModel'.
2025-04-02 14:18:17.635 +04:00 INF Executed action offers.API.Controllers.AdminController.GetCategoryById (offers.API) in 32437.731ms
2025-04-02 14:18:17.636 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:18:17.636 +04:00 DBG Connection ID "18086456118015426561" disconnecting.
2025-04-02 14:18:17.636 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:18:17.636 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:18:17.637 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:18:17.639 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - 200 null application/json; charset=utf-8 32710.4266ms
2025-04-02 14:20:34.862 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:20:35.433 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:20:35.435 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:20:35.516 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:20:35.552 +04:00 DBG Creating DbConnection.
2025-04-02 14:20:35.590 +04:00 DBG Created DbConnection. (33ms).
2025-04-02 14:20:35.592 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:20:35.598 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:20:35.813 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:20:35.822 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:20:35.827 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (7ms).
2025-04-02 14:20:35.829 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (11ms).
2025-04-02 14:20:35.837 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:20:35.863 +04:00 INF Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:20:35.865 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:20:35.875 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (6ms).
2025-04-02 14:20:35.875 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:20:35.876 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:20:35.878 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:20:35.882 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:20:35.882 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:20:35.882 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:20:35.883 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:20:35.903 +04:00 INF Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:20:36.171 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:20:36.181 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:20:36.183 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:20:36.183 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:20:36.184 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 14:20:36.184 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:20:36.186 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:20:36.187 +04:00 DBG Committing transaction.
2025-04-02 14:20:36.190 +04:00 DBG Committed transaction.
2025-04-02 14:20:36.192 +04:00 DBG Disposing transaction.
2025-04-02 14:20:36.194 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:20:36.194 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:20:36.196 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:20:36.196 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:20:36.197 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:20:36.197 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:20:36.197 +04:00 INF Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:20:36.198 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:20:36.198 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:20:36.198 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:20:36.198 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:20:36.199 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:20:36.200 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:20:36.200 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:20:36.200 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:20:36.201 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:20:36.203 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:20:36.207 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:20:36.209 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 14:20:36.227 +04:00 INF Reverting migration '20250402101621_UpdateModels'.
2025-04-02 14:20:36.247 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:20:36.247 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:20:36.248 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:20:36.248 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [__EFMigrationsHistory]
WHERE [MigrationId] = N'20250402101621_UpdateModels';
2025-04-02 14:20:36.259 +04:00 INF Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM [__EFMigrationsHistory]
WHERE [MigrationId] = N'20250402101621_UpdateModels';
2025-04-02 14:20:36.260 +04:00 DBG Committing transaction.
2025-04-02 14:20:36.262 +04:00 DBG Committed transaction.
2025-04-02 14:20:36.263 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:20:36.263 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:20:36.263 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:20:36.263 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:20:36.743 +04:00 INF Executed DbCommand (480ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:20:36.744 +04:00 DBG Disposing transaction.
2025-04-02 14:20:36.744 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:20:36.745 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:20:36.749 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:20:36.751 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:20:36.752 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 14:21:13.227 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:21:13.855 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:21:13.858 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:21:13.970 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:21:14.611 +04:00 DBG Creating DbConnection.
2025-04-02 14:21:14.646 +04:00 DBG Created DbConnection. (32ms).
2025-04-02 14:21:14.653 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:21:14.854 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:21:14.863 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:21:14.872 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (8ms).
2025-04-02 14:21:14.875 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (16ms).
2025-04-02 14:21:14.883 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:21:14.913 +04:00 INF Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:21:14.914 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:21:14.922 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (3ms).
2025-04-02 14:21:14.924 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:21:14.924 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:21:14.924 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:21:14.924 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:21:14.925 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:21:14.925 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:21:14.940 +04:00 INF Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:21:14.940 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:21:14.941 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:21:14.950 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:21:14.950 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:21:14.950 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:21:14.950 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:21:14.950 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:21:14.951 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:21:14.954 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:21:14.956 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:21:14.958 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:21:14.958 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:21:14.958 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:21:15.128 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:21:15.132 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:21:15.134 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 14:22:55.334 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 14:22:55.487 +04:00 INF starting web host
2025-04-02 14:22:55.682 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:22:56.579 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:22:56.580 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:22:56.709 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:22:56.891 +04:00 DBG Creating DbConnection.
2025-04-02 14:22:56.938 +04:00 DBG Created DbConnection. (45ms).
2025-04-02 14:22:56.940 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:56.953 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:57.344 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:57.348 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:22:57.355 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (3ms).
2025-04-02 14:22:57.357 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (9ms).
2025-04-02 14:22:57.364 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:22:57.388 +04:00 INF Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:22:57.391 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:57.402 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (8ms).
2025-04-02 14:22:57.402 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:57.403 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:57.404 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:22:57.406 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:22:57.406 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:22:57.407 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:22:57.407 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:22:57.423 +04:00 INF Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:22:57.500 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:22:57.506 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:22:57.507 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:22:57.507 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:22:57.509 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-04-02 14:22:57.509 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:22:57.512 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:22:57.514 +04:00 DBG Committing transaction.
2025-04-02 14:22:57.517 +04:00 DBG Committed transaction.
2025-04-02 14:22:57.518 +04:00 DBG Disposing transaction.
2025-04-02 14:22:57.520 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:22:57.520 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:22:57.522 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:22:57.522 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:22:57.522 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:22:57.522 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:22:57.523 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:22:57.523 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:22:57.523 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:22:57.523 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:22:57.524 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:22:57.525 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:22:57.530 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:22:57.530 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:22:57.530 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:22:57.530 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:22:57.533 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:22:57.535 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:57.536 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:22:57.541 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 14:22:57.543 +04:00 DBG Committing transaction.
2025-04-02 14:22:57.544 +04:00 DBG Committed transaction.
2025-04-02 14:22:57.544 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:22:57.544 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:22:57.544 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:22:57.544 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:22:57.546 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:22:57.546 +04:00 DBG Disposing transaction.
2025-04-02 14:22:57.546 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:57.547 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:22:57.635 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 14:22:57.945 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 14:22:58.024 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:58.024 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:58.025 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:22:58.025 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:22:58.025 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:22:58.025 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:22:58.030 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:22:58.034 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:58.034 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 14:22:58.034 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:58.034 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:22:58.037 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:22:58.041 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:58.043 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 14:22:58.050 +04:00 DBG Hosting starting
2025-04-02 14:22:58.082 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 14:22:58.103 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 14:22:58.116 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 14:22:58.131 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 14:22:58.136 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:22:58.137 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 14:22:58.140 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:22:58.146 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 14:22:58.149 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 14:22:58.151 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 14:22:58.152 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 14:22:58.183 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:22:58.200 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 14:22:58.287 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:22:58.313 +04:00 DBG Creating DbConnection.
2025-04-02 14:22:58.314 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:22:58.315 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:58.318 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:58.319 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:22:58.319 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:22:58.319 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:22:58.320 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:22:58.340 +04:00 INF Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:22:58.358 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:58.360 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 19ms reading results.
2025-04-02 14:22:58.363 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:58.364 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (1ms).
2025-04-02 14:22:58.367 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:22:58.367 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:22:58.367 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:22:58.468 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 14:22:58.468 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 14:22:58.468 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 14:22:58.468 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 14:22:58.559 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 14:22:58.746 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 14:22:58.747 +04:00 INF Hosting environment: Development
2025-04-02 14:22:58.747 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 14:22:58.747 +04:00 DBG Hosting started
2025-04-02 14:22:58.783 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 14:22:58.826 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 14:22:58.826 +04:00 DBG Request did not match any endpoints
2025-04-02 14:22:58.921 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 14:22:58.927 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 14:22:59.009 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 14:22:59.010 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 14:22:59.057 +04:00 DBG Connection ID "18230571301796315141" disconnecting.
2025-04-02 14:22:59.062 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 506.5138ms
2025-04-02 14:22:59.069 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 14:22:59.073 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 14:22:59.082 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 13.7074ms
2025-04-02 14:22:59.145 +04:00 DBG Connection ID "18158513703463419920" disconnecting.
2025-04-02 14:22:59.147 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 73.9014ms
2025-04-02 14:22:59.255 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 14:22:59.256 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 14:22:59.256 +04:00 DBG Request did not match any endpoints
2025-04-02 14:22:59.335 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 80.045ms
2025-04-02 14:23:29.851 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - null null
2025-04-02 14:23:29.883 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories/1'
2025-04-02 14:23:29.890 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)' with route pattern 'api/Admin/categories/{id}' is valid for the request path '/api/Admin/categories/1'
2025-04-02 14:23:29.892 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:23:29.896 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:23:30.036 +04:00 DBG Successfully validated the token.
2025-04-02 14:23:30.042 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:23:30.051 +04:00 DBG Authorization was successful.
2025-04-02 14:23:30.053 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:23:30.106 +04:00 INF Route matched with {action = "GetCategoryById", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategoryById(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:23:30.109 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:23:30.109 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:23:30.110 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:23:30.111 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:23:30.111 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:23:30.114 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:23:30.185 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:23:30.186 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:23:30.194 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:23:30.197 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:23:30.199 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:23:30.199 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:23:30.199 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:23:30.202 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:23:30.203 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:23:30.204 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:23:30.204 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:23:30.204 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:23:35.242 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .SingleOrDefault(cat => cat.Id == __id_0)'
2025-04-02 14:23:35.254 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:23:35.266 +04:00 DBG Creating DbConnection.
2025-04-02 14:23:35.266 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:23:35.266 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:23:35.267 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:23:35.267 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:23:35.267 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:23:35.273 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 14:23:35.277 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 14:23:35.357 +04:00 INF Executed DbCommand (84ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 14:23:35.417 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:23:35.447 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:23:35.447 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 90ms reading results.
2025-04-02 14:23:35.448 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:23:35.448 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:23:35.587 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:23:36.187 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:23:36.187 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:23:36.187 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:23:36.189 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:23:36.190 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.CategoryResponseModel'.
2025-04-02 14:23:36.200 +04:00 INF Executed action offers.API.Controllers.AdminController.GetCategoryById (offers.API) in 6085.4114ms
2025-04-02 14:23:36.200 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:23:36.200 +04:00 DBG Connection ID "18230571301796315143" disconnecting.
2025-04-02 14:23:36.200 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:23:36.201 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:23:36.201 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:23:36.204 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - 200 null application/json; charset=utf-8 6352.6276ms
2025-04-02 14:27:11.131 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 14:27:11.344 +04:00 INF starting web host
2025-04-02 14:27:11.676 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:27:12.738 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:27:12.739 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:27:12.930 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:27:13.382 +04:00 DBG Creating DbConnection.
2025-04-02 14:27:13.447 +04:00 DBG Created DbConnection. (63ms).
2025-04-02 14:27:13.450 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:13.465 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.045 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.049 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:27:14.057 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (5ms).
2025-04-02 14:27:14.059 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (10ms).
2025-04-02 14:27:14.065 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:27:14.096 +04:00 INF Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:27:14.099 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.116 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (10ms).
2025-04-02 14:27:14.116 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.119 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.121 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:27:14.125 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:27:14.125 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:27:14.125 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:27:14.126 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:27:14.152 +04:00 INF Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:27:14.239 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:27:14.244 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:27:14.245 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:27:14.245 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:27:14.249 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-04-02 14:27:14.249 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:27:14.256 +04:00 INF Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:27:14.259 +04:00 DBG Committing transaction.
2025-04-02 14:27:14.264 +04:00 DBG Committed transaction.
2025-04-02 14:27:14.268 +04:00 DBG Disposing transaction.
2025-04-02 14:27:14.274 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:27:14.276 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:27:14.279 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:27:14.279 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:27:14.280 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:27:14.280 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:27:14.284 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:27:14.284 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:27:14.284 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:27:14.284 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:27:14.285 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:27:14.287 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:27:14.292 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:27:14.292 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:27:14.293 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:27:14.295 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:27:14.319 +04:00 INF Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:27:14.325 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.328 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 5ms reading results.
2025-04-02 14:27:14.340 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 14:27:14.341 +04:00 DBG Committing transaction.
2025-04-02 14:27:14.341 +04:00 DBG Committed transaction.
2025-04-02 14:27:14.341 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:27:14.341 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:27:14.341 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:27:14.342 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:27:14.343 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:27:14.343 +04:00 DBG Disposing transaction.
2025-04-02 14:27:14.343 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.344 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:27:14.433 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 14:27:14.775 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 14:27:14.826 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.826 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.826 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:27:14.827 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:27:14.827 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:27:14.827 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:27:14.831 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:27:14.835 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.835 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 14:27:14.835 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.835 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:27:14.837 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:27:14.840 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:14.841 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 14:27:14.847 +04:00 DBG Hosting starting
2025-04-02 14:27:14.874 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 14:27:14.890 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 14:27:14.899 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 14:27:14.908 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 14:27:14.911 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:27:14.912 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 14:27:14.913 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:27:14.915 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 14:27:14.916 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 14:27:14.918 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 14:27:14.919 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 14:27:14.943 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:27:14.958 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 14:27:15.039 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:27:15.065 +04:00 DBG Creating DbConnection.
2025-04-02 14:27:15.066 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:27:15.068 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:15.071 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:15.071 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:27:15.071 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:27:15.071 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:27:15.072 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:27:15.096 +04:00 INF Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:27:15.109 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:15.111 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 14ms reading results.
2025-04-02 14:27:15.114 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:15.115 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:27:15.117 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:27:15.117 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:15.117 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:27:15.196 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 14:27:15.196 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 14:27:15.196 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 14:27:15.196 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 14:27:15.279 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 14:27:15.437 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 14:27:15.443 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 14:27:15.443 +04:00 INF Hosting environment: Development
2025-04-02 14:27:15.443 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 14:27:15.444 +04:00 DBG Hosting started
2025-04-02 14:27:15.478 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 14:27:15.479 +04:00 DBG Request did not match any endpoints
2025-04-02 14:27:15.602 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 14:27:15.604 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 14:27:15.670 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 14:27:15.670 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 14:27:15.678 +04:00 DBG Connection ID "17942340925644603412" disconnecting.
2025-04-02 14:27:15.682 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 423.6137ms
2025-04-02 14:27:15.720 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 14:27:15.722 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 14:27:15.730 +04:00 DBG Connection ID "18014398515387564040" disconnecting.
2025-04-02 14:27:15.731 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 10.2067ms
2025-04-02 14:27:15.792 +04:00 DBG Connection ID "17942340925644603414" disconnecting.
2025-04-02 14:27:15.794 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 71.7051ms
2025-04-02 14:27:16.077 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 14:27:16.078 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 14:27:16.078 +04:00 DBG Request did not match any endpoints
2025-04-02 14:27:16.114 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 36.677ms
2025-04-02 14:27:16.114 +04:00 DBG Connection ID "18374686481282236440" disconnecting.
2025-04-02 14:27:39.508 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - null null
2025-04-02 14:27:39.559 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories/1'
2025-04-02 14:27:39.565 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)' with route pattern 'api/Admin/categories/{id}' is valid for the request path '/api/Admin/categories/1'
2025-04-02 14:27:39.568 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:27:39.573 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:27:39.719 +04:00 DBG Successfully validated the token.
2025-04-02 14:27:39.722 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:27:39.728 +04:00 DBG Authorization was successful.
2025-04-02 14:27:39.730 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:27:39.755 +04:00 INF Route matched with {action = "GetCategoryById", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategoryById(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:27:39.757 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:27:39.757 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:27:39.758 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:27:39.758 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:27:39.758 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:27:39.760 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:27:39.829 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:27:39.831 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:27:39.837 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:27:39.839 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:27:39.841 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:27:39.841 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:27:39.841 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:27:39.844 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:27:39.845 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:27:39.846 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:27:39.846 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:27:39.847 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:27:46.835 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .AsNoTracking()
    .SingleOrDefault(cat => cat.Id == __id_0)'
2025-04-02 14:27:46.849 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                (object)dataReader.GetInt32(0) != null ? 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: NoTracking, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    return instance1;
                } : 
                {
                    object[] keyValues1;
                    keyValues1 = new object[]{ (object)dataReader.GetInt32(0) };
                    return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                        entityType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")], 
                        properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd } | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey().Properties], 
                        keyValues: keyValues1);
                };
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:27:46.861 +04:00 DBG Creating DbConnection.
2025-04-02 14:27:46.861 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:27:46.861 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:46.862 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:46.862 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:27:46.862 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:27:46.866 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 14:27:46.868 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 14:27:46.942 +04:00 INF Executed DbCommand (76ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 14:27:46.947 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:46.947 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 14:27:46.947 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:46.947 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:27:49.424 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:27:49.427 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:27:49.427 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:27:49.427 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:27:49.429 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:27:49.429 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.CategoryResponseModel'.
2025-04-02 14:27:49.454 +04:00 INF Executed action offers.API.Controllers.AdminController.GetCategoryById (offers.API) in 9683.7118ms
2025-04-02 14:27:49.454 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:27:49.455 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:27:49.455 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:27:49.455 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:27:49.456 +04:00 DBG Connection ID "18230571297501347868" disconnecting.
2025-04-02 14:27:49.458 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - 200 null application/json; charset=utf-8 9949.6795ms
2025-04-02 14:29:50.677 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 14:29:50.831 +04:00 INF starting web host
2025-04-02 14:29:50.989 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:29:51.867 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:29:51.869 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:29:52.076 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:29:52.413 +04:00 DBG Creating DbConnection.
2025-04-02 14:29:52.479 +04:00 DBG Created DbConnection. (62ms).
2025-04-02 14:29:52.482 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:52.503 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.129 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.134 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:29:53.142 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (6ms).
2025-04-02 14:29:53.144 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (10ms).
2025-04-02 14:29:53.149 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:29:53.175 +04:00 INF Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:29:53.177 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.187 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (4ms).
2025-04-02 14:29:53.188 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.190 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.191 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:29:53.194 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:29:53.194 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:29:53.194 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:29:53.195 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:29:53.213 +04:00 INF Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:29:53.291 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:29:53.299 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:29:53.301 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:29:53.301 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:29:53.303 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-04-02 14:29:53.304 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:29:53.307 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:29:53.309 +04:00 DBG Committing transaction.
2025-04-02 14:29:53.314 +04:00 DBG Committed transaction.
2025-04-02 14:29:53.315 +04:00 DBG Disposing transaction.
2025-04-02 14:29:53.317 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:29:53.318 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:29:53.321 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:29:53.322 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:29:53.322 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:29:53.322 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:29:53.323 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:29:53.323 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:29:53.323 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:29:53.323 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:29:53.323 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:29:53.324 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:29:53.326 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:29:53.326 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:29:53.326 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:29:53.327 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:29:53.329 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:29:53.332 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.333 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:29:53.341 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 14:29:53.341 +04:00 DBG Committing transaction.
2025-04-02 14:29:53.341 +04:00 DBG Committed transaction.
2025-04-02 14:29:53.342 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:29:53.342 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:29:53.342 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:29:53.342 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:29:53.344 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:29:53.344 +04:00 DBG Disposing transaction.
2025-04-02 14:29:53.344 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.345 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:29:53.397 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 14:29:53.725 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 14:29:53.782 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.783 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.783 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:29:53.783 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:29:53.783 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:29:53.784 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:29:53.792 +04:00 INF Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:29:53.795 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.795 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:29:53.795 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.795 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:29:53.797 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:29:53.802 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:53.805 +04:00 DBG Disposed connection to database '' on server '' (2ms).
2025-04-02 14:29:53.814 +04:00 DBG Hosting starting
2025-04-02 14:29:53.837 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 14:29:53.852 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 14:29:53.860 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 14:29:53.874 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 14:29:53.877 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:29:53.878 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 14:29:53.880 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:29:53.881 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 14:29:53.883 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 14:29:53.885 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 14:29:53.886 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 14:29:53.911 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:29:53.924 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 14:29:54.023 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:29:54.042 +04:00 DBG Creating DbConnection.
2025-04-02 14:29:54.043 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:29:54.044 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:54.048 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:54.048 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:29:54.048 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:29:54.049 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:29:54.049 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:29:54.074 +04:00 INF Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:29:54.089 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:54.090 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 15ms reading results.
2025-04-02 14:29:54.092 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:54.093 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:29:54.094 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:29:54.094 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:29:54.094 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:29:54.194 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 14:29:54.194 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 14:29:54.194 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 14:29:54.194 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 14:29:54.265 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 14:29:54.463 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 14:29:54.464 +04:00 INF Hosting environment: Development
2025-04-02 14:29:54.464 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 14:29:54.464 +04:00 DBG Hosting started
2025-04-02 14:29:54.531 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 14:29:54.564 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 14:29:54.565 +04:00 DBG Request did not match any endpoints
2025-04-02 14:29:54.660 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 14:29:54.662 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 14:29:54.743 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 14:29:54.745 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 14:29:54.825 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 14:29:54.830 +04:00 DBG Connection ID "17942340925644603417" disconnecting.
2025-04-02 14:29:54.831 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 566.6616ms
2025-04-02 14:29:54.837 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 11.7925ms
2025-04-02 14:29:54.838 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 14:29:54.921 +04:00 DBG Connection ID "17942340921349636099" disconnecting.
2025-04-02 14:29:54.925 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 87.1065ms
2025-04-02 14:29:55.009 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 14:29:55.009 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 14:29:55.009 +04:00 DBG Request did not match any endpoints
2025-04-02 14:29:55.079 +04:00 DBG Connection ID "18158513699168452618" disconnecting.
2025-04-02 14:29:55.079 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 70.7318ms
2025-04-02 14:30:10.812 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - null null
2025-04-02 14:30:10.825 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories/1'
2025-04-02 14:30:10.829 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)' with route pattern 'api/Admin/categories/{id}' is valid for the request path '/api/Admin/categories/1'
2025-04-02 14:30:10.830 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:30:10.835 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:30:10.972 +04:00 DBG Successfully validated the token.
2025-04-02 14:30:10.975 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:30:10.982 +04:00 DBG Authorization was successful.
2025-04-02 14:30:10.983 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:30:11.010 +04:00 INF Route matched with {action = "GetCategoryById", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategoryById(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:30:11.011 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:30:11.012 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:30:11.013 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:30:11.013 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:30:11.013 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:30:11.015 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:30:11.090 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:30:11.091 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:30:11.095 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:30:11.098 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:30:11.100 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:30:11.100 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:30:11.101 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:30:11.106 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:30:11.107 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:30:11.108 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:30:11.108 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:30:11.109 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:30:19.430 +04:00 DBG Compiling query expression: 
'DbSet<Category>().FromSql(SELECT * FROM Categories WHERE Id = {0}, __p_0)
    .AsNoTracking()
    .SingleOrDefault(cat => cat.Id == __id_1)'
2025-04-02 14:30:19.446 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) o.Id, o.Description, o.Name
            FROM SELECT * FROM Categories WHERE Id = {0}
            WHERE o.Id == @__id_1) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) o.Id, o.Description, o.Name
            FROM SELECT * FROM Categories WHERE Id = {0}
            WHERE o.Id == @__id_1, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                (object)dataReader.GetInt32(0) != null ? 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: NoTracking, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    return instance1;
                } : 
                {
                    object[] keyValues1;
                    keyValues1 = new object[]{ (object)dataReader.GetInt32(0) };
                    return ShapedQueryCompilingExpressionVisitor.CreateNullKeyValueInNoTrackingQuery(
                        entityType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")], 
                        properties: [LIFTABLE Constant: List<RuntimeProperty> { Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd } | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey().Properties], 
                        keyValues: keyValues1);
                };
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:30:19.463 +04:00 DBG Creating DbConnection.
2025-04-02 14:30:19.463 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:30:19.464 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:30:19.464 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:30:19.464 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:30:19.464 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:30:19.469 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 14:30:19.474 +04:00 DBG Executing DbCommand [Parameters=[p0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[Description], [o].[Name]
FROM (
    SELECT * FROM Categories WHERE Id = @p0
) AS [o]
WHERE [o].[Id] = @__id_1
2025-04-02 14:30:19.526 +04:00 INF Executed DbCommand (56ms) [Parameters=[p0='?' (DbType = Int32), @__id_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[Description], [o].[Name]
FROM (
    SELECT * FROM Categories WHERE Id = @p0
) AS [o]
WHERE [o].[Id] = @__id_1
2025-04-02 14:30:19.529 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:30:19.529 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 14:30:19.529 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:30:19.530 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:30:20.165 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:30:20.170 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:30:20.170 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:30:20.171 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:30:20.172 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:30:20.173 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.CategoryResponseModel'.
2025-04-02 14:30:20.186 +04:00 INF Executed action offers.API.Controllers.AdminController.GetCategoryById (offers.API) in 9167.0011ms
2025-04-02 14:30:20.186 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:30:20.187 +04:00 DBG Connection ID "18158513699168452620" disconnecting.
2025-04-02 14:30:20.187 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:30:20.187 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:30:20.187 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:30:20.189 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - 200 null application/json; charset=utf-8 9377.6483ms
2025-04-02 14:32:56.590 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/companies - null null
2025-04-02 14:32:56.597 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/companies'
2025-04-02 14:32:56.597 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetAllCompanies (offers.API)' with route pattern 'api/Admin/companies' is valid for the request path '/api/Admin/companies'
2025-04-02 14:32:56.597 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetAllCompanies (offers.API)'
2025-04-02 14:32:56.598 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:32:56.610 +04:00 DBG Successfully validated the token.
2025-04-02 14:32:56.610 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:32:56.612 +04:00 DBG Authorization was successful.
2025-04-02 14:32:56.612 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetAllCompanies (offers.API)'
2025-04-02 14:32:56.621 +04:00 INF Route matched with {action = "GetAllCompanies", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCompanies(System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:32:56.621 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:32:56.621 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:32:56.622 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:32:56.622 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:32:56.622 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:32:56.622 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:32:56.626 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:32:56.627 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:32:56.629 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:32:56.633 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:32:56.633 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:32:56.633 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:32:56.642 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.CompanyDetail)
    .Where(acc => (int)acc.Role == 1)'
2025-04-02 14:32:56.665 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 14:32:56.749 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Account>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
            1 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 6], [Property: CompanyDetail.IsActive (bool) Required, 7] }
        SELECT a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, c.AccountId, c.CompanyName, c.IsActive
        FROM Accounts AS a
        LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
        WHERE a.Role == 'Company') | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
            1 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 6], [Property: CompanyDetail.IsActive (bool) Required, 7] }
        SELECT a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, c.AccountId, c.CompanyName, c.IsActive
        FROM Accounts AS a
        LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
        WHERE a.Role == 'Company', 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Account entity;
        CompanyDetail entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Account instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Account);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Account)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                        {
                            return 
                            {
                                Account instance;
                                instance = new Account();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                instance.<Phone>k__BackingField = dataReader.GetString(3);
                                instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Account)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            CompanyDetail instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(CompanyDetail);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                throwOnNullKey: False, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (CompanyDetail)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                        {
                            return 
                            {
                                CompanyDetail instance;
                                instance = new CompanyDetail();
                                instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                instance.<CompanyName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                instance.<IsActive>k__BackingField = dataReader.IsDBNull(7) ? default(bool) : dataReader.GetBoolean(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(CompanyDetail)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
            fixup: (namelessParameter{9}, namelessParameter{10}) => 
            {
                namelessParameter{9}.<CompanyDetail>k__BackingField = namelessParameter{10};
                return namelessParameter{10}.<Account>k__BackingField = namelessParameter{9};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:32:56.758 +04:00 DBG Creating DbConnection.
2025-04-02 14:32:56.758 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:32:56.758 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:32:56.758 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:32:56.758 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:32:56.758 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:32:56.759 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:32:56.759 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Role] = 'Company'
2025-04-02 14:32:56.773 +04:00 INF Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Role] = 'Company'
2025-04-02 14:32:56.816 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:32:56.859 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:32:56.861 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:32:56.867 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:32:56.867 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 94ms reading results.
2025-04-02 14:32:56.868 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:32:56.869 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:32:56.891 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:32:56.892 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:32:56.892 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:32:56.892 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:32:56.892 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:32:56.892 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.CompanyResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 14:32:56.904 +04:00 INF Executed action offers.API.Controllers.AdminController.GetAllCompanies (offers.API) in 282.1687ms
2025-04-02 14:32:56.905 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetAllCompanies (offers.API)'
2025-04-02 14:32:56.909 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:32:56.909 +04:00 DBG Connection ID "18374686481282236444" disconnecting.
2025-04-02 14:32:56.910 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:32:56.910 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:32:56.911 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/companies - 200 null application/json; charset=utf-8 352.9051ms
2025-04-02 14:33:18.378 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories - null null
2025-04-02 14:33:18.378 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories'
2025-04-02 14:33:18.379 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)' with route pattern 'api/Admin/categories' is valid for the request path '/api/Admin/categories'
2025-04-02 14:33:18.379 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)'
2025-04-02 14:33:18.379 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:33:18.386 +04:00 DBG Successfully validated the token.
2025-04-02 14:33:18.386 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:33:18.390 +04:00 DBG Authorization was successful.
2025-04-02 14:33:18.391 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)'
2025-04-02 14:33:18.395 +04:00 INF Route matched with {action = "GetAllCategories", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategoriesAsync(System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:33:18.395 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:33:18.395 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:33:18.395 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:33:18.395 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:33:18.395 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:33:18.396 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:33:18.399 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:33:18.403 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:33:18.403 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:33:18.403 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:33:18.403 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:33:18.404 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:33:27.463 +04:00 DBG Compiling query expression: 
'DbSet<Category>()'
2025-04-02 14:33:27.469 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:33:27.472 +04:00 DBG Creating DbConnection.
2025-04-02 14:33:27.472 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:33:27.472 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:33:27.474 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:33:27.474 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:33:27.475 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:33:27.475 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:33:27.476 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2025-04-02 14:33:27.482 +04:00 INF Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2025-04-02 14:33:27.526 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:33:27.531 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:33:27.532 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 19ms reading results.
2025-04-02 14:33:27.532 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:33:27.532 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:33:45.510 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:33:45.510 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:33:45.510 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:33:45.510 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:33:45.510 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:33:45.511 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.CategoryResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 14:33:45.583 +04:00 INF Executed action offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API) in 27187.2708ms
2025-04-02 14:33:45.583 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)'
2025-04-02 14:33:45.583 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:33:45.583 +04:00 DBG Connection ID "18158513703463419928" disconnecting.
2025-04-02 14:33:45.583 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:33:45.584 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:33:45.584 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories - 200 null application/json; charset=utf-8 27206.2068ms
2025-04-02 14:34:54.106 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:34:54.115 +04:00 DBG Creating DbConnection.
2025-04-02 14:34:54.115 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:34:54.115 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:34:54.116 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:34:54.116 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:34:54.116 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:34:54.116 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:34:54.116 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:34:54.119 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:34:54.119 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:34:54.119 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 14:34:54.119 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:34:54.119 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:34:54.119 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:34:54.120 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:34:54.120 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:39:54.130 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:39:54.130 +04:00 DBG Creating DbConnection.
2025-04-02 14:39:54.130 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:39:54.131 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:39:54.173 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:39:54.174 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:39:54.174 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:39:54.174 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:39:54.174 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:39:54.179 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:39:54.180 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:39:54.183 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 14:39:54.186 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:39:54.186 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:39:54.186 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:39:54.186 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:39:54.186 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:42:28.657 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 14:42:28.794 +04:00 INF starting web host
2025-04-02 14:42:28.962 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:42:29.726 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:42:29.727 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:42:29.827 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:42:29.988 +04:00 DBG Creating DbConnection.
2025-04-02 14:42:30.066 +04:00 DBG Created DbConnection. (68ms).
2025-04-02 14:42:30.071 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:30.088 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:30.405 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:30.409 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:42:30.417 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-04-02 14:42:30.420 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (10ms).
2025-04-02 14:42:30.426 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:42:30.460 +04:00 INF Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:42:30.462 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:30.473 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (7ms).
2025-04-02 14:42:30.473 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:30.474 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:30.475 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:42:30.477 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:42:30.478 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:42:30.478 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:42:30.478 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:42:30.505 +04:00 INF Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:42:30.604 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:42:30.613 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:42:30.615 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:42:30.616 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:42:30.617 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 14:42:30.617 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:42:30.619 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:42:30.621 +04:00 DBG Committing transaction.
2025-04-02 14:42:30.625 +04:00 DBG Committed transaction.
2025-04-02 14:42:30.626 +04:00 DBG Disposing transaction.
2025-04-02 14:42:30.628 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:42:30.629 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:42:30.631 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:42:30.631 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:42:30.631 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:42:30.631 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:42:30.632 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:42:30.633 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:42:30.633 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:42:30.633 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:42:30.633 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:42:30.634 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:42:30.637 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:42:30.637 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:42:30.637 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:42:30.638 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:42:30.642 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:42:30.645 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:30.646 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:42:30.654 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 14:42:30.655 +04:00 DBG Committing transaction.
2025-04-02 14:42:30.655 +04:00 DBG Committed transaction.
2025-04-02 14:42:30.655 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:42:30.656 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:42:30.656 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:42:30.656 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:42:30.659 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:42:30.660 +04:00 DBG Disposing transaction.
2025-04-02 14:42:30.660 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:30.660 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:42:30.728 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 14:42:31.030 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 14:42:31.094 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:31.094 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:31.094 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:42:31.095 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:42:31.095 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:42:31.095 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:42:31.099 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:42:31.101 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:31.102 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:42:31.102 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:31.102 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:42:31.104 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:42:31.107 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:31.108 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 14:42:31.118 +04:00 DBG Hosting starting
2025-04-02 14:42:31.154 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 14:42:31.174 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 14:42:31.184 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 14:42:31.193 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 14:42:31.198 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:42:31.200 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 14:42:31.201 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:42:31.203 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 14:42:31.204 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 14:42:31.206 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 14:42:31.207 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 14:42:31.232 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:42:31.241 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 14:42:31.320 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:42:31.344 +04:00 DBG Creating DbConnection.
2025-04-02 14:42:31.345 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:42:31.349 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:31.353 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:31.354 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:42:31.354 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:42:31.355 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:42:31.356 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:42:31.386 +04:00 INF Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:42:31.402 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:31.403 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 17ms reading results.
2025-04-02 14:42:31.405 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:31.406 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:42:31.407 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:42:31.408 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:42:31.408 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:42:31.488 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 14:42:31.489 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 14:42:31.489 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 14:42:31.489 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 14:42:31.550 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 14:42:31.775 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 14:42:31.776 +04:00 INF Hosting environment: Development
2025-04-02 14:42:31.776 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 14:42:31.776 +04:00 DBG Hosting started
2025-04-02 14:42:31.815 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 14:42:31.877 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 14:42:31.878 +04:00 DBG Request did not match any endpoints
2025-04-02 14:42:31.987 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 14:42:31.990 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 14:42:32.064 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 14:42:32.069 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 14:42:32.077 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 14:42:32.115 +04:00 DBG Connection ID "18302628887244308502" disconnecting.
2025-04-02 14:42:32.121 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 14:42:32.122 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 589.1245ms
2025-04-02 14:42:32.122 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 44.598ms
2025-04-02 14:42:32.210 +04:00 DBG Connection ID "18230571306091282443" disconnecting.
2025-04-02 14:42:32.212 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 90.8397ms
2025-04-02 14:42:32.307 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 14:42:32.307 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 14:42:32.307 +04:00 DBG Request did not match any endpoints
2025-04-02 14:42:32.358 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 51.7813ms
2025-04-02 14:42:52.952 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - null null
2025-04-02 14:42:52.969 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories/1'
2025-04-02 14:42:52.986 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)' with route pattern 'api/Admin/categories/{id}' is valid for the request path '/api/Admin/categories/1'
2025-04-02 14:42:52.998 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:42:53.003 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:42:53.203 +04:00 INF Failed to validate the token.Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '4/2/2025 10:32:02 AM', Current time (UTC): '4/2/2025 10:42:53 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)

2025-04-02 14:42:53.215 +04:00 INF Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '4/2/2025 10:32:02 AM', Current time (UTC): '4/2/2025 10:42:53 AM'.
2025-04-02 14:42:53.220 +04:00 DBG Policy authentication schemes  did not succeed
2025-04-02 14:42:53.223 +04:00 INF Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-04-02 14:42:53.230 +04:00 INF AuthenticationScheme: Bearer was challenged.
2025-04-02 14:42:53.233 +04:00 DBG Connection ID "18230571306091282448" disconnecting.
2025-04-02 14:42:53.233 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - 401 null null 295.4208ms
2025-04-02 14:43:40.284 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 67
2025-04-02 14:43:40.305 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 14:43:40.305 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 14:43:40.306 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:43:40.306 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:43:40.316 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 14:43:40.323 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:43:40.352 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 14:43:40.354 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:43:40.354 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:43:40.355 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:43:40.355 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:43:40.356 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:43:40.359 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:43:40.418 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:43:40.419 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:43:40.426 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 14:43:40.429 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 14:43:40.432 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 14:43:40.467 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 14:43:40.467 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:43:40.468 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:43:40.468 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 14:43:40.480 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:43:40.481 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:43:40.482 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:43:40.482 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:43:40.483 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:43:40.485 +04:00 INF Login attempt for randomuser@example.com
2025-04-02 14:43:40.497 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .SingleOrDefault(acc => acc.Email == __Email_0)'
2025-04-02 14:43:40.514 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 14:43:40.515 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 14:43:40.600 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:43:40.628 +04:00 DBG Creating DbConnection.
2025-04-02 14:43:40.629 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:43:40.629 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:43:40.630 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:43:40.630 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:43:40.630 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:43:40.634 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 14:43:40.638 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 14:43:40.728 +04:00 INF Executed DbCommand (66ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 14:43:40.777 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:43:40.805 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:43:40.805 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 76ms reading results.
2025-04-02 14:43:40.805 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:43:40.805 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:43:40.926 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:43:40.929 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:43:40.929 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:43:40.930 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:43:40.932 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:43:40.933 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 14:43:40.951 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 591.1862ms
2025-04-02 14:43:41.013 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:43:41.016 +04:00 DBG Connection ID "18230571301796315149" disconnecting.
2025-04-02 14:43:41.016 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:43:41.017 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:43:41.017 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:43:41.018 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 734.6665ms
2025-04-02 14:44:15.793 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - null null
2025-04-02 14:44:15.795 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories/1'
2025-04-02 14:44:15.796 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)' with route pattern 'api/Admin/categories/{id}' is valid for the request path '/api/Admin/categories/1'
2025-04-02 14:44:15.796 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:44:15.796 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:44:15.830 +04:00 DBG Successfully validated the token.
2025-04-02 14:44:15.832 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:44:15.843 +04:00 DBG Authorization was successful.
2025-04-02 14:44:15.844 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:44:15.849 +04:00 INF Route matched with {action = "GetCategoryById", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategoryById(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:44:15.849 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:44:15.849 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:44:15.849 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:44:15.850 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:44:15.850 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:44:15.850 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:44:15.851 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:44:15.853 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:44:15.855 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:44:15.856 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:44:15.857 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:44:15.857 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:44:15.857 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:44:15.858 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:44:15.858 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:44:15.859 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:44:15.859 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:44:15.859 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:44:51.669 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .SingleOrDefault(cat => cat.Id == __id_0)'
2025-04-02 14:44:51.684 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:44:51.692 +04:00 DBG Creating DbConnection.
2025-04-02 14:44:51.692 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:44:51.692 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:44:51.693 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:44:51.693 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:44:51.693 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:44:51.694 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:44:51.696 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 14:44:51.722 +04:00 INF Executed DbCommand (28ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 14:44:51.733 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:44:51.735 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:44:51.735 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:44:51.735 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:44:51.735 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:44:51.736 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:44:51.736 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.CategoryResponseModel'.
2025-04-02 14:44:51.739 +04:00 INF Executed action offers.API.Controllers.AdminController.GetCategoryById (offers.API) in 35888.6348ms
2025-04-02 14:44:51.739 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:44:51.739 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:44:51.740 +04:00 DBG Connection ID "18230571301796315151" disconnecting.
2025-04-02 14:44:51.740 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:44:51.740 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 17ms reading results.
2025-04-02 14:44:51.741 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:44:51.794 +04:00 DBG Disposed connection to database '' on server '' (53ms).
2025-04-02 14:44:51.795 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - 200 null application/json; charset=utf-8 36001.8537ms
2025-04-02 14:49:00.240 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 14:49:00.452 +04:00 INF starting web host
2025-04-02 14:49:00.648 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:49:01.472 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:49:01.473 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:49:01.613 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:49:01.787 +04:00 DBG Creating DbConnection.
2025-04-02 14:49:01.831 +04:00 DBG Created DbConnection. (38ms).
2025-04-02 14:49:01.833 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:01.846 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.165 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.174 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:49:02.194 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (10ms).
2025-04-02 14:49:02.200 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (25ms).
2025-04-02 14:49:02.209 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:49:02.253 +04:00 INF Executed DbCommand (42ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:49:02.255 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.264 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (5ms).
2025-04-02 14:49:02.264 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.265 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.266 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:49:02.268 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:49:02.269 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:49:02.269 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:49:02.269 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:49:02.286 +04:00 INF Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:49:02.371 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:49:02.380 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:49:02.382 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:49:02.382 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:49:02.384 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 14:49:02.384 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:49:02.388 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:49:02.390 +04:00 DBG Committing transaction.
2025-04-02 14:49:02.399 +04:00 DBG Committed transaction.
2025-04-02 14:49:02.402 +04:00 DBG Disposing transaction.
2025-04-02 14:49:02.405 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:49:02.406 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:49:02.410 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:49:02.411 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 14:49:02.411 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 14:49:02.412 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:49:02.413 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:49:02.413 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:49:02.414 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:49:02.414 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:49:02.414 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:49:02.416 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:49:02.419 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:49:02.419 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:49:02.419 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:49:02.420 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:49:02.424 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:49:02.429 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.431 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 14:49:02.441 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 14:49:02.441 +04:00 DBG Committing transaction.
2025-04-02 14:49:02.443 +04:00 DBG Committed transaction.
2025-04-02 14:49:02.444 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:49:02.444 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:49:02.444 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:49:02.444 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:49:02.449 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:49:02.449 +04:00 DBG Disposing transaction.
2025-04-02 14:49:02.449 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.450 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:49:02.523 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 14:49:02.852 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 14:49:02.915 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.915 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.915 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:49:02.915 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:49:02.916 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:49:02.916 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:49:02.920 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:49:02.924 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.924 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 14:49:02.924 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.924 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:49:02.928 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:49:02.933 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:02.934 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 14:49:02.940 +04:00 DBG Hosting starting
2025-04-02 14:49:02.968 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 14:49:02.989 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 14:49:03.000 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 14:49:03.008 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 14:49:03.014 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:49:03.014 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 14:49:03.016 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:49:03.018 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 14:49:03.019 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 14:49:03.021 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 14:49:03.022 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 14:49:03.070 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:49:03.086 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 14:49:03.188 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:49:03.214 +04:00 DBG Creating DbConnection.
2025-04-02 14:49:03.215 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:49:03.217 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:03.221 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:03.222 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:49:03.222 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:49:03.222 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:49:03.223 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:49:03.243 +04:00 INF Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:49:03.266 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:03.267 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 24ms reading results.
2025-04-02 14:49:03.271 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:03.272 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:49:03.274 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:49:03.274 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:03.274 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:49:03.361 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 14:49:03.361 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 14:49:03.361 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 14:49:03.361 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 14:49:03.437 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 14:49:03.623 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 14:49:03.653 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 14:49:03.653 +04:00 INF Hosting environment: Development
2025-04-02 14:49:03.653 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 14:49:03.653 +04:00 DBG Hosting started
2025-04-02 14:49:03.667 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 14:49:03.668 +04:00 DBG Request did not match any endpoints
2025-04-02 14:49:03.807 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 14:49:03.811 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 14:49:03.915 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 14:49:03.916 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 14:49:03.955 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 14:49:03.972 +04:00 DBG Connection ID "18158513707758387206" disconnecting.
2025-04-02 14:49:03.972 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 14:49:03.981 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 555.0243ms
2025-04-02 14:49:03.981 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 25.4285ms
2025-04-02 14:49:04.067 +04:00 DBG Connection ID "18086456109425491986" disconnecting.
2025-04-02 14:49:04.074 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 101.5608ms
2025-04-02 14:49:04.148 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 14:49:04.149 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 14:49:04.149 +04:00 DBG Request did not match any endpoints
2025-04-02 14:49:04.195 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 47.2171ms
2025-04-02 14:49:34.540 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - null null
2025-04-02 14:49:34.568 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories/1'
2025-04-02 14:49:34.573 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)' with route pattern 'api/Admin/categories/{id}' is valid for the request path '/api/Admin/categories/1'
2025-04-02 14:49:34.575 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:49:34.580 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:49:34.709 +04:00 DBG Successfully validated the token.
2025-04-02 14:49:34.712 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:49:34.718 +04:00 DBG Authorization was successful.
2025-04-02 14:49:34.719 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:49:34.744 +04:00 INF Route matched with {action = "GetCategoryById", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategoryById(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:49:34.746 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:49:34.746 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:49:34.747 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:49:34.747 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:49:34.748 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:49:34.750 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:49:34.812 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:49:34.814 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:49:34.826 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:49:34.830 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:49:34.831 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:49:34.831 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:49:34.831 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:49:34.834 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:49:34.835 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:49:34.836 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:49:34.836 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:49:34.837 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:49:39.769 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .SingleOrDefault(cat => cat.Id == __id_0)'
2025-04-02 14:49:39.781 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:49:39.795 +04:00 DBG Creating DbConnection.
2025-04-02 14:49:39.795 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:49:39.795 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:39.796 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:39.796 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:49:39.796 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:49:39.799 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (2ms).
2025-04-02 14:49:39.802 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 14:49:39.852 +04:00 INF Executed DbCommand (53ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 14:49:39.953 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:49:39.981 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:39.981 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 129ms reading results.
2025-04-02 14:49:39.982 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:39.982 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:49:40.546 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:49:40.550 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:49:40.550 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:49:40.550 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:49:40.553 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:49:40.553 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.CategoryResponseModel'.
2025-04-02 14:49:40.567 +04:00 INF Executed action offers.API.Controllers.AdminController.GetCategoryById (offers.API) in 5814.8078ms
2025-04-02 14:49:40.567 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:49:40.567 +04:00 DBG Connection ID "17870283331606675459" disconnecting.
2025-04-02 14:49:40.567 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:49:40.567 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:49:40.568 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:49:40.569 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - 200 null application/json; charset=utf-8 6029.5105ms
2025-04-02 14:51:38.296 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories - null null
2025-04-02 14:51:38.337 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories'
2025-04-02 14:51:38.337 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)' with route pattern 'api/Admin/categories' is valid for the request path '/api/Admin/categories'
2025-04-02 14:51:38.337 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)'
2025-04-02 14:51:38.337 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:51:38.355 +04:00 DBG Successfully validated the token.
2025-04-02 14:51:38.355 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:51:38.357 +04:00 DBG Authorization was successful.
2025-04-02 14:51:38.358 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)'
2025-04-02 14:51:38.365 +04:00 INF Route matched with {action = "GetAllCategories", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategoriesAsync(System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:51:38.365 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:51:38.365 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:51:38.365 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:51:38.366 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:51:38.366 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:51:38.366 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:51:38.368 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:51:38.369 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:51:38.370 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:51:38.370 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:51:38.370 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:51:38.370 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:51:52.681 +04:00 DBG Compiling query expression: 
'DbSet<Category>()'
2025-04-02 14:51:52.688 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:51:52.692 +04:00 DBG Creating DbConnection.
2025-04-02 14:51:52.692 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:51:52.692 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:51:52.693 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:51:52.694 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:51:52.694 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:51:52.694 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:51:52.694 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2025-04-02 14:51:52.699 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2025-04-02 14:51:52.733 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:51:52.734 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:51:52.734 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:51:52.735 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:51:52.735 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:52:04.272 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:52:04.273 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:52:04.273 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:52:04.273 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:52:04.274 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:52:04.274 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.CategoryResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 14:52:04.346 +04:00 INF Executed action offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API) in 25979.5578ms
2025-04-02 14:52:04.346 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetAllCategoriesAsync (offers.API)'
2025-04-02 14:52:04.348 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:52:04.349 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:52:04.350 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 14:52:04.353 +04:00 DBG Connection ID "17798225737568747521" disconnecting.
2025-04-02 14:52:04.353 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories - 200 null application/json; charset=utf-8 26060.7541ms
2025-04-02 14:54:30.614 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 14:54:30.752 +04:00 INF starting web host
2025-04-02 14:54:30.996 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 14:54:31.822 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:54:31.824 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 14:54:31.943 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:54:32.120 +04:00 DBG Creating DbConnection.
2025-04-02 14:54:32.179 +04:00 DBG Created DbConnection. (55ms).
2025-04-02 14:54:32.182 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:32.199 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:32.523 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:32.531 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:54:32.543 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (8ms).
2025-04-02 14:54:32.551 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (22ms).
2025-04-02 14:54:32.557 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:54:32.591 +04:00 INF Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:54:32.593 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:32.603 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (6ms).
2025-04-02 14:54:32.603 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:32.604 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:32.605 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 14:54:32.607 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:54:32.607 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:54:32.608 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:54:32.608 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:54:32.626 +04:00 INF Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 14:54:32.713 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:54:32.726 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:54:32.728 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:54:32.729 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:54:32.731 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (3ms).
2025-04-02 14:54:32.731 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:54:32.733 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 14:54:32.735 +04:00 DBG Committing transaction.
2025-04-02 14:54:32.740 +04:00 DBG Committed transaction.
2025-04-02 14:54:32.741 +04:00 DBG Disposing transaction.
2025-04-02 14:54:32.744 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:54:32.745 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:54:32.750 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 14:54:32.750 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:54:32.750 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 14:54:32.750 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:54:32.751 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 14:54:32.752 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:54:32.752 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:54:32.752 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:54:32.752 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:54:32.753 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 14:54:32.756 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:54:32.756 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:54:32.756 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:54:32.757 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:54:32.759 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 14:54:32.765 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:32.766 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 5ms reading results.
2025-04-02 14:54:32.772 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 14:54:32.773 +04:00 DBG Committing transaction.
2025-04-02 14:54:32.773 +04:00 DBG Committed transaction.
2025-04-02 14:54:32.773 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 14:54:32.774 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:54:32.774 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 14:54:32.774 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:54:32.776 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 14:54:32.776 +04:00 DBG Disposing transaction.
2025-04-02 14:54:32.776 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:32.777 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:54:32.859 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 14:54:33.183 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 14:54:33.228 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:33.229 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:33.230 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:54:33.230 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:54:33.231 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:54:33.231 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:54:33.234 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:54:33.237 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:33.237 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 14:54:33.237 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:33.237 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:54:33.239 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:54:33.243 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:33.244 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 14:54:33.250 +04:00 DBG Hosting starting
2025-04-02 14:54:33.285 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 14:54:33.307 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 14:54:33.316 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 14:54:33.327 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 14:54:33.333 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:54:33.334 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 14:54:33.337 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 14:54:33.339 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 14:54:33.340 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 14:54:33.343 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 14:54:33.344 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 14:54:33.399 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:54:33.414 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 14:54:33.511 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:54:33.534 +04:00 DBG Creating DbConnection.
2025-04-02 14:54:33.535 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:54:33.537 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:33.540 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:33.541 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:54:33.541 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:54:33.541 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:54:33.542 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:54:33.576 +04:00 INF Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:54:33.604 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:33.605 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 28ms reading results.
2025-04-02 14:54:33.608 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:33.608 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:54:33.610 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:54:33.610 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:33.610 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:54:33.691 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 14:54:33.691 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 14:54:33.691 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 14:54:33.692 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 14:54:33.755 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 14:54:33.923 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 14:54:33.955 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 14:54:33.955 +04:00 DBG Request did not match any endpoints
2025-04-02 14:54:34.085 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 14:54:34.088 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 14:54:34.154 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 14:54:34.154 +04:00 INF Hosting environment: Development
2025-04-02 14:54:34.154 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 14:54:34.154 +04:00 DBG Hosting started
2025-04-02 14:54:34.174 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 14:54:34.175 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 14:54:34.181 +04:00 DBG Connection ID "18158513707758387214" disconnecting.
2025-04-02 14:54:34.184 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 445.8966ms
2025-04-02 14:54:34.292 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 14:54:34.304 +04:00 DBG Connection ID "18158513707758387216" disconnecting.
2025-04-02 14:54:34.305 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 12.1894ms
2025-04-02 14:54:34.309 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 14:54:34.427 +04:00 DBG Connection ID "18086456109425491988" disconnecting.
2025-04-02 14:54:34.432 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 123.1867ms
2025-04-02 14:54:34.524 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 14:54:34.525 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 14:54:34.525 +04:00 DBG Request did not match any endpoints
2025-04-02 14:54:34.574 +04:00 DBG Connection ID "18158513707758387218" disconnecting.
2025-04-02 14:54:34.576 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 51.5797ms
2025-04-02 14:54:56.119 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - null null
2025-04-02 14:54:56.149 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/categories/1'
2025-04-02 14:54:56.153 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)' with route pattern 'api/Admin/categories/{id}' is valid for the request path '/api/Admin/categories/1'
2025-04-02 14:54:56.154 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:54:56.157 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:54:56.309 +04:00 DBG Successfully validated the token.
2025-04-02 14:54:56.315 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:54:56.321 +04:00 DBG Authorization was successful.
2025-04-02 14:54:56.323 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:54:56.353 +04:00 INF Route matched with {action = "GetCategoryById", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCategoryById(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:54:56.355 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:54:56.355 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:54:56.355 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:54:56.356 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:54:56.356 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:54:56.358 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:54:56.438 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:54:56.440 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:54:56.450 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 14:54:56.454 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 14:54:56.456 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:54:56.456 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 14:54:56.457 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 14:54:56.466 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 14:54:56.469 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:54:56.470 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:54:56.471 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:54:56.472 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:54:56.484 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .SingleOrDefault(cat => cat.Id == __id_0)'
2025-04-02 14:54:56.501 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:54:56.514 +04:00 DBG Creating DbConnection.
2025-04-02 14:54:56.515 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:54:56.515 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:56.515 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:56.515 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:54:56.516 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:54:56.521 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 14:54:56.526 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 14:54:56.561 +04:00 INF Executed DbCommand (38ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 14:54:56.614 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:54:56.652 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:56.652 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 90ms reading results.
2025-04-02 14:54:56.653 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:56.653 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:54:56.749 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:54:56.752 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:54:56.752 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:54:56.752 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:54:56.754 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:54:56.755 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.CategoryResponseModel'.
2025-04-02 14:54:56.771 +04:00 INF Executed action offers.API.Controllers.AdminController.GetCategoryById (offers.API) in 411.5473ms
2025-04-02 14:54:56.772 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetCategoryById (offers.API)'
2025-04-02 14:54:56.777 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:54:56.777 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:54:56.777 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:54:56.779 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/categories/1 - 200 null application/json; charset=utf-8 660.5926ms
2025-04-02 14:55:37.182 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/companies - null null
2025-04-02 14:55:37.184 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/companies'
2025-04-02 14:55:37.184 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetAllCompanies (offers.API)' with route pattern 'api/Admin/companies' is valid for the request path '/api/Admin/companies'
2025-04-02 14:55:37.184 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetAllCompanies (offers.API)'
2025-04-02 14:55:37.185 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:55:37.203 +04:00 DBG Successfully validated the token.
2025-04-02 14:55:37.203 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:55:37.207 +04:00 DBG Authorization was successful.
2025-04-02 14:55:37.208 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetAllCompanies (offers.API)'
2025-04-02 14:55:37.218 +04:00 INF Route matched with {action = "GetAllCompanies", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCompanies(System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:55:37.218 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:55:37.218 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:55:37.218 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:55:37.218 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:55:37.219 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:55:37.219 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:55:37.222 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:55:37.225 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:55:37.226 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:55:37.226 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:55:37.227 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:55:37.227 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:55:37.233 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.CompanyDetail)
    .Where(acc => (int)acc.Role == 1)'
2025-04-02 14:55:37.248 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 14:55:37.309 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Account>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
            1 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 6], [Property: CompanyDetail.IsActive (bool) Required, 7] }
        SELECT a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, c.AccountId, c.CompanyName, c.IsActive
        FROM Accounts AS a
        LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
        WHERE a.Role == 'Company') | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
            1 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 6], [Property: CompanyDetail.IsActive (bool) Required, 7] }
        SELECT a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, c.AccountId, c.CompanyName, c.IsActive
        FROM Accounts AS a
        LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
        WHERE a.Role == 'Company', 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Account entity;
        CompanyDetail entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Account instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Account);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Account)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                        {
                            return 
                            {
                                Account instance;
                                instance = new Account();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                instance.<Phone>k__BackingField = dataReader.GetString(3);
                                instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Account)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            CompanyDetail instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(CompanyDetail);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                throwOnNullKey: False, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (CompanyDetail)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                        {
                            return 
                            {
                                CompanyDetail instance;
                                instance = new CompanyDetail();
                                instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                instance.<CompanyName>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                instance.<IsActive>k__BackingField = dataReader.IsDBNull(7) ? default(bool) : dataReader.GetBoolean(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(CompanyDetail)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
            fixup: (namelessParameter{9}, namelessParameter{10}) => 
            {
                namelessParameter{9}.<CompanyDetail>k__BackingField = namelessParameter{10};
                return namelessParameter{10}.<Account>k__BackingField = namelessParameter{9};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:55:37.316 +04:00 DBG Creating DbConnection.
2025-04-02 14:55:37.316 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:55:37.317 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:55:37.317 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:55:37.317 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:55:37.317 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:55:37.317 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:55:37.317 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Role] = 'Company'
2025-04-02 14:55:37.329 +04:00 INF Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Role] = 'Company'
2025-04-02 14:55:37.337 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:37.384 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:37.386 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:37.394 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:55:37.394 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 64ms reading results.
2025-04-02 14:55:37.394 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:55:37.394 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:55:37.417 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:55:37.417 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:55:37.417 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:55:37.418 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:55:37.418 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:55:37.418 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.CompanyResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 14:55:37.432 +04:00 INF Executed action offers.API.Controllers.AdminController.GetAllCompanies (offers.API) in 212.8723ms
2025-04-02 14:55:37.432 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetAllCompanies (offers.API)'
2025-04-02 14:55:37.433 +04:00 DBG Connection ID "18158513699168452625" disconnecting.
2025-04-02 14:55:37.433 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:55:37.434 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:55:37.434 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:55:37.434 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/companies - 200 null application/json; charset=utf-8 252.6357ms
2025-04-02 14:55:59.192 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/users - null null
2025-04-02 14:55:59.192 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/users'
2025-04-02 14:55:59.192 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetAllUsers (offers.API)' with route pattern 'api/Admin/users' is valid for the request path '/api/Admin/users'
2025-04-02 14:55:59.193 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetAllUsers (offers.API)'
2025-04-02 14:55:59.193 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:55:59.224 +04:00 DBG Successfully validated the token.
2025-04-02 14:55:59.225 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 14:55:59.226 +04:00 DBG Authorization was successful.
2025-04-02 14:55:59.226 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.GetAllUsers (offers.API)'
2025-04-02 14:55:59.233 +04:00 INF Route matched with {action = "GetAllUsers", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllUsers(System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 14:55:59.233 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:55:59.233 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:55:59.233 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:55:59.233 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:55:59.234 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:55:59.234 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:55:59.240 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:55:59.242 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 14:55:59.242 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:55:59.242 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:55:59.242 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:55:59.242 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:55:59.245 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Where(acc => (int)acc.Role == 0)'
2025-04-02 14:55:59.247 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 14:55:59.257 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Account>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
            1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
        SELECT a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName
        FROM Accounts AS a
        LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
        WHERE a.Role == 'User') | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
            1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
        SELECT a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName
        FROM Accounts AS a
        LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
        WHERE a.Role == 'User', 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Account entity;
        UserDetail entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Account instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Account);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Account)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                        {
                            return 
                            {
                                Account instance;
                                instance = new Account();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Email>k__BackingField = dataReader.GetString(1);
                                instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                instance.<Phone>k__BackingField = dataReader.GetString(3);
                                instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Account)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            UserDetail instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(UserDetail);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                throwOnNullKey: False, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (UserDetail)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                        {
                            return 
                            {
                                UserDetail instance;
                                instance = new UserDetail();
                                instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(UserDetail)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
            fixup: (namelessParameter{9}, namelessParameter{10}) => 
            {
                namelessParameter{9}.<UserDetail>k__BackingField = namelessParameter{10};
                return namelessParameter{10}.<Account>k__BackingField = namelessParameter{9};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 14:55:59.263 +04:00 DBG Creating DbConnection.
2025-04-02 14:55:59.263 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:55:59.263 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:55:59.263 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:55:59.263 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:55:59.263 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:55:59.263 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:55:59.264 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
WHERE [a].[Role] = 'User'
2025-04-02 14:55:59.277 +04:00 INF Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
WHERE [a].[Role] = 'User'
2025-04-02 14:55:59.278 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:59.283 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:59.283 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:55:59.292 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:55:59.292 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 14ms reading results.
2025-04-02 14:55:59.292 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:55:59.292 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:55:59.300 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:55:59.300 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:55:59.300 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:55:59.300 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:55:59.300 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:55:59.300 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.UserResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 14:55:59.309 +04:00 INF Executed action offers.API.Controllers.AdminController.GetAllUsers (offers.API) in 75.834ms
2025-04-02 14:55:59.310 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.GetAllUsers (offers.API)'
2025-04-02 14:55:59.310 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:55:59.310 +04:00 DBG Connection ID "18302628887244308506" disconnecting.
2025-04-02 14:55:59.310 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:55:59.310 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:55:59.310 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/users - 200 null application/json; charset=utf-8 118.6703ms
2025-04-02 14:57:07.793 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 64
2025-04-02 14:57:07.800 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 14:57:07.801 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 14:57:07.804 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:57:07.804 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:57:07.805 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 14:57:07.833 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:57:07.844 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 14:57:07.844 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:57:07.844 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:57:07.844 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:57:07.844 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:57:07.845 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:57:07.845 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:57:07.848 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:57:07.849 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:57:07.850 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 14:57:07.851 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 14:57:07.854 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 14:57:07.882 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 14:57:07.883 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:57:07.883 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:57:07.883 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 14:57:07.894 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:57:07.894 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:57:07.895 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:57:07.895 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:57:07.895 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:57:07.899 +04:00 INF Login attempt for kirvalidzedachi1@gmail.com
2025-04-02 14:57:07.905 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .SingleOrDefault(acc => acc.Email == __Email_0)'
2025-04-02 14:57:07.906 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 14:57:07.907 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 14:57:07.925 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:57:07.939 +04:00 DBG Creating DbConnection.
2025-04-02 14:57:07.939 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:57:07.939 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:57:07.940 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:57:07.940 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:57:07.940 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:57:07.940 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:57:07.941 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 14:57:07.960 +04:00 INF Executed DbCommand (20ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 14:57:07.963 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:57:07.963 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:57:07.964 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:57:07.965 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:57:07.965 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 14:57:07.966 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:57:07.967 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:57:08.112 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 267.5981ms
2025-04-02 14:57:08.114 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:57:08.119 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Account.AccountNotFoundException: Email or password is incorrect
   at offers.Application.Services.Accounts.AccountService.LoginAsync(String Email, String password, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Accounts\AccountService.cs:line 42
   at offers.API.Controllers.AuthController.LogIn(AccountLoginDTO accountLoginDTO, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\AuthController.cs:line 73
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 14:57:08.413 +04:00 WRN Handled exception: Email or password is incorrectoffers.Application.Exceptions.Account.AccountNotFoundException: Email or password is incorrect
   at offers.Application.Services.Accounts.AccountService.LoginAsync(String Email, String password, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Accounts\AccountService.cs:line 42
   at offers.API.Controllers.AuthController.LogIn(AccountLoginDTO accountLoginDTO, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\AuthController.cs:line 73
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 14:57:08.417 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:57:08.417 +04:00 DBG Connection ID "18230571301796315154" disconnecting.
2025-04-02 14:57:08.418 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:57:08.418 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:57:08.418 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 404 null application/json 627.4583ms
2025-04-02 14:57:26.404 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 71
2025-04-02 14:57:26.405 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 14:57:26.405 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 14:57:26.405 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:57:26.406 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:57:26.406 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 14:57:26.406 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:57:26.407 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 14:57:26.407 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:57:26.407 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:57:26.407 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:57:26.407 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:57:26.407 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:57:26.408 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:57:26.410 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:57:26.410 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:57:26.414 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 14:57:26.415 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 14:57:26.416 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 14:57:26.418 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 14:57:26.418 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:57:26.419 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:57:26.419 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 14:57:26.420 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:57:26.420 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:57:26.421 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:57:26.422 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:57:26.422 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:57:26.422 +04:00 INF Login attempt for kirvalidzedachi1@gmail.com
2025-04-02 14:57:26.432 +04:00 DBG Creating DbConnection.
2025-04-02 14:57:26.432 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:57:26.433 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:57:26.433 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:57:26.433 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:57:26.434 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:57:26.434 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:57:26.434 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 14:57:26.440 +04:00 INF Executed DbCommand (6ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 14:57:26.441 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:57:26.441 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:57:26.441 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:57:26.442 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:57:26.442 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 14:57:26.442 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:57:26.442 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:57:26.522 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 114.5898ms
2025-04-02 14:57:26.523 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:57:26.525 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Account.AccountNotFoundException: Email or password is incorrect
   at offers.Application.Services.Accounts.AccountService.LoginAsync(String Email, String password, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Accounts\AccountService.cs:line 42
   at offers.API.Controllers.AuthController.LogIn(AccountLoginDTO accountLoginDTO, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\AuthController.cs:line 73
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 14:57:26.530 +04:00 WRN Handled exception: Email or password is incorrectoffers.Application.Exceptions.Account.AccountNotFoundException: Email or password is incorrect
   at offers.Application.Services.Accounts.AccountService.LoginAsync(String Email, String password, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Accounts\AccountService.cs:line 42
   at offers.API.Controllers.AuthController.LogIn(AccountLoginDTO accountLoginDTO, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\AuthController.cs:line 73
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 14:57:26.533 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:57:26.533 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:57:26.533 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:57:26.533 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 404 null application/json 129.3348ms
2025-04-02 14:58:14.290 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/company/register - application/json 153
2025-04-02 14:58:14.291 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/company/register'
2025-04-02 14:58:14.292 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.Register (offers.API)' with route pattern 'api/Auth/company/register' is valid for the request path '/api/Auth/company/register'
2025-04-02 14:58:14.292 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.Register (offers.API)'
2025-04-02 14:58:14.293 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:58:14.293 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 14:58:14.293 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.Register (offers.API)'
2025-04-02 14:58:14.302 +04:00 INF Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(offers.API.Models.CompanyRegisterDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 14:58:14.302 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:58:14.302 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:58:14.302 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:58:14.302 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:58:14.302 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:58:14.302 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:58:14.304 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:58:14.307 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:58:14.309 +04:00 DBG Attempting to bind parameter 'companyDTO' of type 'offers.API.Models.CompanyRegisterDTO' ...
2025-04-02 14:58:14.309 +04:00 DBG Attempting to bind parameter 'companyDTO' of type 'offers.API.Models.CompanyRegisterDTO' using the name '' in request data ...
2025-04-02 14:58:14.309 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 14:58:14.314 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.CompanyRegisterDTO'
2025-04-02 14:58:14.314 +04:00 DBG Done attempting to bind parameter 'companyDTO' of type 'offers.API.Models.CompanyRegisterDTO'.
2025-04-02 14:58:14.314 +04:00 DBG Done attempting to bind parameter 'companyDTO' of type 'offers.API.Models.CompanyRegisterDTO'.
2025-04-02 14:58:14.315 +04:00 DBG Attempting to validate the bound parameter 'companyDTO' of type 'offers.API.Models.CompanyRegisterDTO' ...
2025-04-02 14:58:14.316 +04:00 DBG Done attempting to validate the bound parameter 'companyDTO' of type 'offers.API.Models.CompanyRegisterDTO'.
2025-04-02 14:58:14.316 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:58:14.316 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:58:14.316 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:58:14.316 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:58:14.317 +04:00 INF Register attempt for mishokirvalidze11@gmail.com
2025-04-02 14:58:14.334 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(acc => acc.Email == __Email_0)'
2025-04-02 14:58:14.337 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Accounts AS a
                WHERE a.Email == @__Email_0)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Accounts AS a
                WHERE a.Email == @__Email_0), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 14:58:14.346 +04:00 DBG Creating DbConnection.
2025-04-02 14:58:14.346 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:58:14.346 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:14.347 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:14.347 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:58:14.347 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:58:14.347 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:58:14.347 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Email] = @__Email_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:58:14.358 +04:00 INF Executed DbCommand (9ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Email] = @__Email_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 14:58:14.366 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:14.366 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 8ms reading results.
2025-04-02 14:58:14.366 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:14.367 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:58:14.406 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Account.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:58:14.415 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:58:14.420 +04:00 DBG The navigation 'CompanyDetail.Account' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:58:14.421 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:58:14.427 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 14:58:14.430 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 14:58:14.443 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 14:58:14.517 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:14.517 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:14.517 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 14:58:14.518 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 14:58:14.521 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:58:14.521 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:58:14.521 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:58:14.521 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (Size = 255) (DbType = AnsiString), @p1='?' (Size = 512) (DbType = AnsiString), @p2='?' (Size = 50) (DbType = AnsiString), @p3='?' (Size = 50) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Accounts] ([Email], [PasswordHash], [Phone], [Role])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-04-02 14:58:14.533 +04:00 INF Executed DbCommand (12ms) [Parameters=[@p0='?' (Size = 255) (DbType = AnsiString), @p1='?' (Size = 512) (DbType = AnsiString), @p2='?' (Size = 50) (DbType = AnsiString), @p3='?' (Size = 50) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Accounts] ([Email], [PasswordHash], [Phone], [Role])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3);
2025-04-02 14:58:14.546 +04:00 DBG The foreign key property 'Account.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 14:58:14.549 +04:00 DBG The foreign key property 'CompanyDetail.AccountId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 14:58:14.552 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:14.553 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 19ms reading results.
2025-04-02 14:58:14.554 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:58:14.554 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:58:14.555 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:58:14.555 +04:00 DBG Executing DbCommand [Parameters=[@p4='?' (DbType = Int32), @p5='?' (Size = 255) (DbType = AnsiString), @p6='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [CompanyDetails] ([AccountId], [CompanyName], [IsActive])
VALUES (@p4, @p5, @p6);
2025-04-02 14:58:14.561 +04:00 INF Executed DbCommand (7ms) [Parameters=[@p4='?' (DbType = Int32), @p5='?' (Size = 255) (DbType = AnsiString), @p6='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [CompanyDetails] ([AccountId], [CompanyName], [IsActive])
VALUES (@p4, @p5, @p6);
2025-04-02 14:58:14.562 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:14.562 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 14:58:14.563 +04:00 DBG Committing transaction.
2025-04-02 14:58:14.564 +04:00 DBG Committed transaction.
2025-04-02 14:58:14.566 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:14.566 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:58:14.567 +04:00 DBG Disposing transaction.
2025-04-02 14:58:14.580 +04:00 DBG An entity of type 'Account' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:58:14.582 +04:00 DBG An entity of type 'CompanyDetail' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:58:14.584 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-04-02 14:58:14.587 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:58:14.587 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:58:14.587 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:58:14.587 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:58:14.587 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:58:14.587 +04:00 INF Executing CreatedAtActionResult, writing value of type 'offers.Application.Models.AccountResponseModel'.
2025-04-02 14:58:14.619 +04:00 DBG Found the endpoints ["offers.API.Controllers.CompanyController.GetCurrentCompany (offers.API)"] for address (action=[GetCurrentCompany],controller=[Company])
2025-04-02 14:58:14.623 +04:00 DBG Successfully processed template api/Company for offers.API.Controllers.CompanyController.GetCurrentCompany (offers.API) resulting in /api/Company and 
2025-04-02 14:58:14.626 +04:00 DBG Link generation succeeded for endpoints ["offers.API.Controllers.CompanyController.GetCurrentCompany (offers.API)"] with result /api/Company
2025-04-02 14:58:14.629 +04:00 INF Executed action offers.API.Controllers.AuthController.Register (offers.API) in 326.8034ms
2025-04-02 14:58:14.629 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.Register (offers.API)'
2025-04-02 14:58:14.630 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:58:14.630 +04:00 DBG Connection ID "18158513707758387225" disconnecting.
2025-04-02 14:58:14.630 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:14.630 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:58:14.630 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/company/register - 201 null application/json; charset=utf-8 346.4674ms
2025-04-02 14:58:52.258 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 72
2025-04-02 14:58:52.258 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 14:58:52.259 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 14:58:52.259 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:58:52.259 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 14:58:52.259 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 14:58:52.259 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:58:52.263 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 14:58:52.263 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 14:58:52.264 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 14:58:52.264 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 14:58:52.264 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 14:58:52.264 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 14:58:52.264 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:58:52.266 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:58:52.266 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 14:58:52.267 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 14:58:52.267 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 14:58:52.267 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 14:58:52.268 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 14:58:52.268 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:58:52.268 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:58:52.268 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 14:58:52.268 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 14:58:52.268 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:58:52.269 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:58:52.269 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 14:58:52.269 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 14:58:52.269 +04:00 INF Login attempt for mishokirvalidze11@gmail.com
2025-04-02 14:58:52.272 +04:00 DBG Creating DbConnection.
2025-04-02 14:58:52.272 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:58:52.272 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:52.273 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:52.274 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:58:52.275 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:58:52.275 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 14:58:52.276 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 14:58:52.292 +04:00 INF Executed DbCommand (14ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 14:58:52.293 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:58:52.295 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:58:52.295 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 14:58:52.295 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:52.295 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 14:58:52.296 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:52.296 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:58:52.314 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 14:58:52.314 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 14:58:52.314 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 14:58:52.314 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 14:58:52.314 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 14:58:52.314 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 14:58:52.317 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 52.1561ms
2025-04-02 14:58:52.317 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 14:58:52.317 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:58:52.317 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:58:52.317 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 14:58:52.317 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 59.3394ms
2025-04-02 14:59:33.613 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 14:59:33.620 +04:00 DBG Creating DbConnection.
2025-04-02 14:59:33.620 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 14:59:33.620 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:59:33.621 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:59:33.621 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 14:59:33.621 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:59:33.621 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 14:59:33.621 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:59:33.624 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 14:59:33.624 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:59:33.624 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 14:59:33.625 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:59:33.625 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 14:59:33.625 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 14:59:33.625 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 14:59:33.625 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:01:32.295 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Company/offers - application/json 183
2025-04-02 15:01:32.296 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers'
2025-04-02 15:01:32.296 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)' with route pattern 'api/Company/offers' is valid for the request path '/api/Company/offers'
2025-04-02 15:01:32.296 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 15:01:32.296 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:01:32.298 +04:00 DBG Successfully validated the token.
2025-04-02 15:01:32.298 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:01:32.300 +04:00 DBG Authorization was successful.
2025-04-02 15:01:32.301 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 15:01:32.308 +04:00 INF Route matched with {action = "Post", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(offers.API.Models.OfferDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 15:01:32.309 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:01:32.309 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:01:32.309 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:01:32.309 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:01:32.309 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:01:32.310 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:01:32.317 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:01:32.328 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:01:32.328 +04:00 DBG Attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' ...
2025-04-02 15:01:32.328 +04:00 DBG Attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' using the name '' in request data ...
2025-04-02 15:01:32.328 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:01:32.344 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.OfferDTO'
2025-04-02 15:01:32.344 +04:00 DBG Done attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 15:01:32.344 +04:00 DBG Done attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 15:01:32.344 +04:00 DBG Attempting to validate the bound parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' ...
2025-04-02 15:01:32.346 +04:00 DBG Done attempting to validate the bound parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 15:01:32.346 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:01:32.346 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:01:32.346 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:01:32.346 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:01:32.347 +04:00 INF attempt to add a new Offer myAccesory
2025-04-02 15:01:32.357 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .FirstOrDefault(acc => acc.Id == __id_0)'
2025-04-02 15:01:32.358 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 15:01:32.358 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 15:01:32.365 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:01:32.383 +04:00 DBG Creating DbConnection.
2025-04-02 15:01:32.383 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:01:32.383 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.383 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.383 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:01:32.384 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:01:32.384 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:01:32.384 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:01:32.401 +04:00 INF Executed DbCommand (18ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:01:32.402 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:01:32.402 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:01:32.402 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:01:32.403 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.403 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:01:32.403 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.403 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:01:32.407 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.407 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.407 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:01:32.407 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:01:32.407 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:01:32.407 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 15:01:32.410 +04:00 INF Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 15:01:32.410 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:01:32.410 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.410 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:01:32.410 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.411 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:01:32.412 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.412 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.412 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:01:32.412 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:01:32.413 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:01:32.413 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:01:32.414 +04:00 INF Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:01:32.414 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.415 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:01:32.415 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.415 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:01:32.568 +04:00 INF Executed action offers.API.Controllers.CompanyController.Post (offers.API) in 258.5496ms
2025-04-02 15:01:32.569 +04:00 INF Executed endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 15:01:32.570 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Account.Company.CompanyIsNotActiveException: you can't create an offer on a not activated account 
   at offers.Application.Services.Offers.OfferService.AccountIsActiveCheck(Int32 accountId, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Offers\OfferService.cs:line 52
   at offers.Application.Services.Offers.OfferService.CreateAsync(Offer offer, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Offers\OfferService.cs:line 58
   at offers.API.Controllers.CompanyController.Post(OfferDTO offerDTO, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\CompanyController.cs:line 44
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:01:32.580 +04:00 WRN Handled exception: you can't create an offer on a not activated account offers.Application.Exceptions.Account.Company.CompanyIsNotActiveException: you can't create an offer on a not activated account 
   at offers.Application.Services.Offers.OfferService.AccountIsActiveCheck(Int32 accountId, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Offers\OfferService.cs:line 52
   at offers.Application.Services.Offers.OfferService.CreateAsync(Offer offer, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Offers\OfferService.cs:line 58
   at offers.API.Controllers.CompanyController.Post(OfferDTO offerDTO, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\CompanyController.cs:line 44
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:01:32.585 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:01:32.585 +04:00 DBG Connection ID "18158513707758387230" disconnecting.
2025-04-02 15:01:32.585 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:01:32.585 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:01:32.585 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Company/offers - 409 null application/json 289.9884ms
2025-04-02 15:02:40.502 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 67
2025-04-02 15:02:40.502 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 15:02:40.502 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 15:02:40.502 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:02:40.503 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:02:40.503 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 15:02:40.503 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:02:40.503 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 15:02:40.503 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:02:40.503 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:02:40.504 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:02:40.504 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:02:40.504 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:02:40.504 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:02:40.507 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:02:40.507 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:02:40.507 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:02:40.507 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 15:02:40.507 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:02:40.530 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 15:02:40.530 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:02:40.530 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:02:40.530 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:02:40.530 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:02:40.530 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:02:40.530 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:02:40.530 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:02:40.539 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:02:40.540 +04:00 INF Login attempt for randomuser@example.com
2025-04-02 15:02:40.542 +04:00 DBG Creating DbConnection.
2025-04-02 15:02:40.542 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:02:40.542 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:02:40.542 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:02:40.542 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:02:40.543 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:02:40.543 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:02:40.543 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:02:40.555 +04:00 INF Executed DbCommand (12ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:02:40.556 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:02:40.556 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:02:40.556 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:02:40.556 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:02:40.557 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:02:40.558 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:02:40.558 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:02:40.558 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:02:40.558 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:02:40.558 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:02:40.559 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 15:02:40.560 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 55.8168ms
2025-04-02 15:02:40.560 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:02:40.561 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:02:40.561 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:02:40.561 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:02:40.561 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 59.7621ms
2025-04-02 15:03:11.279 +04:00 INF Request starting HTTP/2 PATCH https://localhost:44346/api/Admin/companies/1003/confirm - null null
2025-04-02 15:03:11.279 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/companies/1003/confirm'
2025-04-02 15:03:11.279 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.ConfirmCompany (offers.API)' with route pattern 'api/Admin/companies/{id}/confirm' is valid for the request path '/api/Admin/companies/1003/confirm'
2025-04-02 15:03:11.280 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.ConfirmCompany (offers.API)'
2025-04-02 15:03:11.280 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:03:11.280 +04:00 DBG Successfully validated the token.
2025-04-02 15:03:11.281 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:03:11.281 +04:00 DBG Authorization was successful.
2025-04-02 15:03:11.281 +04:00 INF Executing endpoint 'offers.API.Controllers.AdminController.ConfirmCompany (offers.API)'
2025-04-02 15:03:11.288 +04:00 INF Route matched with {action = "ConfirmCompany", controller = "Admin"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ConfirmCompany(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.AdminController (offers.API).
2025-04-02 15:03:11.288 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:03:11.289 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:03:11.289 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:03:11.289 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:03:11.289 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:03:11.289 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 15:03:11.291 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:03:11.291 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AdminController (offers.API)
2025-04-02 15:03:11.292 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 15:03:11.292 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 15:03:11.292 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 15:03:11.292 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 15:03:11.292 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 15:03:11.292 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 15:03:11.292 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:03:11.292 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:03:11.293 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:03:11.293 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:03:11.294 +04:00 INF attempt to Confirm a company with the ID 1003
2025-04-02 15:03:11.298 +04:00 DBG Creating DbConnection.
2025-04-02 15:03:11.298 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:03:11.298 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:03:11.299 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:03:11.299 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:03:11.300 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:03:11.300 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:03:11.300 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:03:11.305 +04:00 INF Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:03:11.306 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:03:11.309 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:03:11.309 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:03:11.310 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:03:11.310 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 15:03:11.310 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:03:11.310 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:03:11.321 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:03:11.321 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:03:11.322 +04:00 DBG The unchanged property 'CompanyDetail.IsActive' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 15:03:11.323 +04:00 DBG An entity of type 'CompanyDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:03:11.323 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:03:11.326 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:03:11.326 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:03:11.326 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:03:11.326 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:03:11.326 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:03:11.326 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [CompanyDetails] SET [IsActive] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:03:11.336 +04:00 INF Executed DbCommand (10ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [CompanyDetails] SET [IsActive] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:03:11.338 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:03:11.338 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:03:11.338 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:03:11.338 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:03:11.338 +04:00 DBG An entity of type 'CompanyDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:03:11.338 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 15:03:11.339 +04:00 INF Executing StatusCodeResult, setting HTTP status code 204
2025-04-02 15:03:11.339 +04:00 INF Executed action offers.API.Controllers.AdminController.ConfirmCompany (offers.API) in 50.7017ms
2025-04-02 15:03:11.340 +04:00 INF Executed endpoint 'offers.API.Controllers.AdminController.ConfirmCompany (offers.API)'
2025-04-02 15:03:11.341 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:03:11.341 +04:00 DBG Connection ID "18158513707758387232" disconnecting.
2025-04-02 15:03:11.341 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:03:11.341 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:03:11.341 +04:00 INF Request finished HTTP/2 PATCH https://localhost:44346/api/Admin/companies/1003/confirm - 204 null null 62.1193ms
2025-04-02 15:04:14.308 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Company/offers - application/json 183
2025-04-02 15:04:14.308 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers'
2025-04-02 15:04:14.308 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)' with route pattern 'api/Company/offers' is valid for the request path '/api/Company/offers'
2025-04-02 15:04:14.308 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 15:04:14.308 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:04:14.309 +04:00 DBG Successfully validated the token.
2025-04-02 15:04:14.309 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:04:14.310 +04:00 DBG Authorization was successful.
2025-04-02 15:04:14.310 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 15:04:14.310 +04:00 INF Route matched with {action = "Post", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(offers.API.Models.OfferDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 15:04:14.310 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:04:14.310 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:04:14.310 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:04:14.310 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:04:14.310 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:04:14.310 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:04:14.335 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:04:14.336 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:04:14.336 +04:00 DBG Attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' ...
2025-04-02 15:04:14.336 +04:00 DBG Attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' using the name '' in request data ...
2025-04-02 15:04:14.336 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:04:14.337 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.OfferDTO'
2025-04-02 15:04:14.337 +04:00 DBG Done attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 15:04:14.337 +04:00 DBG Done attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 15:04:14.337 +04:00 DBG Attempting to validate the bound parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' ...
2025-04-02 15:04:14.337 +04:00 DBG Done attempting to validate the bound parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 15:04:14.337 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:04:14.337 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:04:14.337 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:04:14.337 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:04:14.338 +04:00 INF attempt to add a new Offer myAccesory
2025-04-02 15:04:14.340 +04:00 DBG Creating DbConnection.
2025-04-02 15:04:14.341 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:04:14.341 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.341 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.341 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:04:14.341 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:14.341 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:14.342 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:04:14.355 +04:00 INF Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:04:14.359 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:04:14.360 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:04:14.360 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:04:14.361 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.361 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 5ms reading results.
2025-04-02 15:04:14.361 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.361 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:04:14.362 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.363 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.363 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:04:14.363 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:14.363 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:14.364 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 15:04:14.368 +04:00 INF Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 15:04:14.368 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:04:14.368 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.368 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:04:14.368 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.369 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:04:14.369 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.370 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.370 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:04:14.371 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:14.371 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:14.371 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:04:14.379 +04:00 INF Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:04:14.379 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.379 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:04:14.380 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.380 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:04:14.383 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Offer.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:04:14.415 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:04:14.415 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:04:14.416 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:04:14.429 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:04:14.430 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.430 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.431 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:04:14.431 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:14.433 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 15:04:14.433 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime2), @p5='?' (Size = 1000) (DbType = AnsiString), @p6='?' (DbType = Boolean), @p7='?' (Size = 255) (DbType = AnsiString), @p8='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Offers] ([AccountId], [ArchiveAt], [CategoryId], [Count], [CreatedAt], [Description], [IsArchived], [Name], [Price])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-04-02 15:04:14.446 +04:00 INF Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime2), @p5='?' (Size = 1000) (DbType = AnsiString), @p6='?' (DbType = Boolean), @p7='?' (Size = 255) (DbType = AnsiString), @p8='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Offers] ([AccountId], [ArchiveAt], [CategoryId], [Count], [CreatedAt], [Description], [IsArchived], [Name], [Price])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-04-02 15:04:14.452 +04:00 DBG The foreign key property 'Offer.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 15:04:14.454 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.454 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 7ms reading results.
2025-04-02 15:04:14.454 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.454 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:04:14.455 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:04:14.455 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 15:04:14.460 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:04:14.460 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:04:14.460 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:04:14.461 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:04:14.461 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:04:14.461 +04:00 INF Executing CreatedAtActionResult, writing value of type 'offers.Application.Models.OfferResponseModel'.
2025-04-02 15:04:14.462 +04:00 DBG Found the endpoints ["offers.API.Controllers.CompanyController.GetMyOffer (offers.API)"] for address (id=[1],action=[GetMyOffer],controller=[Company])
2025-04-02 15:04:14.462 +04:00 DBG Successfully processed template api/Company/offers/{id} for offers.API.Controllers.CompanyController.GetMyOffer (offers.API) resulting in /api/Company/offers/1 and 
2025-04-02 15:04:14.462 +04:00 DBG Link generation succeeded for endpoints ["offers.API.Controllers.CompanyController.GetMyOffer (offers.API)"] with result /api/Company/offers/1
2025-04-02 15:04:14.465 +04:00 INF Executed action offers.API.Controllers.CompanyController.Post (offers.API) in 154.2656ms
2025-04-02 15:04:14.465 +04:00 INF Executed endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 15:04:14.465 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:04:14.465 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:14.465 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:04:14.465 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Company/offers - 201 null application/json; charset=utf-8 157.5976ms
2025-04-02 15:04:33.621 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:04:33.622 +04:00 DBG Creating DbConnection.
2025-04-02 15:04:33.622 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:04:33.622 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:33.623 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:33.623 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:04:33.623 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:33.623 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:33.623 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:04:33.641 +04:00 INF Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:04:33.641 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:33.642 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:04:33.642 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:33.642 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:04:33.643 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:04:33.643 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:33.643 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:04:38.171 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Company/offers - null null
2025-04-02 15:04:38.171 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers'
2025-04-02 15:04:38.171 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.GetMyOffers (offers.API)' with route pattern 'api/Company/offers' is valid for the request path '/api/Company/offers'
2025-04-02 15:04:38.171 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.GetMyOffers (offers.API)'
2025-04-02 15:04:38.171 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:04:38.172 +04:00 DBG Successfully validated the token.
2025-04-02 15:04:38.172 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:04:38.173 +04:00 DBG Authorization was successful.
2025-04-02 15:04:38.173 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.GetMyOffers (offers.API)'
2025-04-02 15:04:38.178 +04:00 INF Route matched with {action = "GetMyOffers", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMyOffers(System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 15:04:38.178 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:04:38.178 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:04:38.178 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:04:38.178 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:04:38.178 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:04:38.178 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:04:38.180 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:04:38.180 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:04:38.180 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:04:38.181 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:04:38.181 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:04:38.181 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:04:38.184 +04:00 DBG Creating DbConnection.
2025-04-02 15:04:38.184 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:04:38.184 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:38.185 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:38.185 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:04:38.185 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:38.185 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:38.186 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:04:38.195 +04:00 INF Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:04:38.195 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:04:38.195 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:04:38.195 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:04:38.196 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:38.196 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:04:38.196 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:38.196 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:04:38.198 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.AccountId == __accountId_0)'
2025-04-02 15:04:38.202 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.AccountId == @__accountId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.AccountId == @__accountId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 15:04:38.206 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:38.206 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:38.206 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:04:38.206 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:38.206 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:04:38.206 +04:00 DBG Executing DbCommand [Parameters=[@__accountId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[AccountId] = @__accountId_0
2025-04-02 15:04:38.218 +04:00 INF Executed DbCommand (12ms) [Parameters=[@__accountId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[AccountId] = @__accountId_0
2025-04-02 15:04:38.222 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:04:38.223 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:38.223 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 15:04:38.223 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:38.224 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:04:38.227 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:04:38.227 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:04:38.227 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:04:38.227 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:04:38.227 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:04:38.227 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.OfferResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 15:04:38.229 +04:00 INF Executed action offers.API.Controllers.CompanyController.GetMyOffers (offers.API) in 50.2616ms
2025-04-02 15:04:38.229 +04:00 INF Executed endpoint 'offers.API.Controllers.CompanyController.GetMyOffers (offers.API)'
2025-04-02 15:04:38.229 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:04:38.229 +04:00 DBG Connection ID "18158513712053354504" disconnecting.
2025-04-02 15:04:38.229 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:04:38.230 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:04:38.230 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Company/offers - 200 null application/json; charset=utf-8 59.2479ms
2025-04-02 15:05:02.696 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Company/offers/1 - null null
2025-04-02 15:05:02.696 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers/1'
2025-04-02 15:05:02.696 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.GetMyOffer (offers.API)' with route pattern 'api/Company/offers/{id}' is valid for the request path '/api/Company/offers/1'
2025-04-02 15:05:02.696 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.GetMyOffer (offers.API)'
2025-04-02 15:05:02.697 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:05:02.697 +04:00 DBG Successfully validated the token.
2025-04-02 15:05:02.697 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:05:02.698 +04:00 DBG Authorization was successful.
2025-04-02 15:05:02.698 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.GetMyOffer (offers.API)'
2025-04-02 15:05:02.730 +04:00 INF Route matched with {action = "GetMyOffer", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMyOffer(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 15:05:02.730 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:05:02.730 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:05:02.730 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:05:02.730 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:05:02.730 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:05:02.730 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:05:02.731 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:05:02.732 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:05:02.732 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 15:05:02.732 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 15:05:02.732 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 15:05:02.732 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 15:05:02.732 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 15:05:02.732 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 15:05:02.732 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:05:02.732 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:05:02.732 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:05:02.732 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:05:02.736 +04:00 DBG Creating DbConnection.
2025-04-02 15:05:02.737 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:05:02.737 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:02.738 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:02.738 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:05:02.738 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:05:02.738 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:05:02.738 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:05:02.744 +04:00 INF Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:05:02.745 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:05:02.748 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:05:02.750 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:05:02.750 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:02.750 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 5ms reading results.
2025-04-02 15:05:02.750 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:02.751 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:05:02.756 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Include(off => off.Category)
    .SingleOrDefault(off => off.Id == __id_0)'
2025-04-02 15:05:02.757 +04:00 DBG Including navigation: 'Offer.Category'.
2025-04-02 15:05:02.764 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Offer>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Offer>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Offer entity;
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Offer instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Offer);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Offer)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<Description>k__BackingField = dataReader.GetString(6);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<Name>k__BackingField = dataReader.GetString(8);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Category instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Category);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(10) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Category)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Offer, Offer, Category>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Offer.Category (Category) ToPrincipal Category Inverse: Offers | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Category")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Category.Offers (List<Offer>) Collection ToDependent Offer Inverse: Category | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Category>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Category, List<Offer>, Offer> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:05:02.773 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:02.773 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:02.774 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:05:02.774 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:05:02.774 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:05:02.774 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:05:02.787 +04:00 INF Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:05:02.787 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:05:02.788 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:05:02.788 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:05:02.789 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:02.789 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:05:02.789 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:02.789 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:05:02.789 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:05:02.789 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:05:02.790 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:05:02.790 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:05:02.790 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:05:02.790 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.OfferResponseModel'.
2025-04-02 15:05:02.790 +04:00 INF Executed action offers.API.Controllers.CompanyController.GetMyOffer (offers.API) in 60.3737ms
2025-04-02 15:05:02.791 +04:00 INF Executed endpoint 'offers.API.Controllers.CompanyController.GetMyOffer (offers.API)'
2025-04-02 15:05:02.791 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:05:02.791 +04:00 DBG Connection ID "17942340921349636111" disconnecting.
2025-04-02 15:05:02.791 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:02.791 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:05:02.792 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Company/offers/1 - 200 null application/json; charset=utf-8 95.9249ms
2025-04-02 15:05:29.059 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Company - null null
2025-04-02 15:05:29.063 +04:00 DBG 1 candidate(s) found for the request path '/api/Company'
2025-04-02 15:05:29.074 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.GetCurrentCompany (offers.API)' with route pattern 'api/Company' is valid for the request path '/api/Company'
2025-04-02 15:05:29.074 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.GetCurrentCompany (offers.API)'
2025-04-02 15:05:29.074 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:05:29.075 +04:00 DBG Successfully validated the token.
2025-04-02 15:05:29.075 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:05:29.075 +04:00 DBG Authorization was successful.
2025-04-02 15:05:29.075 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.GetCurrentCompany (offers.API)'
2025-04-02 15:05:29.078 +04:00 INF Route matched with {action = "GetCurrentCompany", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentCompany(System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 15:05:29.078 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:05:29.078 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:05:29.079 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:05:29.079 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:05:29.079 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:05:29.079 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:05:29.080 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:05:29.080 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:05:29.080 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:05:29.080 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:05:29.080 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:05:29.080 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:05:29.085 +04:00 DBG Creating DbConnection.
2025-04-02 15:05:29.085 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:05:29.085 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:29.086 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:29.086 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:05:29.086 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:05:29.086 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:05:29.086 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:05:29.093 +04:00 INF Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:05:29.097 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:05:29.098 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:05:29.098 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:05:29.098 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:29.099 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 15:05:29.099 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:29.099 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:05:29.139 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:05:29.139 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:05:29.139 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:05:29.139 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:05:29.139 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:05:29.139 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.CompanyResponseModel'.
2025-04-02 15:05:29.140 +04:00 INF Executed action offers.API.Controllers.CompanyController.GetCurrentCompany (offers.API) in 61.0445ms
2025-04-02 15:05:29.140 +04:00 INF Executed endpoint 'offers.API.Controllers.CompanyController.GetCurrentCompany (offers.API)'
2025-04-02 15:05:29.140 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:05:29.140 +04:00 DBG Connection ID "18158513699168452629" disconnecting.
2025-04-02 15:05:29.140 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:05:29.140 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:05:29.140 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Company - 200 null application/json; charset=utf-8 82.9794ms
2025-04-02 15:09:43.662 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 15:09:43.816 +04:00 INF starting web host
2025-04-02 15:09:43.963 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 15:09:44.666 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 15:09:44.667 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 15:09:44.746 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:09:44.998 +04:00 DBG Creating DbConnection.
2025-04-02 15:09:45.051 +04:00 DBG Created DbConnection. (50ms).
2025-04-02 15:09:45.053 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.066 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.335 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.339 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 15:09:45.345 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (3ms).
2025-04-02 15:09:45.346 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (8ms).
2025-04-02 15:09:45.352 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:09:45.380 +04:00 INF Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:09:45.382 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.389 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (4ms).
2025-04-02 15:09:45.389 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.390 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.394 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 15:09:45.397 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 15:09:45.398 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:09:45.398 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:09:45.399 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 15:09:45.418 +04:00 INF Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 15:09:45.545 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:09:45.551 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:09:45.553 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 15:09:45.553 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 15:09:45.554 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 15:09:45.554 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 15:09:45.557 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 15:09:45.561 +04:00 DBG Committing transaction.
2025-04-02 15:09:45.567 +04:00 DBG Committed transaction.
2025-04-02 15:09:45.568 +04:00 DBG Disposing transaction.
2025-04-02 15:09:45.570 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:09:45.571 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:09:45.572 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 15:09:45.572 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 15:09:45.573 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 15:09:45.573 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:09:45.573 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:09:45.574 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 15:09:45.575 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:09:45.575 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:09:45.576 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 15:09:45.579 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 15:09:45.581 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:09:45.581 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:09:45.581 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:09:45.582 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 15:09:45.585 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 15:09:45.588 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.589 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 15:09:45.597 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 15:09:45.597 +04:00 DBG Committing transaction.
2025-04-02 15:09:45.598 +04:00 DBG Committed transaction.
2025-04-02 15:09:45.598 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 15:09:45.598 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:09:45.598 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:09:45.599 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 15:09:45.600 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 15:09:45.600 +04:00 DBG Disposing transaction.
2025-04-02 15:09:45.601 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.601 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:09:45.661 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 15:09:45.903 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 15:09:45.947 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.947 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.947 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:09:45.947 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:09:45.948 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:09:45.948 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 15:09:45.950 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 15:09:45.953 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.953 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 15:09:45.953 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.953 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:09:45.955 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:09:45.957 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:45.958 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 15:09:45.964 +04:00 DBG Hosting starting
2025-04-02 15:09:45.985 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 15:09:46.001 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 15:09:46.010 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 15:09:46.018 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 15:09:46.022 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 15:09:46.022 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 15:09:46.025 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 15:09:46.028 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 15:09:46.029 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 15:09:46.031 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 15:09:46.032 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 15:09:46.062 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:09:46.072 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 15:09:46.140 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 15:09:46.158 +04:00 DBG Creating DbConnection.
2025-04-02 15:09:46.159 +04:00 DBG Created DbConnection. (1ms).
2025-04-02 15:09:46.163 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:46.166 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:46.166 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:09:46.166 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:09:46.166 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:09:46.167 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:09:46.190 +04:00 INF Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:09:46.205 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:46.206 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 15ms reading results.
2025-04-02 15:09:46.208 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:46.209 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:09:46.210 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:09:46.211 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:09:46.211 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:09:46.283 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 15:09:46.283 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 15:09:46.283 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 15:09:46.283 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 15:09:46.342 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 15:09:46.479 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 15:09:46.489 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 15:09:46.489 +04:00 INF Hosting environment: Development
2025-04-02 15:09:46.490 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 15:09:46.490 +04:00 DBG Hosting started
2025-04-02 15:09:46.517 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 15:09:46.518 +04:00 DBG Request did not match any endpoints
2025-04-02 15:09:46.619 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 15:09:46.621 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 15:09:46.687 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 15:09:46.687 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 15:09:46.757 +04:00 DBG Connection ID "18230571293206380564" disconnecting.
2025-04-02 15:09:46.757 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 15:09:46.769 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 374.7614ms
2025-04-02 15:09:46.774 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 15:09:46.798 +04:00 DBG Connection ID "18230571301796315158" disconnecting.
2025-04-02 15:09:46.801 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 43.7574ms
2025-04-02 15:09:46.869 +04:00 DBG Connection ID "18302628900129210382" disconnecting.
2025-04-02 15:09:46.879 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 105.1455ms
2025-04-02 15:09:46.950 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 15:09:46.950 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 15:09:46.951 +04:00 DBG Request did not match any endpoints
2025-04-02 15:09:46.972 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 22.5187ms
2025-04-02 15:10:10.063 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Company/offers - null null
2025-04-02 15:10:10.086 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers'
2025-04-02 15:10:10.092 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.GetMyOffers (offers.API)' with route pattern 'api/Company/offers' is valid for the request path '/api/Company/offers'
2025-04-02 15:10:10.093 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.GetMyOffers (offers.API)'
2025-04-02 15:10:10.096 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:10:10.249 +04:00 DBG Successfully validated the token.
2025-04-02 15:10:10.252 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:10:10.263 +04:00 DBG Authorization was successful.
2025-04-02 15:10:10.265 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.GetMyOffers (offers.API)'
2025-04-02 15:10:10.304 +04:00 INF Route matched with {action = "GetMyOffers", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMyOffers(System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 15:10:10.307 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:10:10.308 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:10:10.309 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:10:10.310 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:10:10.310 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:10:10.313 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:10:10.384 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:10:10.386 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:10:10.399 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:10:10.401 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:10:10.402 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:10:10.405 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:10:10.427 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .FirstOrDefault(acc => acc.Id == __id_0)'
2025-04-02 15:10:10.449 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 15:10:10.452 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 15:10:10.563 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:10:10.590 +04:00 DBG Creating DbConnection.
2025-04-02 15:10:10.591 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:10:10.591 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:10:10.591 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:10:10.591 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:10:10.591 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:10:10.596 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 15:10:10.599 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:10:10.641 +04:00 INF Executed DbCommand (40ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:10:10.714 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:10:10.762 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:10:10.763 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:10:10.771 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:10:10.771 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 128ms reading results.
2025-04-02 15:10:10.772 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:10:10.772 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:10:10.777 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Include(off => off.Category)
    .Where(off => off.AccountId == __accountId_0)'
2025-04-02 15:10:10.780 +04:00 DBG Including navigation: 'Offer.Category'.
2025-04-02 15:10:10.799 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
            1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
        FROM Offers AS o
        INNER JOIN Categories AS c ON o.CategoryId == c.Id
        WHERE o.AccountId == @__accountId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
            1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
        FROM Offers AS o
        INNER JOIN Categories AS c ON o.CategoryId == c.Id
        WHERE o.AccountId == @__accountId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Category instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Category);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(10) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Category)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<Id>k__BackingField = dataReader.GetInt32(10);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                instance.<Name>k__BackingField = dataReader.GetString(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Offer, Offer, Category>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Offer.Category (Category) ToPrincipal Category Inverse: Offers | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Category")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Category.Offers (List<Offer>) Collection ToDependent Offer Inverse: Category | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers")], 
            fixup: (namelessParameter{8}, namelessParameter{9}) => 
            {
                namelessParameter{8}.<Category>k__BackingField = namelessParameter{9};
                return [LIFTABLE Constant: ClrICollectionAccessor<Category, List<Offer>, Offer> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers").GetCollectionAccessor()].Add(
                    entity: namelessParameter{9}, 
                    value: namelessParameter{8}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 15:10:10.805 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:10:10.806 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:10:10.806 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:10:10.806 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:10:10.806 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:10:10.807 +04:00 DBG Executing DbCommand [Parameters=[@__accountId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[AccountId] = @__accountId_0
2025-04-02 15:10:10.819 +04:00 INF Executed DbCommand (12ms) [Parameters=[@__accountId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[AccountId] = @__accountId_0
2025-04-02 15:10:10.838 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:10:10.864 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:10:10.866 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:10:10.870 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:10:10.871 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 51ms reading results.
2025-04-02 15:10:10.871 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:10:10.871 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:10:10.992 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:10:10.997 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:10:10.997 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:10:10.998 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:10:10.999 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:10:11.000 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.OfferResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 15:10:11.033 +04:00 INF Executed action offers.API.Controllers.CompanyController.GetMyOffers (offers.API) in 714.4531ms
2025-04-02 15:10:11.034 +04:00 INF Executed endpoint 'offers.API.Controllers.CompanyController.GetMyOffers (offers.API)'
2025-04-02 15:10:11.036 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:10:11.036 +04:00 DBG Connection ID "18086456109425491992" disconnecting.
2025-04-02 15:10:11.037 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:10:11.038 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:10:11.041 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Company/offers - 200 null application/json; charset=utf-8 978.3674ms
2025-04-02 15:10:40.081 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Admin/users - null null
2025-04-02 15:10:40.084 +04:00 DBG 1 candidate(s) found for the request path '/api/Admin/users'
2025-04-02 15:10:40.084 +04:00 DBG Endpoint 'offers.API.Controllers.AdminController.GetAllUsers (offers.API)' with route pattern 'api/Admin/users' is valid for the request path '/api/Admin/users'
2025-04-02 15:10:40.087 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AdminController.GetAllUsers (offers.API)'
2025-04-02 15:10:40.088 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:10:40.110 +04:00 DBG Successfully validated the token.
2025-04-02 15:10:40.110 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:10:40.112 +04:00 INF Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-04-02 15:10:40.120 +04:00 INF AuthenticationScheme: Bearer was forbidden.
2025-04-02 15:10:40.124 +04:00 DBG Connection ID "18086456109425491994" disconnecting.
2025-04-02 15:10:40.124 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Admin/users - 403 null null 43.4494ms
2025-04-02 15:11:34.634 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 70
2025-04-02 15:11:34.635 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 15:11:34.636 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 15:11:34.636 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:11:34.636 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:11:34.645 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 15:11:34.646 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:11:34.658 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 15:11:34.659 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:11:34.659 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:11:34.659 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:11:34.659 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:11:34.659 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:11:34.659 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:11:34.661 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:11:34.672 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:11:34.672 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:11:34.673 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 15:11:34.675 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:11:34.695 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 15:11:34.695 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:11:34.695 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:11:34.696 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:11:34.709 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:11:34.709 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:11:34.710 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:11:34.710 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:11:34.711 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:11:34.715 +04:00 INF Login attempt for kirvalidzedachi@gmail.com
2025-04-02 15:11:34.723 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .SingleOrDefault(acc => acc.Email == __Email_0)'
2025-04-02 15:11:34.725 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 15:11:34.725 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 15:11:34.739 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:11:34.756 +04:00 DBG Creating DbConnection.
2025-04-02 15:11:34.756 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:11:34.756 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:11:34.757 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:11:34.757 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:11:34.757 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:11:34.758 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 15:11:34.758 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:11:34.770 +04:00 INF Executed DbCommand (12ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:11:34.771 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:11:34.774 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:11:34.774 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:11:34.781 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:11:34.782 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 10ms reading results.
2025-04-02 15:11:34.782 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:11:34.783 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:11:34.904 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 244.7196ms
2025-04-02 15:11:34.905 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:11:34.907 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Account.AccountNotFoundException: Email or password is incorrect
   at offers.Application.Services.Accounts.AccountService.LoginAsync(String Email, String password, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Accounts\AccountService.cs:line 42
   at offers.API.Controllers.AuthController.LogIn(AccountLoginDTO accountLoginDTO, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\AuthController.cs:line 73
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:11:35.100 +04:00 WRN Handled exception: Email or password is incorrectoffers.Application.Exceptions.Account.AccountNotFoundException: Email or password is incorrect
   at offers.Application.Services.Accounts.AccountService.LoginAsync(String Email, String password, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Accounts\AccountService.cs:line 42
   at offers.API.Controllers.AuthController.LogIn(AccountLoginDTO accountLoginDTO, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\AuthController.cs:line 73
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:11:35.104 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:11:35.104 +04:00 DBG Connection ID "18230571293206380568" disconnecting.
2025-04-02 15:11:35.104 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:11:35.105 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:11:35.105 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 404 null application/json 471.1613ms
2025-04-02 15:11:57.084 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 63
2025-04-02 15:11:57.090 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 15:11:57.090 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 15:11:57.090 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:11:57.090 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:11:57.090 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 15:11:57.090 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:11:57.091 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 15:11:57.091 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:11:57.091 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:11:57.091 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:11:57.092 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:11:57.092 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:11:57.092 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:11:57.103 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:11:57.104 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:11:57.104 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:11:57.104 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 15:11:57.105 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:11:57.106 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 15:11:57.106 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:11:57.106 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:11:57.106 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:11:57.107 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:11:57.107 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:11:57.107 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:11:57.107 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:11:57.107 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:11:57.107 +04:00 INF Login attempt for kirvalidzedachi@gmail.com
2025-04-02 15:11:57.114 +04:00 DBG Creating DbConnection.
2025-04-02 15:11:57.114 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:11:57.114 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:11:57.115 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:11:57.115 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:11:57.115 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:11:57.115 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:11:57.116 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:11:57.128 +04:00 INF Executed DbCommand (12ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:11:57.129 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:11:57.131 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:11:57.131 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:11:57.134 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:11:57.134 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 5ms reading results.
2025-04-02 15:11:57.134 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:11:57.134 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:11:57.214 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 122.6974ms
2025-04-02 15:11:57.215 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:11:57.216 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Account.AccountNotFoundException: Email or password is incorrect
   at offers.Application.Services.Accounts.AccountService.LoginAsync(String Email, String password, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Accounts\AccountService.cs:line 42
   at offers.API.Controllers.AuthController.LogIn(AccountLoginDTO accountLoginDTO, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\AuthController.cs:line 73
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:11:57.219 +04:00 WRN Handled exception: Email or password is incorrectoffers.Application.Exceptions.Account.AccountNotFoundException: Email or password is incorrect
   at offers.Application.Services.Accounts.AccountService.LoginAsync(String Email, String password, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Accounts\AccountService.cs:line 42
   at offers.API.Controllers.AuthController.LogIn(AccountLoginDTO accountLoginDTO, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\AuthController.cs:line 73
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:11:57.223 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:11:57.223 +04:00 DBG Connection ID "18158513712053354507" disconnecting.
2025-04-02 15:11:57.223 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:11:57.223 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:11:57.223 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 404 null application/json 142.3321ms
2025-04-02 15:12:08.657 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 66
2025-04-02 15:12:08.657 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 15:12:08.659 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 15:12:08.659 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:12:08.659 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:12:08.659 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 15:12:08.659 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:12:08.659 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 15:12:08.659 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:12:08.659 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:12:08.659 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:12:08.659 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:12:08.659 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:12:08.660 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:12:08.662 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:12:08.662 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:12:08.662 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:12:08.663 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 15:12:08.663 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:12:08.663 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 15:12:08.663 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:12:08.663 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:12:08.663 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:12:08.664 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:12:08.664 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:12:08.664 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:12:08.664 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:12:08.665 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:12:08.665 +04:00 INF Login attempt for kirvalidzedachi@gmail.com
2025-04-02 15:12:08.666 +04:00 DBG Creating DbConnection.
2025-04-02 15:12:08.666 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:12:08.666 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:08.667 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:08.667 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:12:08.667 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:12:08.668 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:12:08.668 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:12:08.674 +04:00 INF Executed DbCommand (6ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:12:08.675 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:12:08.685 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:12:08.686 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:12:08.686 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:08.686 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 11ms reading results.
2025-04-02 15:12:08.686 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:08.686 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:12:08.714 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:12:08.714 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:12:08.714 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:12:08.714 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:12:08.715 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:12:08.715 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 15:12:08.722 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 62.0835ms
2025-04-02 15:12:08.722 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:12:08.722 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:12:08.722 +04:00 DBG Connection ID "18158513712053354509" disconnecting.
2025-04-02 15:12:08.722 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:08.723 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:12:08.723 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 65.5761ms
2025-04-02 15:12:51.145 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User/offers - null null
2025-04-02 15:12:51.146 +04:00 DBG 1 candidate(s) found for the request path '/api/User/offers'
2025-04-02 15:12:51.146 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)' with route pattern 'api/User/offers' is valid for the request path '/api/User/offers'
2025-04-02 15:12:51.146 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:12:51.146 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:12:51.147 +04:00 DBG Successfully validated the token.
2025-04-02 15:12:51.147 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:12:51.148 +04:00 DBG Authorization was successful.
2025-04-02 15:12:51.148 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:12:51.155 +04:00 INF Route matched with {action = "GetOffersByCategories", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOffersByCategories(System.Collections.Generic.List`1[System.Int32], System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:12:51.155 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:12:51.155 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:12:51.155 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:12:51.155 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:12:51.155 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:12:51.155 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:12:51.157 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:12:51.160 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:12:51.161 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 15:12:51.163 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' using the name '' in request data ...
2025-04-02 15:12:51.164 +04:00 DBG Could not find a value in the request with name '' for binding parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:12:51.165 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:12:51.165 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:12:51.165 +04:00 DBG Attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 15:12:51.167 +04:00 DBG Done attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:12:51.167 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:12:51.167 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:12:51.167 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:12:51.167 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:12:51.170 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .Where(ctg => __ids_0.Contains(ctg.Id))'
2025-04-02 15:12:51.220 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c
        WHERE c.Id IN (
            SELECT i.value
            FROM OPENJSON(@__ids_0) WITH (value int '') AS i)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c
        WHERE c.Id IN (
            SELECT i.value
            FROM OPENJSON(@__ids_0) WITH (value int '') AS i), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 15:12:51.234 +04:00 DBG Creating DbConnection.
2025-04-02 15:12:51.234 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:12:51.235 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:51.235 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:51.235 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:12:51.235 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:12:51.238 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (2ms).
2025-04-02 15:12:51.238 +04:00 DBG Executing DbCommand [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 15:12:51.252 +04:00 INF Executed DbCommand (14ms) [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 15:12:51.253 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:51.253 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:12:51.253 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:51.253 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:12:51.255 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => __categoryIds_0.Contains(off.CategoryId))'
2025-04-02 15:12:51.262 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.CategoryId IN (
            SELECT c.value
            FROM OPENJSON(@__categoryIds_0) WITH (value int '') AS c)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.CategoryId IN (
            SELECT c.value
            FROM OPENJSON(@__categoryIds_0) WITH (value int '') AS c), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 15:12:51.265 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:51.265 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:51.265 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:12:51.265 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:12:51.265 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:12:51.265 +04:00 DBG Executing DbCommand [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 15:12:51.278 +04:00 INF Executed DbCommand (12ms) [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 15:12:51.278 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:51.278 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:12:51.278 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:51.278 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:12:51.279 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:12:51.279 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:12:51.279 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:12:51.279 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:12:51.279 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:12:51.280 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.OfferResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 15:12:51.280 +04:00 INF Executed action offers.API.Controllers.UserController.GetOffersByCategories (offers.API) in 125.3304ms
2025-04-02 15:12:51.280 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:12:51.281 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:12:51.281 +04:00 DBG Connection ID "18230571293206380570" disconnecting.
2025-04-02 15:12:51.281 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:12:51.281 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:12:51.281 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User/offers - 200 null application/json; charset=utf-8 135.9638ms
2025-04-02 15:13:52.539 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - null null
2025-04-02 15:13:52.543 +04:00 DBG 1 candidate(s) found for the request path '/api/User/offers'
2025-04-02 15:13:52.543 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)' with route pattern 'api/User/offers' is valid for the request path '/api/User/offers'
2025-04-02 15:13:52.544 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:13:52.544 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:13:52.545 +04:00 DBG Successfully validated the token.
2025-04-02 15:13:52.545 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:13:52.546 +04:00 DBG Authorization was successful.
2025-04-02 15:13:52.546 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:13:52.547 +04:00 INF Route matched with {action = "GetOffersByCategories", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOffersByCategories(System.Collections.Generic.List`1[System.Int32], System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:13:52.547 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:13:52.547 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:13:52.547 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:13:52.548 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:13:52.548 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:13:52.548 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:13:52.560 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:13:52.564 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:13:52.570 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 15:13:52.572 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' using the name 'categoryIds' in request data ...
2025-04-02 15:13:52.577 +04:00 DBG Attempting to bind model of type 'System.Int32' using the name 'categoryIds' in request data ...
2025-04-02 15:13:52.577 +04:00 DBG Done attempting to bind model of type 'System.Int32' using the name 'categoryIds'.
2025-04-02 15:13:52.578 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:13:52.578 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:13:52.578 +04:00 DBG Attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 15:13:52.579 +04:00 DBG Done attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:13:52.579 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:13:52.579 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:13:52.579 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:13:52.579 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:13:52.580 +04:00 DBG Creating DbConnection.
2025-04-02 15:13:52.580 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:13:52.580 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:13:52.580 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:13:52.580 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:13:52.580 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:13:52.581 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:13:52.581 +04:00 DBG Executing DbCommand [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 15:13:52.589 +04:00 INF Executed DbCommand (8ms) [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 15:13:52.589 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:13:52.590 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:13:52.590 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:13:52.590 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:13:52.590 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:13:52.591 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:13:52.591 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:13:52.591 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:13:52.591 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:13:52.592 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:13:52.592 +04:00 DBG Executing DbCommand [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 15:13:52.596 +04:00 INF Executed DbCommand (4ms) [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 15:13:52.597 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:13:52.597 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:13:52.597 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:13:52.597 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:13:52.597 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:13:52.598 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:13:52.598 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:13:52.598 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:13:52.598 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:13:52.598 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:13:52.598 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.OfferResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 15:13:52.599 +04:00 INF Executed action offers.API.Controllers.UserController.GetOffersByCategories (offers.API) in 51.0697ms
2025-04-02 15:13:52.599 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:13:52.599 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:13:52.599 +04:00 DBG Connection ID "18158513712053354511" disconnecting.
2025-04-02 15:13:52.600 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:13:52.600 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:13:52.602 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - 200 null application/json; charset=utf-8 62.641ms
2025-04-02 15:14:13.472 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 15:14:13.472 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 15:14:13.505 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 15:14:13.505 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:14:13.505 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:14:13.538 +04:00 DBG Successfully validated the token.
2025-04-02 15:14:13.538 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:14:13.538 +04:00 DBG Authorization was successful.
2025-04-02 15:14:13.538 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:14:13.544 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:14:13.544 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:14:13.544 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:14:13.544 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:14:13.544 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:14:13.544 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:14:13.544 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:14:13.547 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:14:13.550 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:14:13.550 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:14:13.550 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:14:13.550 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:14:13.551 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:14:13.553 +04:00 DBG Creating DbConnection.
2025-04-02 15:14:13.553 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:14:13.553 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:13.554 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:13.554 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:14:13.554 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:14:13.554 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:14:13.554 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:14:13.559 +04:00 INF Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:14:13.564 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:14:13.568 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:14:13.568 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:14:13.568 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:13.568 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 8ms reading results.
2025-04-02 15:14:13.568 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:13.568 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:14:13.574 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:14:13.574 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:14:13.574 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:14:13.574 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:14:13.575 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:14:13.575 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 15:14:13.577 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 32.6652ms
2025-04-02 15:14:13.577 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:14:13.577 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:14:13.578 +04:00 DBG Connection ID "18158513712053354513" disconnecting.
2025-04-02 15:14:13.578 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:13.578 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:14:13.578 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 106.6897ms
2025-04-02 15:14:28.403 +04:00 INF Request starting HTTP/2 PATCH https://localhost:44346/api/User/deposit - application/json 21
2025-04-02 15:14:28.408 +04:00 DBG 1 candidate(s) found for the request path '/api/User/deposit'
2025-04-02 15:14:28.408 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.Deposit (offers.API)' with route pattern 'api/User/deposit' is valid for the request path '/api/User/deposit'
2025-04-02 15:14:28.408 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.Deposit (offers.API)'
2025-04-02 15:14:28.408 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:14:28.409 +04:00 DBG Successfully validated the token.
2025-04-02 15:14:28.409 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:14:28.409 +04:00 DBG Authorization was successful.
2025-04-02 15:14:28.410 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.Deposit (offers.API)'
2025-04-02 15:14:28.416 +04:00 INF Route matched with {action = "Deposit", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Deposit(offers.API.Models.DepositRequestDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:14:28.416 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:14:28.417 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:14:28.417 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:14:28.417 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:14:28.417 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:14:28.417 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:14:28.419 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:14:28.419 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:14:28.419 +04:00 DBG Attempting to bind parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO' ...
2025-04-02 15:14:28.419 +04:00 DBG Attempting to bind parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO' using the name '' in request data ...
2025-04-02 15:14:28.419 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:14:28.422 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.DepositRequestDTO'
2025-04-02 15:14:28.422 +04:00 DBG Done attempting to bind parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO'.
2025-04-02 15:14:28.422 +04:00 DBG Done attempting to bind parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO'.
2025-04-02 15:14:28.422 +04:00 DBG Attempting to validate the bound parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO' ...
2025-04-02 15:14:28.424 +04:00 DBG Done attempting to validate the bound parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO'.
2025-04-02 15:14:28.424 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:14:28.424 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:14:28.424 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:14:28.424 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:14:32.909 +04:00 INF attempt to make a Deposit
2025-04-02 15:14:38.282 +04:00 DBG Creating DbConnection.
2025-04-02 15:14:38.282 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:14:38.282 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:38.282 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:38.282 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:14:38.282 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:14:38.282 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:14:38.282 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:14:38.321 +04:00 INF Executed DbCommand (39ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:14:38.326 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:14:38.329 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:14:38.329 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:14:38.330 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:38.330 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 5ms reading results.
2025-04-02 15:14:38.330 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:38.331 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:14:42.059 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:42.059 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:42.059 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:14:42.061 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:14:46.302 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:14:46.303 +04:00 DBG Creating DbConnection.
2025-04-02 15:14:46.304 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:14:46.320 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:47.488 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:47.490 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:14:47.505 +04:00 DBG Created DbCommand for 'ExecuteReader' (15ms).
2025-04-02 15:14:47.506 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (15ms).
2025-04-02 15:14:47.506 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:14:47.769 +04:00 INF Executed DbCommand (263ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:14:47.770 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:47.770 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:14:47.771 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:47.773 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (2ms).
2025-04-02 15:14:47.773 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:14:47.773 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:47.774 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:14:48.782 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:14:48.785 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:14:48.802 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 15:14:48.807 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:14:48.810 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:14:48.865 +04:00 DBG Creating transaction savepoint.
2025-04-02 15:14:48.880 +04:00 DBG Created transaction savepoint.
2025-04-02 15:14:48.923 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:14:48.923 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:14:48.924 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 15:14:48.924 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:14:48.940 +04:00 INF Executed DbCommand (16ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:14:48.967 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:48.967 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 26ms reading results.
2025-04-02 15:14:48.986 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:14:48.991 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 15:14:50.166 +04:00 DBG Committing transaction.
2025-04-02 15:14:50.169 +04:00 DBG Committed transaction.
2025-04-02 15:14:50.172 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:50.172 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:14:50.787 +04:00 DBG Disposing transaction.
2025-04-02 15:14:54.762 +04:00 INF Executing StatusCodeResult, setting HTTP status code 204
2025-04-02 15:14:54.762 +04:00 INF Executed action offers.API.Controllers.UserController.Deposit (offers.API) in 26344.4976ms
2025-04-02 15:14:54.762 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.Deposit (offers.API)'
2025-04-02 15:14:54.763 +04:00 DBG Connection ID "17942340921349636115" disconnecting.
2025-04-02 15:14:56.051 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:14:56.052 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:14:56.052 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:14:56.849 +04:00 INF Request finished HTTP/2 PATCH https://localhost:44346/api/User/deposit - 204 null null 28446.2756ms
2025-04-02 15:15:11.203 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 15:15:11.203 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 15:15:11.203 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 15:15:11.203 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:15:11.203 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:15:11.204 +04:00 DBG Successfully validated the token.
2025-04-02 15:15:11.204 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:15:11.204 +04:00 DBG Authorization was successful.
2025-04-02 15:15:11.205 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:15:11.205 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:15:11.205 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:15:11.205 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:15:11.205 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:15:11.205 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:15:11.205 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:15:11.205 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:15:20.805 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:15:44.664 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:15:44.664 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:15:44.664 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:15:44.664 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:15:44.664 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:15:50.337 +04:00 DBG Creating DbConnection.
2025-04-02 15:15:50.337 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:15:50.337 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:15:50.337 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:15:50.337 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:15:50.337 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:15:50.337 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:15:50.337 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:15:50.353 +04:00 INF Executed DbCommand (16ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:15:50.354 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:15:50.354 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:15:50.354 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:15:50.354 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:15:50.355 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:15:50.355 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:15:50.355 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:15:52.989 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:15:52.989 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:15:52.989 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:15:52.989 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:15:52.989 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:15:52.990 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 15:15:53.036 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 41830.198ms
2025-04-02 15:15:53.036 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:15:53.036 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:15:53.036 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:15:53.036 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:15:53.036 +04:00 DBG Connection ID "18230571293206380572" disconnecting.
2025-04-02 15:15:53.036 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 41833.4857ms
2025-04-02 15:16:54.766 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 15:16:54.767 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 15:16:54.767 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 15:16:54.767 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:16:54.767 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:16:54.767 +04:00 DBG Successfully validated the token.
2025-04-02 15:16:54.767 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:16:54.768 +04:00 DBG Authorization was successful.
2025-04-02 15:16:54.768 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:16:54.773 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:16:54.773 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:16:54.773 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:16:54.773 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:16:54.773 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:16:54.773 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:16:54.773 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:16:54.775 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:16:54.775 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:16:54.775 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 15:16:54.775 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 15:16:54.775 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:16:54.780 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 15:16:54.780 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:16:54.780 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:16:54.780 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 15:16:54.781 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:16:54.781 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:16:54.782 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:16:54.782 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:16:54.782 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:16:54.794 +04:00 INF attempt to make a new Transaction on the offer with Id 1
2025-04-02 15:16:54.831 +04:00 DBG Creating DbConnection.
2025-04-02 15:16:54.831 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:16:54.831 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.831 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.831 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:16:54.831 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:16:54.831 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:16:54.832 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:16:54.840 +04:00 INF Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:16:54.841 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:16:54.841 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:16:54.841 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:16:54.842 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.842 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:16:54.842 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.842 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:16:54.844 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Include(off => off.Category)
    .SingleOrDefault(off => off.Id == __id_0)'
2025-04-02 15:16:54.845 +04:00 DBG Including navigation: 'Offer.Category'.
2025-04-02 15:16:54.854 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Offer>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Offer>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Offer entity;
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Offer instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Offer);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Offer)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<Description>k__BackingField = dataReader.GetString(6);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<Name>k__BackingField = dataReader.GetString(8);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Category instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Category);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(10) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Category)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Offer, Offer, Category>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Offer.Category (Category) ToPrincipal Category Inverse: Offers | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Category")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Category.Offers (List<Offer>) Collection ToDependent Offer Inverse: Category | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Category>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Category, List<Offer>, Offer> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:16:54.861 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.861 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.861 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:16:54.861 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:16:54.861 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:16:54.861 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:16:54.874 +04:00 INF Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:16:54.874 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:16:54.875 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:16:54.875 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:16:54.876 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.876 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:16:54.876 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.876 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:16:54.888 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.888 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.888 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:16:54.890 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:16:54.897 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:16:54.898 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:16:54.898 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:16:54.898 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:16:54.903 +04:00 INF Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:16:54.904 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.904 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:16:54.905 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:16:54.906 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:16:54.906 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 15:16:54.906 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:16:54.922 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:16:54.923 +04:00 DBG Creating transaction savepoint.
2025-04-02 15:16:54.924 +04:00 DBG Created transaction savepoint.
2025-04-02 15:16:54.924 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:16:54.924 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:16:54.924 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:16:54.924 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:16:54.927 +04:00 INF Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:16:54.928 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.928 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:16:54.928 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:16:54.929 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 15:16:54.929 +04:00 DBG Committing transaction.
2025-04-02 15:16:54.932 +04:00 DBG Committed transaction.
2025-04-02 15:16:54.932 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.932 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:16:54.932 +04:00 DBG Disposing transaction.
2025-04-02 15:16:54.936 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.937 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.937 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:16:54.937 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:16:54.937 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:16:54.937 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:16:54.939 +04:00 INF Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:16:54.939 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.939 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:16:54.939 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.939 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:16:54.940 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.940 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.940 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:16:54.941 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:16:54.994 +04:00 DBG Rolling back transaction.
2025-04-02 15:16:54.996 +04:00 DBG Rolled back transaction.
2025-04-02 15:16:54.996 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:54.996 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:16:54.996 +04:00 DBG Disposing transaction.
2025-04-02 15:16:55.200 +04:00 INF Executed action offers.API.Controllers.UserController.CreateTransaction (offers.API) in 426.3349ms
2025-04-02 15:16:55.200 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:16:55.202 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Transaction.TransactionCouldNotBeCreatedException: Failed to create a transaction because of an unknown issue
   at offers.Application.Services.Transactions.TransactionService.CreateAsync(Transaction transaction, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 64
   at offers.API.Controllers.UserController.CreateTransaction(TransactionDTO transactionDTO, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 57
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:16:55.208 +04:00 ERR Handled exception: Failed to create a transaction because of an unknown issueoffers.Application.Exceptions.Transaction.TransactionCouldNotBeCreatedException: Failed to create a transaction because of an unknown issue
   at offers.Application.Services.Transactions.TransactionService.CreateAsync(Transaction transaction, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 64
   at offers.API.Controllers.UserController.CreateTransaction(TransactionDTO transactionDTO, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 57
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:16:55.211 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:16:55.211 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:16:55.211 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:16:55.211 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/User/transaction - 500 null application/json 445.7173ms
2025-04-02 15:18:11.464 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 15:18:11.465 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 15:18:11.466 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 15:18:11.500 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:18:11.501 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:18:11.504 +04:00 DBG Successfully validated the token.
2025-04-02 15:18:11.504 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:18:11.504 +04:00 DBG Authorization was successful.
2025-04-02 15:18:11.504 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:18:11.504 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:18:11.504 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:18:11.504 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:18:11.504 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:18:11.504 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:18:11.504 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:18:11.505 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:18:11.506 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:18:11.508 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:18:11.508 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 15:18:11.508 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 15:18:11.513 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:18:11.547 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 15:18:11.547 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:18:11.547 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:18:11.547 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 15:18:11.548 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:18:11.548 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:18:11.548 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:18:11.548 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:18:11.548 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:18:11.548 +04:00 INF attempt to make a new Transaction on the offer with Id 1
2025-04-02 15:18:20.204 +04:00 DBG Creating DbConnection.
2025-04-02 15:18:20.204 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:18:20.204 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:18:20.204 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:18:20.204 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:18:20.204 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:18:20.204 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:18:20.205 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:18:20.234 +04:00 INF Executed DbCommand (28ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:18:20.235 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:18:20.238 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:18:20.238 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:18:20.239 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:18:20.239 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 5ms reading results.
2025-04-02 15:18:20.239 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:18:20.242 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (2ms).
2025-04-02 15:18:23.132 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:18:23.133 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:18:23.133 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:18:23.133 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:18:23.133 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:18:23.133 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:18:23.160 +04:00 INF Executed DbCommand (26ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:18:23.160 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:18:23.160 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:18:23.160 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:18:23.160 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:18:23.160 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:18:23.160 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:18:23.160 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:18:43.369 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:18:43.369 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:18:43.369 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:18:43.370 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:18:50.497 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:18:50.497 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:18:50.497 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:18:50.498 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:18:50.526 +04:00 INF Executed DbCommand (27ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:18:50.529 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:18:50.529 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 15:20:18.927 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:20:18.931 +04:00 DBG Creating DbConnection.
2025-04-02 15:20:18.932 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:20:18.934 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:20:20.855 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:20:20.855 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:20:20.855 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:20:20.855 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:20:20.856 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:20:20.889 +04:00 INF Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:20:20.889 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:20:20.889 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:20:20.889 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:20:20.889 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:20:20.889 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:20:20.917 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:20:20.917 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:20:35.038 +04:00 DBG Rolling back transaction.
2025-04-02 15:20:35.039 +04:00 DBG Rolled back transaction.
2025-04-02 15:20:35.039 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:20:35.039 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:20:35.796 +04:00 DBG Disposing transaction.
2025-04-02 15:20:41.278 +04:00 INF Executed action offers.API.Controllers.UserController.CreateTransaction (offers.API) in 149773.6564ms
2025-04-02 15:20:41.279 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:20:41.280 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Transaction.TransactionCouldNotBeCreatedException: Failed to create a transaction because of an unknown issue
   at offers.Application.Services.Transactions.TransactionService.CreateAsync(Transaction transaction, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 64
   at offers.API.Controllers.UserController.CreateTransaction(TransactionDTO transactionDTO, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 57
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:20:53.008 +04:00 ERR Handled exception: Failed to create a transaction because of an unknown issueoffers.Application.Exceptions.Transaction.TransactionCouldNotBeCreatedException: Failed to create a transaction because of an unknown issue
   at offers.Application.Services.Transactions.TransactionService.CreateAsync(Transaction transaction, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 64
   at offers.API.Controllers.UserController.CreateTransaction(TransactionDTO transactionDTO, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 57
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:20:54.625 +04:00 DBG Connection ID "18086456109425491998" disconnecting.
2025-04-02 15:20:55.095 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:20:55.095 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:20:55.096 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:20:55.963 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/User/transaction - 500 null application/json 164500.2993ms
2025-04-02 15:21:25.671 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 15:21:25.671 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 15:21:25.671 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 15:21:25.671 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:21:25.672 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:21:25.672 +04:00 DBG Successfully validated the token.
2025-04-02 15:21:25.672 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:21:25.673 +04:00 DBG Authorization was successful.
2025-04-02 15:21:25.673 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:21:25.673 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:21:25.673 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:21:25.673 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:21:25.673 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:21:25.674 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:21:25.674 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:21:25.674 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:21:25.677 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:21:25.677 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:21:25.677 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:21:25.677 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:21:25.677 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:21:25.677 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:21:25.679 +04:00 DBG Creating DbConnection.
2025-04-02 15:21:25.679 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:21:25.679 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:21:25.683 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:21:25.684 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:21:25.685 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:21:25.685 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:21:25.685 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:21:25.698 +04:00 INF Executed DbCommand (13ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:21:25.700 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:21:25.700 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:21:25.700 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:21:25.700 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:21:25.700 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:21:25.700 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:21:25.701 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:21:25.701 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:21:25.701 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:21:25.701 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:21:25.701 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:21:25.701 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:21:25.701 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 15:21:25.702 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 28.654ms
2025-04-02 15:21:25.702 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:21:25.703 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:21:25.703 +04:00 DBG Connection ID "18086456118015426563" disconnecting.
2025-04-02 15:21:25.704 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:21:25.704 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:21:25.704 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 33.6482ms
2025-04-02 15:34:26.556 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 15:34:26.696 +04:00 INF starting web host
2025-04-02 15:34:26.909 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 15:34:27.787 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 15:34:27.788 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 15:34:27.876 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:34:28.055 +04:00 DBG Creating DbConnection.
2025-04-02 15:34:28.096 +04:00 DBG Created DbConnection. (38ms).
2025-04-02 15:34:28.098 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.115 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.382 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.386 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 15:34:28.392 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (3ms).
2025-04-02 15:34:28.394 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (8ms).
2025-04-02 15:34:28.399 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:34:28.422 +04:00 INF Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:34:28.424 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.432 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (4ms).
2025-04-02 15:34:28.432 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.433 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.435 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 15:34:28.437 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 15:34:28.437 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:34:28.437 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:34:28.438 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 15:34:28.453 +04:00 INF Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 15:34:28.511 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:34:28.517 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:34:28.518 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 15:34:28.518 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 15:34:28.519 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 15:34:28.520 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 15:34:28.522 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 15:34:28.523 +04:00 DBG Committing transaction.
2025-04-02 15:34:28.526 +04:00 DBG Committed transaction.
2025-04-02 15:34:28.528 +04:00 DBG Disposing transaction.
2025-04-02 15:34:28.529 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:34:28.530 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:34:28.531 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 15:34:28.531 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 15:34:28.532 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 15:34:28.532 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:34:28.532 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:34:28.533 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 15:34:28.533 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:34:28.533 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:34:28.533 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 15:34:28.534 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 15:34:28.536 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:34:28.536 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:34:28.536 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:34:28.537 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 15:34:28.540 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 15:34:28.543 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.544 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 15:34:28.551 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 15:34:28.552 +04:00 DBG Committing transaction.
2025-04-02 15:34:28.553 +04:00 DBG Committed transaction.
2025-04-02 15:34:28.553 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 15:34:28.553 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:34:28.553 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:34:28.553 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 15:34:28.556 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 15:34:28.556 +04:00 DBG Disposing transaction.
2025-04-02 15:34:28.556 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.557 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:34:28.609 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 15:34:28.835 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 15:34:28.869 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.870 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.870 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:34:28.870 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:34:28.870 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:34:28.870 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 15:34:28.873 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 15:34:28.875 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.876 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 15:34:28.876 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.876 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:34:28.877 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:34:28.879 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:28.880 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 15:34:28.885 +04:00 DBG Hosting starting
2025-04-02 15:34:28.906 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 15:34:28.921 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 15:34:28.928 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 15:34:28.939 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 15:34:28.943 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 15:34:28.943 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 15:34:28.945 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 15:34:28.947 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 15:34:28.948 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 15:34:28.950 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 15:34:28.951 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 15:34:28.994 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:34:29.004 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 15:34:29.050 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 15:34:29.068 +04:00 DBG Creating DbConnection.
2025-04-02 15:34:29.069 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:34:29.070 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:29.073 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:29.073 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:34:29.073 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:34:29.073 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:34:29.074 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:34:29.096 +04:00 INF Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:34:29.108 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:29.109 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 13ms reading results.
2025-04-02 15:34:29.111 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:29.112 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:34:29.113 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:34:29.113 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:34:29.113 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:34:29.176 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 15:34:29.176 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 15:34:29.177 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 15:34:29.177 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 15:34:29.256 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 15:34:29.488 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 15:34:29.488 +04:00 INF Hosting environment: Development
2025-04-02 15:34:29.488 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 15:34:29.488 +04:00 DBG Hosting started
2025-04-02 15:34:29.533 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 15:34:29.570 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 15:34:29.571 +04:00 DBG Request did not match any endpoints
2025-04-02 15:34:29.690 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 15:34:29.692 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 15:34:29.742 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 15:34:29.743 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 15:34:29.751 +04:00 DBG Connection ID "18230571293206380576" disconnecting.
2025-04-02 15:34:29.755 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 523.2737ms
2025-04-02 15:34:29.802 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 15:34:29.808 +04:00 DBG Connection ID "17942340921349636117" disconnecting.
2025-04-02 15:34:29.810 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 6.2768ms
2025-04-02 15:34:29.811 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 15:34:29.887 +04:00 DBG Connection ID "18230571301796315162" disconnecting.
2025-04-02 15:34:29.890 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 79.4977ms
2025-04-02 15:34:30.048 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 15:34:30.049 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 15:34:30.049 +04:00 DBG Request did not match any endpoints
2025-04-02 15:34:30.088 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 40.27ms
2025-04-02 15:35:02.071 +04:00 INF Request starting HTTP/2 PATCH https://localhost:44346/api/User/deposit - application/json 23
2025-04-02 15:35:02.104 +04:00 DBG 1 candidate(s) found for the request path '/api/User/deposit'
2025-04-02 15:35:02.108 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.Deposit (offers.API)' with route pattern 'api/User/deposit' is valid for the request path '/api/User/deposit'
2025-04-02 15:35:02.109 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.Deposit (offers.API)'
2025-04-02 15:35:02.112 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:35:02.247 +04:00 INF Failed to validate the token.Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '4/2/2025 11:28:52 AM', Current time (UTC): '4/2/2025 11:35:02 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)

2025-04-02 15:35:02.259 +04:00 INF Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '4/2/2025 11:28:52 AM', Current time (UTC): '4/2/2025 11:35:02 AM'.
2025-04-02 15:35:02.262 +04:00 DBG Policy authentication schemes  did not succeed
2025-04-02 15:35:02.268 +04:00 INF Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (User)
2025-04-02 15:35:02.274 +04:00 INF AuthenticationScheme: Bearer was challenged.
2025-04-02 15:35:02.275 +04:00 DBG Connection ID "18230571297501347872" disconnecting.
2025-04-02 15:35:02.275 +04:00 INF Request finished HTTP/2 PATCH https://localhost:44346/api/User/deposit - 401 null null 204.9195ms
2025-04-02 15:35:29.362 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 66
2025-04-02 15:35:29.365 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 15:35:29.365 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 15:35:29.367 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:35:29.374 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:35:29.387 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 15:35:29.390 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:35:29.437 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 15:35:29.439 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:35:29.439 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:35:29.440 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:35:29.440 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:35:29.440 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:35:29.443 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:35:29.525 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:35:29.526 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:35:29.535 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:35:29.539 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 15:35:29.541 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:35:29.572 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 15:35:29.573 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:35:29.573 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:35:29.573 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:35:29.588 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:35:29.590 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:35:29.591 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:35:29.591 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:35:29.592 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:35:29.601 +04:00 INF Login attempt for kirvalidzedachi@gmail.com
2025-04-02 15:35:29.619 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .SingleOrDefault(acc => acc.Email == __Email_0)'
2025-04-02 15:35:29.637 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 15:35:29.639 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 15:35:29.752 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:35:29.779 +04:00 DBG Creating DbConnection.
2025-04-02 15:35:29.779 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:35:29.780 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:35:29.780 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:35:29.780 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:35:29.780 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:35:29.785 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 15:35:29.789 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:35:29.842 +04:00 INF Executed DbCommand (56ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:35:29.900 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:35:29.953 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:35:29.955 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:35:29.968 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:35:29.969 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 125ms reading results.
2025-04-02 15:35:29.969 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:35:29.969 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:35:30.075 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:35:30.078 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:35:30.078 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:35:30.079 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:35:30.081 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:35:30.081 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 15:35:30.094 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 650.1089ms
2025-04-02 15:35:30.097 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:35:30.100 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:35:30.100 +04:00 DBG Connection ID "18086456105130524681" disconnecting.
2025-04-02 15:35:30.100 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:35:30.100 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:35:30.102 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 740.1735ms
2025-04-02 15:36:03.903 +04:00 INF Request starting HTTP/2 PATCH https://localhost:44346/api/User/deposit - application/json 23
2025-04-02 15:36:03.905 +04:00 DBG 1 candidate(s) found for the request path '/api/User/deposit'
2025-04-02 15:36:03.906 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.Deposit (offers.API)' with route pattern 'api/User/deposit' is valid for the request path '/api/User/deposit'
2025-04-02 15:36:03.907 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.Deposit (offers.API)'
2025-04-02 15:36:03.908 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:36:03.926 +04:00 DBG Successfully validated the token.
2025-04-02 15:36:03.930 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:36:03.933 +04:00 DBG Authorization was successful.
2025-04-02 15:36:03.933 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.Deposit (offers.API)'
2025-04-02 15:36:03.938 +04:00 INF Route matched with {action = "Deposit", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Deposit(offers.API.Models.DepositRequestDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:36:03.938 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:36:03.939 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:36:03.939 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:36:03.939 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:36:03.939 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:36:03.939 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:36:03.945 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:36:03.947 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:36:03.948 +04:00 DBG Attempting to bind parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO' ...
2025-04-02 15:36:03.948 +04:00 DBG Attempting to bind parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO' using the name '' in request data ...
2025-04-02 15:36:03.948 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:36:03.953 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.DepositRequestDTO'
2025-04-02 15:36:03.953 +04:00 DBG Done attempting to bind parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO'.
2025-04-02 15:36:03.953 +04:00 DBG Done attempting to bind parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO'.
2025-04-02 15:36:03.953 +04:00 DBG Attempting to validate the bound parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO' ...
2025-04-02 15:36:03.954 +04:00 DBG Done attempting to validate the bound parameter 'depositDTO' of type 'offers.API.Models.DepositRequestDTO'.
2025-04-02 15:36:03.955 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:36:03.955 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:36:03.955 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:36:03.955 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:36:12.066 +04:00 INF attempt to make a Deposit
2025-04-02 15:36:16.268 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .FirstOrDefault(acc => acc.Id == __id_0)'
2025-04-02 15:36:16.270 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 15:36:16.270 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 15:36:16.283 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:36:16.303 +04:00 DBG Creating DbConnection.
2025-04-02 15:36:16.303 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:36:16.304 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:36:16.304 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:36:16.304 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:36:16.305 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:36:16.305 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:36:16.306 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:36:16.332 +04:00 INF Executed DbCommand (27ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:36:16.333 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:36:16.335 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:36:16.335 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:36:16.336 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:36:16.336 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 15:36:16.336 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:36:16.336 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:36:28.137 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:36:28.137 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:36:28.138 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:36:28.139 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:36:39.127 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:36:39.130 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:36:39.150 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 15:36:39.157 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:36:39.161 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:36:39.225 +04:00 DBG Creating transaction savepoint.
2025-04-02 15:36:39.242 +04:00 DBG Created transaction savepoint.
2025-04-02 15:36:39.267 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:36:39.267 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:36:39.268 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 15:36:39.268 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:36:39.275 +04:00 INF Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:36:39.280 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:36:39.280 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 5ms reading results.
2025-04-02 15:36:39.285 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:36:39.287 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 15:36:40.642 +04:00 DBG Committing transaction.
2025-04-02 15:36:40.647 +04:00 DBG Committed transaction.
2025-04-02 15:36:40.651 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:36:40.651 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:36:41.189 +04:00 DBG Disposing transaction.
2025-04-02 15:36:53.628 +04:00 INF Executing StatusCodeResult, setting HTTP status code 204
2025-04-02 15:36:53.628 +04:00 INF Executed action offers.API.Controllers.UserController.Deposit (offers.API) in 49688.315ms
2025-04-02 15:36:53.628 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.Deposit (offers.API)'
2025-04-02 15:36:53.629 +04:00 DBG Connection ID "18230571301796315167" disconnecting.
2025-04-02 15:36:55.485 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:36:55.486 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:36:55.486 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:36:56.696 +04:00 INF Request finished HTTP/2 PATCH https://localhost:44346/api/User/deposit - 204 null null 52792.975ms
2025-04-02 15:37:21.386 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 15:37:21.390 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 15:37:21.390 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 15:37:21.390 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:37:21.390 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:37:21.391 +04:00 DBG Successfully validated the token.
2025-04-02 15:37:21.392 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:37:21.397 +04:00 DBG Authorization was successful.
2025-04-02 15:37:21.397 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:37:21.406 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:37:21.407 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:37:21.407 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:37:21.407 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:37:21.407 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:37:21.407 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:37:21.407 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:37:21.411 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:37:21.426 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:37:21.426 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 15:37:21.426 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 15:37:21.426 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:37:21.430 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 15:37:21.431 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:37:21.431 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:37:21.431 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 15:37:21.432 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:37:21.432 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:37:21.432 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:37:21.432 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:37:21.432 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:37:21.435 +04:00 INF attempt to make a new Transaction on the offer with Id 1
2025-04-02 15:37:26.211 +04:00 DBG Creating DbConnection.
2025-04-02 15:37:26.211 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:37:26.212 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:37:26.212 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:37:26.212 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:37:26.212 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:37:26.213 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:37:26.213 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:37:26.249 +04:00 INF Executed DbCommand (35ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:37:26.254 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:37:26.257 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:37:26.257 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:37:26.257 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:37:26.258 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 8ms reading results.
2025-04-02 15:37:26.258 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:37:26.258 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:37:28.283 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Include(off => off.Category)
    .SingleOrDefault(off => off.Id == __id_0)'
2025-04-02 15:37:28.285 +04:00 DBG Including navigation: 'Offer.Category'.
2025-04-02 15:37:28.303 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Offer>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Offer>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Offer entity;
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Offer instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Offer);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Offer)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<Description>k__BackingField = dataReader.GetString(6);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<Name>k__BackingField = dataReader.GetString(8);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Category instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Category);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(10) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Category)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Offer, Offer, Category>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Offer.Category (Category) ToPrincipal Category Inverse: Offers | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Category")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Category.Offers (List<Offer>) Collection ToDependent Offer Inverse: Category | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Category>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Category, List<Offer>, Offer> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:37:28.315 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:37:28.315 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:37:28.315 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:37:28.315 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:37:28.315 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:37:28.315 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:37:28.367 +04:00 INF Executed DbCommand (51ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:37:28.376 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:37:28.410 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:37:28.415 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:37:28.423 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:37:28.423 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 56ms reading results.
2025-04-02 15:37:28.423 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:37:28.423 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:37:42.980 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:37:42.980 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:37:42.980 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:37:42.981 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:37:54.471 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:37:54.471 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:37:54.471 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:37:54.471 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:37:54.515 +04:00 INF Executed DbCommand (44ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:37:54.516 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:37:54.516 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:38:29.113 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:38:29.113 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:38:29.114 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 15:38:29.114 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:38:29.126 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:38:29.129 +04:00 DBG Creating transaction savepoint.
2025-04-02 15:38:29.191 +04:00 DBG Created transaction savepoint.
2025-04-02 15:38:29.191 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:38:29.192 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:38:29.192 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:38:29.192 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:38:29.204 +04:00 INF Executed DbCommand (12ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:38:29.205 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:38:29.205 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:38:29.206 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:38:29.206 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 15:38:30.696 +04:00 DBG Committing transaction.
2025-04-02 15:38:30.703 +04:00 DBG Committed transaction.
2025-04-02 15:38:30.703 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:38:30.704 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:38:31.131 +04:00 DBG Disposing transaction.
2025-04-02 15:38:43.148 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:38:43.149 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:38:43.149 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:38:43.149 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:38:43.149 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:38:43.149 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:38:43.198 +04:00 INF Executed DbCommand (49ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:38:43.199 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:38:43.199 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:38:43.199 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:38:43.199 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:38:49.304 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:38:49.305 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:38:49.305 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:38:49.307 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:49:21.940 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 15:49:22.109 +04:00 INF starting web host
2025-04-02 15:49:22.280 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 15:49:23.057 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 15:49:23.059 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 15:49:23.132 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:49:23.332 +04:00 DBG Creating DbConnection.
2025-04-02 15:49:23.393 +04:00 DBG Created DbConnection. (57ms).
2025-04-02 15:49:23.395 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:23.413 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:23.723 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:23.727 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 15:49:23.734 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (3ms).
2025-04-02 15:49:23.736 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (9ms).
2025-04-02 15:49:23.741 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:49:23.764 +04:00 INF Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:49:23.769 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:23.776 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (6ms).
2025-04-02 15:49:23.776 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:23.777 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:23.778 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 15:49:23.781 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 15:49:23.781 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:49:23.781 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:49:23.784 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 15:49:23.809 +04:00 INF Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 15:49:23.890 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:49:23.899 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:49:23.903 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 15:49:23.903 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 15:49:23.904 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 15:49:23.905 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 15:49:23.910 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 15:49:23.912 +04:00 DBG Committing transaction.
2025-04-02 15:49:23.922 +04:00 DBG Committed transaction.
2025-04-02 15:49:23.924 +04:00 DBG Disposing transaction.
2025-04-02 15:49:23.928 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:49:23.929 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:49:23.932 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 15:49:23.932 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 15:49:23.932 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 15:49:23.933 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:49:23.935 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 15:49:23.936 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 15:49:23.936 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:49:23.936 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:49:23.936 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 15:49:23.937 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 15:49:23.940 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:49:23.941 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:49:23.941 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:49:23.942 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 15:49:23.949 +04:00 INF Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 15:49:23.954 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:23.956 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 15:49:23.964 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 15:49:23.965 +04:00 DBG Committing transaction.
2025-04-02 15:49:23.969 +04:00 DBG Committed transaction.
2025-04-02 15:49:23.969 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 15:49:23.970 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:49:23.970 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 15:49:23.970 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 15:49:23.974 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 15:49:23.974 +04:00 DBG Disposing transaction.
2025-04-02 15:49:23.974 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:23.975 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:49:24.054 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 15:49:24.337 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 15:49:24.398 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:24.399 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:24.400 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:49:24.400 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:49:24.400 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 15:49:24.401 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 15:49:24.406 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 15:49:24.409 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:24.410 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 15:49:24.410 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:24.410 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:49:24.411 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:49:24.415 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:24.417 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 15:49:24.424 +04:00 DBG Hosting starting
2025-04-02 15:49:24.458 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 15:49:24.479 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 15:49:24.491 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 15:49:24.505 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 15:49:24.511 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 15:49:24.512 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 15:49:24.515 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 15:49:24.520 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 15:49:24.522 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 15:49:24.524 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 15:49:24.525 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 15:49:24.561 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:49:24.576 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.Now)'
2025-04-02 15:49:24.668 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 15:49:24.686 +04:00 DBG Creating DbConnection.
2025-04-02 15:49:24.686 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:49:24.689 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:24.694 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:24.694 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:49:24.694 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:49:24.694 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:49:24.695 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:49:24.725 +04:00 INF Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:49:24.740 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:24.741 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 15ms reading results.
2025-04-02 15:49:24.744 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:24.745 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:49:24.747 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:49:24.747 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:49:24.747 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:49:24.846 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 15:49:24.846 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 15:49:24.846 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 15:49:24.846 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 15:49:24.960 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 15:49:25.147 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 15:49:25.189 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 15:49:25.189 +04:00 INF Hosting environment: Development
2025-04-02 15:49:25.189 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 15:49:25.189 +04:00 DBG Hosting started
2025-04-02 15:49:25.224 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 15:49:25.225 +04:00 DBG Request did not match any endpoints
2025-04-02 15:49:25.372 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 15:49:25.374 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 15:49:25.444 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 15:49:25.445 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 15:49:25.467 +04:00 DBG Connection ID "17942340925644603426" disconnecting.
2025-04-02 15:49:25.470 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 528.9791ms
2025-04-02 15:49:25.475 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 15:49:25.486 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 9.719ms
2025-04-02 15:49:25.510 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 15:49:25.604 +04:00 DBG Connection ID "17942340921349636121" disconnecting.
2025-04-02 15:49:25.605 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 94.9906ms
2025-04-02 15:49:25.693 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 15:49:25.694 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 15:49:25.694 +04:00 DBG Request did not match any endpoints
2025-04-02 15:49:25.734 +04:00 DBG Connection ID "17870283331606675462" disconnecting.
2025-04-02 15:49:25.735 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 42.3956ms
2025-04-02 15:50:08.939 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 72
2025-04-02 15:50:08.972 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 15:50:08.975 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 15:50:08.976 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:50:08.982 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:50:09.055 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 15:50:09.057 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:50:09.082 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 15:50:09.084 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:50:09.084 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:50:09.085 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:50:09.085 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:50:09.086 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:50:09.088 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:50:09.151 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:50:09.152 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:50:09.157 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:50:09.159 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 15:50:09.164 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:50:09.192 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 15:50:09.193 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:50:09.193 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:50:09.193 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:50:09.206 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:50:09.207 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:50:09.208 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:50:09.208 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:50:09.208 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:50:09.214 +04:00 INF Login attempt for mishokirvalidze11@gmail.com
2025-04-02 15:50:09.230 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .SingleOrDefault(acc => acc.Email == __Email_0)'
2025-04-02 15:50:09.269 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 15:50:09.271 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 15:50:09.374 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:50:09.402 +04:00 DBG Creating DbConnection.
2025-04-02 15:50:09.403 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:50:09.403 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:50:09.403 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:50:09.403 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:50:09.403 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:50:09.408 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 15:50:09.412 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:50:09.458 +04:00 INF Executed DbCommand (50ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:50:09.531 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:50:09.604 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:50:09.607 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:50:09.620 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:50:09.620 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 161ms reading results.
2025-04-02 15:50:09.621 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:50:09.621 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:50:09.748 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:50:09.751 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:50:09.751 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:50:09.751 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:50:09.753 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:50:09.753 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 15:50:09.770 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 680.459ms
2025-04-02 15:50:09.771 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:50:09.774 +04:00 DBG Connection ID "18230571306091282457" disconnecting.
2025-04-02 15:50:09.774 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:50:09.774 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:50:09.775 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:50:09.777 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 837.9976ms
2025-04-02 15:52:06.823 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Company/offers - application/json 182
2025-04-02 15:52:06.829 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers'
2025-04-02 15:52:06.830 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)' with route pattern 'api/Company/offers' is valid for the request path '/api/Company/offers'
2025-04-02 15:52:06.830 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 15:52:06.830 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:52:06.942 +04:00 DBG Successfully validated the token.
2025-04-02 15:52:06.943 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:52:06.950 +04:00 DBG Authorization was successful.
2025-04-02 15:52:06.951 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 15:52:06.959 +04:00 INF Route matched with {action = "Post", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(offers.API.Models.OfferDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 15:52:06.960 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:52:06.960 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:52:06.960 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:52:06.960 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:52:06.961 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:52:06.961 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:52:06.964 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:52:06.968 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:52:06.976 +04:00 DBG Attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' ...
2025-04-02 15:52:06.976 +04:00 DBG Attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' using the name '' in request data ...
2025-04-02 15:52:06.976 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:52:06.992 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.OfferDTO'
2025-04-02 15:52:06.992 +04:00 DBG Done attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 15:52:06.993 +04:00 DBG Done attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 15:52:06.993 +04:00 DBG Attempting to validate the bound parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' ...
2025-04-02 15:52:06.995 +04:00 DBG Done attempting to validate the bound parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 15:52:06.995 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:52:06.995 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:52:06.995 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:52:06.996 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:52:06.997 +04:00 INF attempt to add a new Offer Accessories
2025-04-02 15:52:07.028 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .FirstOrDefault(acc => acc.Id == __id_0)'
2025-04-02 15:52:07.030 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 15:52:07.031 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 15:52:07.046 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:52:07.064 +04:00 DBG Creating DbConnection.
2025-04-02 15:52:07.064 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:52:07.065 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.065 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.065 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:52:07.065 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:52:07.065 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:52:07.067 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:52:07.080 +04:00 INF Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:52:07.080 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:07.081 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:07.081 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:07.082 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.082 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 15:52:07.082 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.083 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:52:07.087 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .SingleOrDefault(cat => cat.Id == __id_0)'
2025-04-02 15:52:07.094 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:52:07.097 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.097 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.098 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:52:07.098 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:52:07.098 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:52:07.098 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 15:52:07.106 +04:00 INF Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 15:52:07.110 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:07.114 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.115 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 8ms reading results.
2025-04-02 15:52:07.115 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.115 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:52:07.124 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.124 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.125 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:52:07.125 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:52:07.125 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:52:07.125 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:52:07.127 +04:00 INF Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:52:07.127 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.128 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:52:07.128 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.128 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:52:07.166 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Offer.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:07.208 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:07.212 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:52:07.215 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:52:07.262 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:52:07.369 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.369 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.375 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:52:07.375 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:52:07.377 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (2ms).
2025-04-02 15:52:07.377 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime2), @p5='?' (Size = 1000) (DbType = AnsiString), @p6='?' (DbType = Boolean), @p7='?' (Size = 255) (DbType = AnsiString), @p8='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Offers] ([AccountId], [ArchiveAt], [CategoryId], [Count], [CreatedAt], [Description], [IsArchived], [Name], [Price])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-04-02 15:52:07.393 +04:00 INF Executed DbCommand (16ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime2), @p5='?' (Size = 1000) (DbType = AnsiString), @p6='?' (DbType = Boolean), @p7='?' (Size = 255) (DbType = AnsiString), @p8='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Offers] ([AccountId], [ArchiveAt], [CategoryId], [Count], [CreatedAt], [Description], [IsArchived], [Name], [Price])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-04-02 15:52:07.416 +04:00 DBG The foreign key property 'Offer.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 15:52:07.424 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.425 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 31ms reading results.
2025-04-02 15:52:07.426 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.427 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:52:07.448 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:07.457 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 15:52:07.476 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:52:07.476 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:52:07.476 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:52:07.477 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:52:07.477 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:52:07.477 +04:00 INF Executing CreatedAtActionResult, writing value of type 'offers.Application.Models.OfferResponseModel'.
2025-04-02 15:52:07.496 +04:00 DBG Found the endpoints ["offers.API.Controllers.CompanyController.GetMyOffer (offers.API)"] for address (id=[2],action=[GetMyOffer],controller=[Company])
2025-04-02 15:52:07.501 +04:00 DBG Successfully processed template api/Company/offers/{id} for offers.API.Controllers.CompanyController.GetMyOffer (offers.API) resulting in /api/Company/offers/2 and 
2025-04-02 15:52:07.503 +04:00 DBG Link generation succeeded for endpoints ["offers.API.Controllers.CompanyController.GetMyOffer (offers.API)"] with result /api/Company/offers/2
2025-04-02 15:52:07.508 +04:00 INF Executed action offers.API.Controllers.CompanyController.Post (offers.API) in 547.7096ms
2025-04-02 15:52:07.509 +04:00 INF Executed endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 15:52:07.510 +04:00 DBG Connection ID "18230571293206380580" disconnecting.
2025-04-02 15:52:07.509 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:52:07.510 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:07.511 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:52:07.511 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Company/offers - 201 null application/json; charset=utf-8 688.0503ms
2025-04-02 15:52:21.525 +04:00 INF Request starting HTTP/2 DELETE https://localhost:44346/api/Company/offers/1 - null null
2025-04-02 15:52:21.525 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers/1'
2025-04-02 15:52:21.526 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)' with route pattern 'api/Company/offers/{id}' is valid for the request path '/api/Company/offers/1'
2025-04-02 15:52:21.526 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 15:52:21.526 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:52:21.536 +04:00 DBG Successfully validated the token.
2025-04-02 15:52:21.537 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:52:21.541 +04:00 DBG Authorization was successful.
2025-04-02 15:52:21.542 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 15:52:21.546 +04:00 INF Route matched with {action = "Delete", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 15:52:21.546 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:52:21.547 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:52:21.547 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:52:21.547 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:52:21.547 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:52:21.547 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:52:21.556 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:52:21.559 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 15:52:21.560 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 15:52:21.560 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 15:52:21.562 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 15:52:21.562 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 15:52:21.562 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 15:52:21.562 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 15:52:21.563 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:52:21.563 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:52:21.563 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:52:21.563 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:52:21.566 +04:00 INF attempt to Delete an offer with the id 1
2025-04-02 15:52:21.571 +04:00 DBG Creating DbConnection.
2025-04-02 15:52:21.571 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:52:21.571 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:21.571 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:21.571 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:52:21.572 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:52:21.572 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:52:21.572 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:52:21.578 +04:00 INF Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:52:21.579 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:21.580 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:21.580 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:21.580 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:21.580 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:52:21.580 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:21.581 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:52:21.586 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Include(off => off.Category)
    .SingleOrDefault(off => off.Id == __id_0)'
2025-04-02 15:52:21.588 +04:00 DBG Including navigation: 'Offer.Category'.
2025-04-02 15:52:21.603 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Offer>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Offer>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Offer entity;
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Offer instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Offer);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Offer)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<Description>k__BackingField = dataReader.GetString(6);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<Name>k__BackingField = dataReader.GetString(8);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Category instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Category);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(10) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Category)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Offer, Offer, Category>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Offer.Category (Category) ToPrincipal Category Inverse: Offers | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Category")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Category.Offers (List<Offer>) Collection ToDependent Offer Inverse: Category | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Category>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Category, List<Offer>, Offer> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 15:52:21.611 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:21.611 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:21.611 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:52:21.611 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:52:21.611 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:52:21.612 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:52:21.626 +04:00 INF Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:52:21.629 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:21.630 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:21.631 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:52:21.633 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:21.633 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 6ms reading results.
2025-04-02 15:52:21.633 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:21.633 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:52:21.794 +04:00 INF Executed action offers.API.Controllers.CompanyController.Delete (offers.API) in 247.0917ms
2025-04-02 15:52:21.795 +04:00 INF Executed endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 15:52:21.799 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Offer.OfferCouldNotBeDeletedException: you can only delete an offer within 10 minutes of it's creation
   at offers.Application.Services.Offers.OfferService.ValidateDeleteOfferBusinessRules(Int32 id, Int32 accountId, Offer offer) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Offers\OfferService.cs:line 152
   at offers.Application.Services.Offers.OfferService.DeleteAsync(Int32 id, Int32 accountId, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Offers\OfferService.cs:line 119
   at offers.API.Controllers.CompanyController.Delete(Int32 id, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\CompanyController.cs:line 71
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:52:22.106 +04:00 ERR Handled exception: you can only delete an offer within 10 minutes of it's creationoffers.Application.Exceptions.Offer.OfferCouldNotBeDeletedException: you can only delete an offer within 10 minutes of it's creation
   at offers.Application.Services.Offers.OfferService.ValidateDeleteOfferBusinessRules(Int32 id, Int32 accountId, Offer offer) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Offers\OfferService.cs:line 152
   at offers.Application.Services.Offers.OfferService.DeleteAsync(Int32 id, Int32 accountId, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Offers\OfferService.cs:line 119
   at offers.API.Controllers.CompanyController.Delete(Int32 id, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\CompanyController.cs:line 71
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:52:22.111 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:52:22.111 +04:00 DBG Connection ID "17870283331606675464" disconnecting.
2025-04-02 15:52:22.111 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:52:22.111 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:52:22.111 +04:00 INF Request finished HTTP/2 DELETE https://localhost:44346/api/Company/offers/1 - 500 null application/json 586.0083ms
2025-04-02 15:53:37.182 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 66
2025-04-02 15:53:37.183 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 15:53:37.189 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 15:53:37.189 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:53:37.190 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:53:37.190 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 15:53:37.190 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:53:37.193 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 15:53:37.193 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:53:37.193 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:53:37.194 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:53:37.194 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:53:37.195 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:53:37.196 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:53:37.202 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:53:37.203 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 15:53:37.203 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:53:37.203 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 15:53:37.203 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:53:37.206 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 15:53:37.206 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:53:37.206 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:53:37.206 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 15:53:37.207 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 15:53:37.207 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:53:37.207 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:53:37.207 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:53:37.207 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 15:53:37.208 +04:00 INF Login attempt for kirvalidzedachi@gmail.com
2025-04-02 15:53:37.212 +04:00 DBG Creating DbConnection.
2025-04-02 15:53:37.213 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:53:37.214 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:53:37.218 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:53:37.220 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:53:37.220 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:53:37.220 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:53:37.220 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:53:37.229 +04:00 INF Executed DbCommand (9ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 15:53:37.233 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:53:37.237 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:53:37.238 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:53:37.246 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:53:37.246 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 15ms reading results.
2025-04-02 15:53:37.246 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:53:37.246 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:53:37.247 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:53:37.247 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:53:37.247 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:53:37.247 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:53:37.247 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:53:37.247 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 15:53:37.248 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 51.531ms
2025-04-02 15:53:37.248 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 15:53:37.248 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:53:37.248 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:53:37.248 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:53:37.248 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 66.7541ms
2025-04-02 15:54:14.500 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - null null
2025-04-02 15:54:14.501 +04:00 DBG 1 candidate(s) found for the request path '/api/User/offers'
2025-04-02 15:54:14.502 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)' with route pattern 'api/User/offers' is valid for the request path '/api/User/offers'
2025-04-02 15:54:14.502 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:54:14.502 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:54:14.503 +04:00 DBG Successfully validated the token.
2025-04-02 15:54:14.503 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:54:14.508 +04:00 DBG Authorization was successful.
2025-04-02 15:54:14.509 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:54:14.528 +04:00 INF Route matched with {action = "GetOffersByCategories", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOffersByCategories(System.Collections.Generic.List`1[System.Int32], System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:54:14.528 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:54:14.528 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:54:14.528 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:54:14.528 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:54:14.528 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:54:14.528 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:54:14.530 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:54:14.530 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:54:14.537 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 15:54:14.543 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' using the name 'categoryIds' in request data ...
2025-04-02 15:54:14.549 +04:00 DBG Attempting to bind model of type 'System.Int32' using the name 'categoryIds' in request data ...
2025-04-02 15:54:14.549 +04:00 DBG Done attempting to bind model of type 'System.Int32' using the name 'categoryIds'.
2025-04-02 15:54:14.550 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:54:14.550 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:54:14.550 +04:00 DBG Attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 15:54:14.553 +04:00 DBG Done attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:54:14.553 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:54:14.554 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:54:14.554 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:54:14.554 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:54:14.562 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .Where(ctg => __ids_0.Contains(ctg.Id))'
2025-04-02 15:54:14.632 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c
        WHERE c.Id IN (
            SELECT i.value
            FROM OPENJSON(@__ids_0) WITH (value int '') AS i)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c
        WHERE c.Id IN (
            SELECT i.value
            FROM OPENJSON(@__ids_0) WITH (value int '') AS i), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 15:54:14.646 +04:00 DBG Creating DbConnection.
2025-04-02 15:54:14.646 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:54:14.646 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:14.647 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:14.647 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:54:14.647 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:54:14.650 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 15:54:14.650 +04:00 DBG Executing DbCommand [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 15:54:14.661 +04:00 INF Executed DbCommand (11ms) [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 15:54:14.662 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:54:14.663 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:14.663 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:54:14.663 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:14.663 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:54:14.666 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => __categoryIds_0.Contains(off.CategoryId))'
2025-04-02 15:54:14.680 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.CategoryId IN (
            SELECT c.value
            FROM OPENJSON(@__categoryIds_0) WITH (value int '') AS c)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.CategoryId IN (
            SELECT c.value
            FROM OPENJSON(@__categoryIds_0) WITH (value int '') AS c), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 15:54:14.683 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:14.683 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:14.683 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:54:14.683 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:54:14.683 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:54:14.684 +04:00 DBG Executing DbCommand [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 15:54:14.705 +04:00 INF Executed DbCommand (21ms) [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 15:54:14.706 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:54:14.706 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:54:14.706 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:14.707 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:54:14.707 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:14.707 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:54:14.724 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:54:14.724 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:54:14.724 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:54:14.725 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:54:14.725 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:54:14.725 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.OfferResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 15:54:14.727 +04:00 INF Executed action offers.API.Controllers.UserController.GetOffersByCategories (offers.API) in 198.7236ms
2025-04-02 15:54:14.727 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:54:14.728 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:54:14.728 +04:00 DBG Connection ID "18086456109425492004" disconnecting.
2025-04-02 15:54:14.728 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:14.728 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:54:14.728 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - 200 null application/json; charset=utf-8 227.8139ms
2025-04-02 15:54:24.749 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:54:24.750 +04:00 DBG Creating DbConnection.
2025-04-02 15:54:24.750 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:54:24.750 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:24.751 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:24.751 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:54:24.751 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:54:24.751 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:54:24.751 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:54:24.757 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:54:24.757 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:54:24.758 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:24.758 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:54:24.758 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:24.758 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:54:24.758 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:54:24.759 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:24.759 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:54:50.286 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 15:54:50.290 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 15:54:50.290 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 15:54:50.291 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:54:50.291 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:54:50.291 +04:00 DBG Successfully validated the token.
2025-04-02 15:54:50.291 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:54:50.291 +04:00 DBG Authorization was successful.
2025-04-02 15:54:50.292 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:54:50.297 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:54:50.297 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:54:50.297 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:54:50.297 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:54:50.297 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:54:50.297 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:54:50.297 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:54:50.298 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:54:50.300 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:54:50.300 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 15:54:50.300 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 15:54:50.301 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:54:50.309 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 15:54:50.310 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:54:50.310 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:54:50.310 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 15:54:50.310 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:54:50.311 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:54:50.311 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:54:50.311 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:54:50.311 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:54:50.312 +04:00 INF attempt to make a new Transaction on the offer with Id 2
2025-04-02 15:54:59.447 +04:00 DBG Creating DbConnection.
2025-04-02 15:54:59.447 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:54:59.447 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:59.447 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:59.448 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:54:59.448 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:54:59.448 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:54:59.448 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:54:59.481 +04:00 INF Executed DbCommand (33ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:54:59.483 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:54:59.484 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:54:59.484 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:54:59.485 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:59.485 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 15:54:59.485 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:54:59.485 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:55:01.746 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:55:01.746 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:55:01.746 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:55:01.746 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:01.746 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:01.746 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:55:01.775 +04:00 INF Executed DbCommand (28ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:55:01.775 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:55:01.775 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:55:01.775 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:55:01.776 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:55:01.776 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:55:01.776 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:55:01.776 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:55:09.574 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:55:09.575 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:55:09.575 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:55:09.578 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:55:14.295 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:55:14.295 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:14.295 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:14.296 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:55:14.326 +04:00 INF Executed DbCommand (30ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:55:14.326 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:55:14.327 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:55:22.411 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:55:22.412 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:55:22.416 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 15:55:22.417 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:55:22.419 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:55:22.426 +04:00 DBG Creating transaction savepoint.
2025-04-02 15:55:22.466 +04:00 DBG Created transaction savepoint.
2025-04-02 15:55:22.466 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:55:22.466 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:22.467 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:22.467 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:55:22.470 +04:00 INF Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:55:22.472 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:55:22.472 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:55:22.473 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:55:22.473 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 15:55:26.523 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:55:26.523 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:26.523 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:26.524 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:55:26.556 +04:00 INF Executed DbCommand (33ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:55:26.557 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:55:26.557 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:55:32.970 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:55:32.970 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:55:32.971 +04:00 DBG The unchanged property 'Offer.Count' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 15:55:32.971 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:55:32.972 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:55:32.973 +04:00 DBG Creating transaction savepoint.
2025-04-02 15:55:33.005 +04:00 DBG Created transaction savepoint.
2025-04-02 15:55:33.005 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:55:33.005 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:33.005 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:33.005 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 15:55:33.014 +04:00 INF Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 15:55:33.014 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:55:33.014 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:55:33.014 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:55:33.015 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 15:55:37.160 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Transaction.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:55:37.174 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:55:43.755 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:55:43.755 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:55:43.760 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:55:43.761 +04:00 DBG Creating transaction savepoint.
2025-04-02 15:55:43.762 +04:00 DBG Created transaction savepoint.
2025-04-02 15:55:43.762 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:55:43.763 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:43.763 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:55:43.763 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 15:55:43.807 +04:00 ERR Failed executing DbCommand (43ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 15:55:43.814 +04:00 DBG Rolling back to transaction savepoint.
2025-04-02 15:55:43.819 +04:00 DBG Rolled back to transaction savepoint.
2025-04-02 15:55:43.828 +04:00 ERR An exception occurred in the database while saving changes for context type 'offers.Persistance.Context.ApplicationDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.Data.SqlTypes.SqlTypeException: SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.Data.SqlTypes.SqlTypeException: SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)

2025-04-02 15:57:06.100 +04:00 DBG Rolling back transaction.
2025-04-02 15:57:06.107 +04:00 DBG Rolled back transaction.
2025-04-02 15:57:06.110 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:57:06.110 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:57:06.458 +04:00 DBG Disposing transaction.
2025-04-02 15:57:12.263 +04:00 INF Executed action offers.API.Controllers.UserController.CreateTransaction (offers.API) in 141966.207ms
2025-04-02 15:57:12.264 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:57:12.265 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Transaction.TransactionCouldNotBeCreatedException: Failed to create a transaction because of an unknown issue
   at offers.Application.Services.Transactions.TransactionService.CreateAsync(Transaction transaction, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 64
   at offers.API.Controllers.UserController.CreateTransaction(TransactionDTO transactionDTO, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 57
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:57:24.393 +04:00 ERR Handled exception: Failed to create a transaction because of an unknown issueoffers.Application.Exceptions.Transaction.TransactionCouldNotBeCreatedException: Failed to create a transaction because of an unknown issue
   at offers.Application.Services.Transactions.TransactionService.CreateAsync(Transaction transaction, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 64
   at offers.API.Controllers.UserController.CreateTransaction(TransactionDTO transactionDTO, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 57
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:57:25.617 +04:00 DBG Connection ID "18158513703463419935" disconnecting.
2025-04-02 15:57:26.622 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:57:26.622 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:57:26.622 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:57:27.316 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/User/transaction - 500 null application/json 157027.8612ms
2025-04-02 15:57:54.377 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 15:57:54.381 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 15:57:54.381 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 15:57:54.381 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:57:54.381 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:57:54.381 +04:00 DBG Successfully validated the token.
2025-04-02 15:57:54.381 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:57:54.382 +04:00 DBG Authorization was successful.
2025-04-02 15:57:54.382 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:57:54.391 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:57:54.391 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:57:54.391 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:57:54.391 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:57:54.391 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:57:54.391 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:57:54.391 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:57:54.394 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:57:54.395 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:57:54.396 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:57:54.396 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:57:54.396 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:57:54.396 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:57:54.405 +04:00 DBG Creating DbConnection.
2025-04-02 15:57:54.406 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:57:54.406 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:57:54.406 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:57:54.406 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:57:54.406 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:57:54.406 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:57:54.406 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:57:54.415 +04:00 INF Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:57:54.415 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:57:54.416 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:57:54.416 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:57:54.416 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:57:54.416 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:57:54.416 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:57:54.416 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:57:54.426 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:57:54.426 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:57:54.426 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:57:54.426 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:57:54.426 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:57:54.426 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 15:57:54.428 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 37.0125ms
2025-04-02 15:57:54.428 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:57:54.429 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:57:54.429 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:57:54.429 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:57:54.429 +04:00 DBG Connection ID "18374686481282236460" disconnecting.
2025-04-02 15:57:54.429 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 52.7737ms
2025-04-02 15:58:20.892 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - null null
2025-04-02 15:58:20.892 +04:00 DBG 1 candidate(s) found for the request path '/api/User/offers'
2025-04-02 15:58:20.892 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)' with route pattern 'api/User/offers' is valid for the request path '/api/User/offers'
2025-04-02 15:58:20.892 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:58:20.892 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:58:20.893 +04:00 DBG Successfully validated the token.
2025-04-02 15:58:20.893 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:58:20.893 +04:00 DBG Authorization was successful.
2025-04-02 15:58:20.893 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:58:20.894 +04:00 INF Route matched with {action = "GetOffersByCategories", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOffersByCategories(System.Collections.Generic.List`1[System.Int32], System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:58:20.894 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:58:20.894 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:58:20.894 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:58:20.894 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:58:20.894 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:58:20.894 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:58:20.895 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:58:20.895 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:58:20.896 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 15:58:20.896 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' using the name 'categoryIds' in request data ...
2025-04-02 15:58:20.922 +04:00 DBG Attempting to bind model of type 'System.Int32' using the name 'categoryIds' in request data ...
2025-04-02 15:58:20.922 +04:00 DBG Done attempting to bind model of type 'System.Int32' using the name 'categoryIds'.
2025-04-02 15:58:20.922 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:58:20.922 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:58:20.922 +04:00 DBG Attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 15:58:20.923 +04:00 DBG Done attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:58:20.923 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:58:20.923 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:58:20.923 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:58:20.923 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:58:20.923 +04:00 DBG Creating DbConnection.
2025-04-02 15:58:20.923 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:58:20.924 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:58:20.924 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:58:20.924 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:58:20.924 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:58:20.924 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:58:20.924 +04:00 DBG Executing DbCommand [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 15:58:20.946 +04:00 INF Executed DbCommand (22ms) [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 15:58:20.950 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:58:20.950 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:58:20.951 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:58:20.951 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:58:20.951 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:58:20.980 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:58:20.981 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:58:20.983 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:58:20.983 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:58:20.983 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:58:20.983 +04:00 DBG Executing DbCommand [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 15:58:20.995 +04:00 INF Executed DbCommand (12ms) [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 15:58:20.995 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:58:20.996 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:58:20.996 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:58:20.996 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:58:20.996 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:58:20.996 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:58:20.996 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:58:20.996 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:58:20.996 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:58:20.996 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:58:20.997 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:58:20.998 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.OfferResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 15:58:21.000 +04:00 INF Executed action offers.API.Controllers.UserController.GetOffersByCategories (offers.API) in 105.6597ms
2025-04-02 15:58:21.000 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:58:21.000 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:58:21.000 +04:00 DBG Connection ID "18230571306091282459" disconnecting.
2025-04-02 15:58:21.000 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:58:21.000 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:58:21.001 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - 200 null application/json; charset=utf-8 108.8997ms
2025-04-02 15:59:07.409 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 15:59:07.409 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 15:59:07.410 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 15:59:07.410 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:59:07.410 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:59:07.410 +04:00 DBG Successfully validated the token.
2025-04-02 15:59:07.411 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:59:07.411 +04:00 DBG Authorization was successful.
2025-04-02 15:59:07.411 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:59:07.411 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:59:07.411 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:59:07.411 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:59:07.411 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:59:07.411 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:59:07.411 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:59:07.412 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:59:07.415 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:59:07.415 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:59:07.415 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 15:59:07.415 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 15:59:07.415 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 15:59:07.416 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 15:59:07.416 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:59:07.416 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:59:07.416 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 15:59:07.417 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 15:59:07.417 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:59:07.417 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:59:07.417 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:59:07.418 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:59:07.418 +04:00 INF attempt to make a new Transaction on the offer with Id 2
2025-04-02 15:59:07.419 +04:00 DBG Creating DbConnection.
2025-04-02 15:59:07.419 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:59:07.420 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.420 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.420 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:07.420 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.420 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.421 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:59:07.440 +04:00 INF Executed DbCommand (19ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:59:07.440 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.440 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.441 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.441 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.441 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:59:07.441 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.441 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:59:07.442 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.442 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.442 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:07.443 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.443 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.443 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:59:07.450 +04:00 INF Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:59:07.451 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.451 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.451 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.451 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.451 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:59:07.451 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.452 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:59:07.459 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.459 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.459 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 15:59:07.462 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 15:59:07.463 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:07.463 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.463 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.463 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:59:07.469 +04:00 INF Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:59:07.471 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.471 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 15:59:07.472 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:59:07.472 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:59:07.472 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 15:59:07.472 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.472 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:59:07.473 +04:00 DBG Creating transaction savepoint.
2025-04-02 15:59:07.474 +04:00 DBG Created transaction savepoint.
2025-04-02 15:59:07.474 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:07.474 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.474 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.475 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:59:07.481 +04:00 INF Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 15:59:07.481 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.481 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:59:07.481 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.482 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 15:59:07.482 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:07.482 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.483 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.483 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:59:07.485 +04:00 INF Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 15:59:07.486 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.488 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 15:59:07.512 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:59:07.512 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:59:07.512 +04:00 DBG The unchanged property 'Offer.Count' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 15:59:07.512 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.512 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:59:07.512 +04:00 DBG Creating transaction savepoint.
2025-04-02 15:59:07.514 +04:00 DBG Created transaction savepoint.
2025-04-02 15:59:07.514 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:07.514 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.514 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.514 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 15:59:07.517 +04:00 INF Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 15:59:07.518 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.518 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 15:59:07.518 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.518 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 15:59:07.523 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Transaction.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.523 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:07.523 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 15:59:07.523 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 15:59:07.523 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 15:59:07.524 +04:00 DBG Creating transaction savepoint.
2025-04-02 15:59:07.525 +04:00 DBG Created transaction savepoint.
2025-04-02 15:59:07.525 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:07.525 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.525 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:07.525 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 15:59:07.529 +04:00 ERR Failed executing DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 15:59:07.531 +04:00 DBG Rolling back to transaction savepoint.
2025-04-02 15:59:07.531 +04:00 DBG Rolled back to transaction savepoint.
2025-04-02 15:59:07.534 +04:00 ERR An exception occurred in the database while saving changes for context type 'offers.Persistance.Context.ApplicationDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.Data.SqlTypes.SqlTypeException: SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.Data.SqlTypes.SqlTypeException: SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)

2025-04-02 15:59:07.647 +04:00 DBG Rolling back transaction.
2025-04-02 15:59:07.648 +04:00 DBG Rolled back transaction.
2025-04-02 15:59:07.648 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.648 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:59:07.648 +04:00 DBG Disposing transaction.
2025-04-02 15:59:07.779 +04:00 INF Executed action offers.API.Controllers.UserController.CreateTransaction (offers.API) in 367.261ms
2025-04-02 15:59:07.779 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 15:59:07.780 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Transaction.TransactionCouldNotBeCreatedException: Failed to create a transaction because of an unknown issue
   at offers.Application.Services.Transactions.TransactionService.CreateAsync(Transaction transaction, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 64
   at offers.API.Controllers.UserController.CreateTransaction(TransactionDTO transactionDTO, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 57
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:59:07.783 +04:00 ERR Handled exception: Failed to create a transaction because of an unknown issueoffers.Application.Exceptions.Transaction.TransactionCouldNotBeCreatedException: Failed to create a transaction because of an unknown issue
   at offers.Application.Services.Transactions.TransactionService.CreateAsync(Transaction transaction, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 64
   at offers.API.Controllers.UserController.CreateTransaction(TransactionDTO transactionDTO, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 57
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 15:59:07.786 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:59:07.786 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:07.787 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:59:07.787 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/User/transaction - 500 null application/json 378.0501ms
2025-04-02 15:59:16.896 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 15:59:16.896 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 15:59:16.896 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 15:59:16.896 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:59:16.896 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:59:16.897 +04:00 DBG Successfully validated the token.
2025-04-02 15:59:16.897 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:59:16.897 +04:00 DBG Authorization was successful.
2025-04-02 15:59:16.924 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:59:16.924 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:59:16.924 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:59:16.924 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:59:16.924 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:59:16.924 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:59:16.924 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:59:16.924 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:59:16.935 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:59:16.935 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:59:16.935 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:59:16.935 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:59:16.935 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:59:16.935 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:59:16.936 +04:00 DBG Creating DbConnection.
2025-04-02 15:59:16.937 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:59:16.937 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:16.938 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:16.938 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:16.938 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:16.938 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:16.938 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:59:16.948 +04:00 INF Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:59:16.949 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:16.950 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:16.950 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:16.950 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:16.950 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 15:59:16.951 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:16.951 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:59:16.951 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:59:16.951 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:59:16.951 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:59:16.951 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:59:16.952 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:59:16.952 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 15:59:16.953 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 28.3503ms
2025-04-02 15:59:16.953 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:59:16.953 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:59:16.953 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:16.953 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:59:16.954 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 57.7039ms
2025-04-02 15:59:21.426 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 15:59:21.427 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 15:59:21.427 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 15:59:21.427 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:59:21.427 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:59:21.427 +04:00 DBG Successfully validated the token.
2025-04-02 15:59:21.427 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:59:21.428 +04:00 DBG Authorization was successful.
2025-04-02 15:59:21.428 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:59:21.428 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:59:21.428 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:59:21.428 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:59:21.428 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:59:21.428 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:59:21.428 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:59:21.428 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:59:21.430 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:59:21.430 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:59:21.430 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:59:21.430 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:59:21.430 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:59:21.430 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:59:21.431 +04:00 DBG Creating DbConnection.
2025-04-02 15:59:21.431 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:59:21.431 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:21.431 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:21.431 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:21.432 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:21.432 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:21.432 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:59:21.451 +04:00 INF Executed DbCommand (18ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 15:59:21.452 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:21.453 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:21.453 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:21.453 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:21.453 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 15:59:21.453 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:21.454 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:59:21.454 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:59:21.454 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:59:21.454 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:59:21.454 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:59:21.454 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:59:21.454 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 15:59:21.455 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 27.0261ms
2025-04-02 15:59:21.455 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 15:59:21.455 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:59:21.455 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:21.456 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:59:21.456 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 29.4184ms
2025-04-02 15:59:21.456 +04:00 DBG Connection ID "17870283331606675470" disconnecting.
2025-04-02 15:59:24.762 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:59:24.764 +04:00 DBG Creating DbConnection.
2025-04-02 15:59:24.764 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:59:24.764 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:24.764 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:24.765 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:24.765 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:24.765 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:24.765 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:59:24.769 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETDATE()
2025-04-02 15:59:24.769 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:24.770 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:24.770 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:59:24.771 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:24.771 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:59:24.771 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:59:24.771 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:24.772 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:59:30.658 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - null null
2025-04-02 15:59:30.658 +04:00 DBG 1 candidate(s) found for the request path '/api/User/offers'
2025-04-02 15:59:30.658 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)' with route pattern 'api/User/offers' is valid for the request path '/api/User/offers'
2025-04-02 15:59:30.658 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:59:30.658 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 15:59:30.659 +04:00 DBG Successfully validated the token.
2025-04-02 15:59:30.659 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 15:59:30.659 +04:00 DBG Authorization was successful.
2025-04-02 15:59:30.659 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:59:30.659 +04:00 INF Route matched with {action = "GetOffersByCategories", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOffersByCategories(System.Collections.Generic.List`1[System.Int32], System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 15:59:30.659 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 15:59:30.659 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 15:59:30.659 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 15:59:30.659 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 15:59:30.659 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 15:59:30.659 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:59:30.660 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 15:59:30.660 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 15:59:30.660 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 15:59:30.661 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' using the name 'categoryIds' in request data ...
2025-04-02 15:59:30.661 +04:00 DBG Attempting to bind model of type 'System.Int32' using the name 'categoryIds' in request data ...
2025-04-02 15:59:30.661 +04:00 DBG Done attempting to bind model of type 'System.Int32' using the name 'categoryIds'.
2025-04-02 15:59:30.661 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:59:30.661 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:59:30.661 +04:00 DBG Attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 15:59:30.661 +04:00 DBG Done attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 15:59:30.661 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:59:30.661 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:59:30.661 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 15:59:30.661 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 15:59:30.662 +04:00 DBG Creating DbConnection.
2025-04-02 15:59:30.662 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 15:59:30.662 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:30.662 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:30.663 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:30.663 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:30.663 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:30.666 +04:00 DBG Executing DbCommand [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 15:59:30.676 +04:00 INF Executed DbCommand (10ms) [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 15:59:30.676 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:30.677 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:30.677 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 15:59:30.677 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:30.677 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:59:30.679 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:30.680 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:30.680 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 15:59:30.680 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:30.681 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 15:59:30.681 +04:00 DBG Executing DbCommand [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 15:59:30.689 +04:00 INF Executed DbCommand (9ms) [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 15:59:30.690 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:30.692 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 15:59:30.693 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:30.693 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 15:59:30.693 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:30.693 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 15:59:30.693 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 15:59:30.693 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 15:59:30.693 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 15:59:30.693 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 15:59:30.694 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 15:59:30.694 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.OfferResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 15:59:30.695 +04:00 INF Executed action offers.API.Controllers.UserController.GetOffersByCategories (offers.API) in 36.0241ms
2025-04-02 15:59:30.695 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 15:59:30.696 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 15:59:30.696 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 15:59:30.696 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 15:59:30.696 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - 200 null application/json; charset=utf-8 38.7626ms
2025-04-02 15:59:30.697 +04:00 DBG Connection ID "18158513712053354523" disconnecting.
2025-04-02 16:01:01.149 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 16:01:01.150 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 16:01:01.151 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 16:01:01.151 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:01:01.151 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:01:01.151 +04:00 DBG Successfully validated the token.
2025-04-02 16:01:01.152 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:01:01.152 +04:00 DBG Authorization was successful.
2025-04-02 16:01:01.152 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:01:01.152 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:01:01.152 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:01:01.152 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:01:01.152 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:01:01.152 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:01:01.152 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:01:01.152 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:01:01.154 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:01:01.154 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:01:01.154 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:01:01.155 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 16:01:01.155 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:01:01.156 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 16:01:01.156 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:01:01.156 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:01:01.156 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:01:01.156 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:01:01.156 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:01:01.156 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:01:01.157 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:01:01.157 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:01:01.157 +04:00 INF attempt to make a new Transaction on the offer with Id 2
2025-04-02 16:01:01.158 +04:00 DBG Creating DbConnection.
2025-04-02 16:01:01.158 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:01:01.158 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.159 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.159 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:01:01.159 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.159 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.159 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:01:01.206 +04:00 INF Executed DbCommand (24ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:01:01.206 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:01:01.206 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:01:01.206 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:01:01.206 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.207 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:01:01.207 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.207 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:01:01.207 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.207 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.207 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:01:01.207 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.207 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.208 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:01:01.211 +04:00 INF Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:01:01.211 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:01:01.212 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:01:01.212 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:01:01.212 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.212 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:01:01.212 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.212 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:01:01.218 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.218 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.219 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:01:01.219 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:01:01.219 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:01:01.219 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.220 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.220 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:01:01.221 +04:00 INF Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:01:01.222 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.225 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 16:01:01.226 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:01:01.226 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:01:01.228 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:01:01.228 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:01:01.228 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:01:01.228 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:01:01.230 +04:00 DBG Created transaction savepoint.
2025-04-02 16:01:01.230 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:01:01.230 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.230 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.230 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:01:01.234 +04:00 INF Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:01:01.234 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.235 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:01:01.235 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:01:01.235 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:01:01.236 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:01:01.236 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.236 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.236 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:01:01.237 +04:00 INF Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:01:01.238 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.238 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:01:01.238 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:01:01.238 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:01:01.238 +04:00 DBG The unchanged property 'Offer.Count' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:01:01.239 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:01:01.239 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:01:01.239 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:01:01.240 +04:00 DBG Created transaction savepoint.
2025-04-02 16:01:01.241 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:01:01.241 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.241 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:01:01.241 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:01:01.243 +04:00 INF Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:01:01.244 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:01:01.244 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:01:01.244 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:01:01.244 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:01:07.067 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Transaction.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:01:07.068 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:09:36.404 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:09:36.414 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:09:36.414 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:09:36.417 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:09:36.418 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:09:36.424 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.UtcNow)'
2025-04-02 16:09:36.477 +04:00 DBG Created transaction savepoint.
2025-04-02 16:09:36.477 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:09:36.477 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:09:36.477 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:09:36.477 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:09:36.481 +04:00 ERR Failed executing DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:09:36.482 +04:00 DBG Rolling back to transaction savepoint.
2025-04-02 16:09:36.484 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:09:36.488 +04:00 DBG Creating DbConnection.
2025-04-02 16:09:36.488 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:09:36.488 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:09:36.496 +04:00 DBG Rolled back to transaction savepoint.
2025-04-02 16:09:36.508 +04:00 ERR An exception occurred in the database while saving changes for context type 'offers.Persistance.Context.ApplicationDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.Data.SqlTypes.SqlTypeException: SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.Data.SqlTypes.SqlTypeException: SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)

2025-04-02 16:09:36.741 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:09:36.744 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:09:36.744 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:09:36.744 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:09:36.745 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:10:35.341 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 16:10:35.566 +04:00 INF starting web host
2025-04-02 16:10:35.733 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 16:10:36.453 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:10:36.454 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:10:36.531 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:10:36.680 +04:00 DBG Creating DbConnection.
2025-04-02 16:10:36.723 +04:00 DBG Created DbConnection. (41ms).
2025-04-02 16:10:36.724 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:36.739 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.023 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.027 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:10:37.036 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (6ms).
2025-04-02 16:10:37.038 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (11ms).
2025-04-02 16:10:37.052 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:10:37.079 +04:00 INF Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:10:37.081 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.088 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (4ms).
2025-04-02 16:10:37.089 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.090 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.091 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 16:10:37.093 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:10:37.093 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:10:37.093 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:10:37.094 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 16:10:37.122 +04:00 INF Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 16:10:37.189 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:10:37.196 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:10:37.199 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:10:37.199 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:10:37.200 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 16:10:37.201 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 16:10:37.204 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 16:10:37.206 +04:00 DBG Committing transaction.
2025-04-02 16:10:37.211 +04:00 DBG Committed transaction.
2025-04-02 16:10:37.213 +04:00 DBG Disposing transaction.
2025-04-02 16:10:37.215 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:10:37.216 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:10:37.217 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:10:37.217 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:10:37.218 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:10:37.218 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:10:37.219 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:10:37.219 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:10:37.219 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:10:37.219 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:10:37.219 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 16:10:37.220 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 16:10:37.223 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:10:37.223 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:10:37.223 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:10:37.223 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 16:10:37.229 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 16:10:37.233 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.235 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 16:10:37.241 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 16:10:37.241 +04:00 DBG Committing transaction.
2025-04-02 16:10:37.242 +04:00 DBG Committed transaction.
2025-04-02 16:10:37.242 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:10:37.242 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:10:37.242 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:10:37.242 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 16:10:37.251 +04:00 INF Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 16:10:37.251 +04:00 DBG Disposing transaction.
2025-04-02 16:10:37.252 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.252 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:10:37.362 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 16:10:37.682 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 16:10:37.732 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.732 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.732 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:10:37.732 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:10:37.733 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:10:37.733 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 16:10:37.738 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 16:10:37.741 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.741 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 16:10:37.741 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.741 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:10:37.743 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:10:37.746 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:37.747 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 16:10:37.752 +04:00 DBG Hosting starting
2025-04-02 16:10:37.783 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 16:10:37.804 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 16:10:37.818 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 16:10:37.838 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 16:10:37.843 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 16:10:37.846 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 16:10:37.851 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 16:10:37.852 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 16:10:37.854 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 16:10:37.856 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 16:10:37.858 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 16:10:37.906 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:10:37.924 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.UtcNow)'
2025-04-02 16:10:38.006 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:10:38.033 +04:00 DBG Creating DbConnection.
2025-04-02 16:10:38.034 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:10:38.036 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:38.039 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:38.039 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:10:38.040 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:10:38.040 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:10:38.041 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:10:38.072 +04:00 INF Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:10:38.176 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:10:38.207 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 16:10:38.207 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 16:10:38.207 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 16:10:38.207 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 16:10:38.270 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:38.271 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 199ms reading results.
2025-04-02 16:10:38.274 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:38.275 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:10:38.276 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:10:38.276 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:10:38.276 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:10:38.274 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 16:10:38.457 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 16:10:38.471 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 16:10:38.471 +04:00 INF Hosting environment: Development
2025-04-02 16:10:38.471 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 16:10:38.471 +04:00 DBG Hosting started
2025-04-02 16:10:38.490 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 16:10:38.491 +04:00 DBG Request did not match any endpoints
2025-04-02 16:10:38.617 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 16:10:38.620 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 16:10:38.691 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 16:10:38.693 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 16:10:38.770 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 16:10:38.834 +04:00 DBG Connection ID "18086456109425492007" disconnecting.
2025-04-02 16:10:38.834 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 511.9517ms
2025-04-02 16:10:38.841 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 69.6397ms
2025-04-02 16:10:38.842 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 16:10:38.958 +04:00 DBG Connection ID "18158513703463419937" disconnecting.
2025-04-02 16:10:38.966 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 124.0609ms
2025-04-02 16:10:39.055 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 16:10:39.055 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 16:10:39.055 +04:00 DBG Request did not match any endpoints
2025-04-02 16:10:39.121 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 66.4096ms
2025-04-02 16:11:11.648 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 16:11:11.702 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 16:11:11.708 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 16:11:11.711 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:11:11.716 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:11:11.852 +04:00 DBG Successfully validated the token.
2025-04-02 16:11:11.855 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:11:11.865 +04:00 DBG Authorization was successful.
2025-04-02 16:11:11.866 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:11:11.892 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:11:11.894 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:11:11.895 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:11:11.895 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:11:11.895 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:11:11.896 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:11:11.898 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:11:11.969 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:11:11.971 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:11:11.977 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:11:11.980 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 16:11:11.982 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:11:12.009 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 16:11:12.010 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:11:12.010 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:11:12.010 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:11:12.020 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:11:12.021 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:11:12.022 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:11:12.022 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:11:12.023 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:11:12.028 +04:00 INF attempt to make a new Transaction on the offer with Id 2
2025-04-02 16:11:12.119 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .FirstOrDefault(acc => acc.Id == __id_0)'
2025-04-02 16:11:12.145 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 16:11:12.148 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 16:11:12.220 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:11:12.247 +04:00 DBG Creating DbConnection.
2025-04-02 16:11:12.247 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:11:12.247 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.248 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.248 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:11:12.248 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.251 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (2ms).
2025-04-02 16:11:12.253 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:11:12.308 +04:00 INF Executed DbCommand (56ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:11:12.322 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.361 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.364 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.372 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.372 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 63ms reading results.
2025-04-02 16:11:12.372 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.373 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:11:12.379 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Include(off => off.Category)
    .SingleOrDefault(off => off.Id == __id_0)'
2025-04-02 16:11:12.381 +04:00 DBG Including navigation: 'Offer.Category'.
2025-04-02 16:11:12.398 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Offer>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Offer>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Offer entity;
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Offer instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Offer);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Offer)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<Description>k__BackingField = dataReader.GetString(6);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<Name>k__BackingField = dataReader.GetString(8);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Category instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Category);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(10) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Category)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Offer, Offer, Category>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Offer.Category (Category) ToPrincipal Category Inverse: Offers | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Category")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Category.Offers (List<Offer>) Collection ToDependent Offer Inverse: Category | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Category>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Category, List<Offer>, Offer> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:11:12.407 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.407 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.407 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:11:12.408 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.408 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.409 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:11:12.418 +04:00 INF Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:11:12.419 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.423 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.428 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.432 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.433 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 14ms reading results.
2025-04-02 16:11:12.433 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.433 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:11:12.438 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.439 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.439 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:11:12.441 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:11:12.445 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:11:12.446 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.446 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.446 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:11:12.447 +04:00 INF Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:11:12.448 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.448 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:11:12.455 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:11:12.459 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:11:12.479 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:11:12.485 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.504 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:11:12.554 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:11:12.567 +04:00 DBG Created transaction savepoint.
2025-04-02 16:11:12.572 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:11:12.572 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.576 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 16:11:12.577 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:11:12.584 +04:00 INF Executed DbCommand (8ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:11:12.590 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.591 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 6ms reading results.
2025-04-02 16:11:12.597 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.599 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:11:12.600 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:11:12.601 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.601 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.601 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:11:12.602 +04:00 INF Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:11:12.603 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.603 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:11:12.605 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:11:12.605 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:11:12.606 +04:00 DBG The unchanged property 'Offer.Count' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:11:12.606 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.606 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:11:12.608 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:11:12.610 +04:00 DBG Created transaction savepoint.
2025-04-02 16:11:12.610 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:11:12.610 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.610 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.611 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:11:12.613 +04:00 INF Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:11:12.614 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.614 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:11:12.615 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.615 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:11:12.640 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Transaction.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.661 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:11:12.662 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:11:12.662 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:11:12.668 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:11:12.684 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:11:12.685 +04:00 DBG Created transaction savepoint.
2025-04-02 16:11:12.685 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:11:12.686 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.686 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:11:12.686 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:11:12.696 +04:00 ERR Failed executing DbCommand (8ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:11:12.701 +04:00 DBG Rolling back to transaction savepoint.
2025-04-02 16:11:12.705 +04:00 DBG Rolled back to transaction savepoint.
2025-04-02 16:11:12.718 +04:00 ERR An exception occurred in the database while saving changes for context type 'offers.Persistance.Context.ApplicationDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.Data.SqlTypes.SqlTypeException: SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> System.Data.SqlTypes.SqlTypeException: SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)

2025-04-02 16:11:12.883 +04:00 DBG Rolling back transaction.
2025-04-02 16:11:12.886 +04:00 DBG Rolled back transaction.
2025-04-02 16:11:12.887 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:12.888 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:11:12.889 +04:00 DBG Disposing transaction.
2025-04-02 16:11:13.013 +04:00 INF Executed action offers.API.Controllers.UserController.CreateTransaction (offers.API) in 1113.9404ms
2025-04-02 16:11:13.014 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:11:13.018 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Transaction.TransactionCouldNotBeCreatedException: Failed to create a transaction because of an unknown issue
   at offers.Application.Services.Transactions.TransactionService.CreateAsync(Transaction transaction, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 64
   at offers.API.Controllers.UserController.CreateTransaction(TransactionDTO transactionDTO, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 57
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 16:11:13.198 +04:00 ERR Handled exception: Failed to create a transaction because of an unknown issueoffers.Application.Exceptions.Transaction.TransactionCouldNotBeCreatedException: Failed to create a transaction because of an unknown issue
   at offers.Application.Services.Transactions.TransactionService.CreateAsync(Transaction transaction, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 64
   at offers.API.Controllers.UserController.CreateTransaction(TransactionDTO transactionDTO, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 57
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 16:11:13.203 +04:00 DBG Connection ID "18374686481282236464" disconnecting.
2025-04-02 16:11:13.203 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:11:13.204 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:11:13.204 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:11:13.206 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/User/transaction - 500 null application/json 1558.3166ms
2025-04-02 16:11:30.888 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 16:11:30.901 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 16:11:30.902 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 16:11:30.902 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:11:30.904 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:11:30.917 +04:00 DBG Successfully validated the token.
2025-04-02 16:11:30.917 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:11:30.926 +04:00 DBG Authorization was successful.
2025-04-02 16:11:30.928 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:11:30.928 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:11:30.928 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:11:30.929 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:11:30.929 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:11:30.929 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:11:30.929 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:11:30.930 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:11:30.932 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:11:30.933 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:11:30.934 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:11:30.935 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 16:11:30.935 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:11:30.936 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 16:11:30.936 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:11:30.936 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:11:30.936 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:11:30.937 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:11:30.937 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:11:30.938 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:11:30.938 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:11:30.940 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:11:30.943 +04:00 INF attempt to make a new Transaction on the offer with Id 2
2025-04-02 16:18:33.088 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 16:18:33.256 +04:00 INF starting web host
2025-04-02 16:18:33.422 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 16:18:34.160 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:18:34.161 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:18:34.292 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:18:34.488 +04:00 DBG Creating DbConnection.
2025-04-02 16:18:34.548 +04:00 DBG Created DbConnection. (62ms).
2025-04-02 16:18:34.553 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:34.568 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:35.140 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:35.153 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:18:35.176 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (12ms).
2025-04-02 16:18:35.180 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (32ms).
2025-04-02 16:18:35.197 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:18:35.257 +04:00 INF Executed DbCommand (61ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:18:35.261 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:35.278 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (11ms).
2025-04-02 16:18:35.278 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:35.279 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:35.281 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 16:18:35.287 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:18:35.288 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:18:35.288 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-04-02 16:18:35.290 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 16:18:35.331 +04:00 INF Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 16:18:35.475 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:18:35.484 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:18:35.487 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:18:35.487 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:18:35.489 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-04-02 16:18:35.489 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 16:18:35.495 +04:00 INF Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 16:18:35.497 +04:00 DBG Committing transaction.
2025-04-02 16:18:35.506 +04:00 DBG Committed transaction.
2025-04-02 16:18:35.508 +04:00 DBG Disposing transaction.
2025-04-02 16:18:35.511 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:18:35.512 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:18:35.513 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:18:35.514 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:18:35.514 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:18:35.514 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:18:35.579 +04:00 INF Executed DbCommand (65ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:18:35.580 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:18:35.580 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:18:35.580 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:18:35.580 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 16:18:35.584 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 16:18:35.587 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:18:35.587 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:18:35.587 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:18:35.588 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 16:18:35.605 +04:00 INF Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 16:18:35.610 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:35.612 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 16:18:35.626 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 16:18:35.627 +04:00 DBG Committing transaction.
2025-04-02 16:18:35.628 +04:00 DBG Committed transaction.
2025-04-02 16:18:35.629 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:18:35.629 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:18:35.629 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:18:35.629 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 16:18:35.645 +04:00 INF Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 16:18:35.645 +04:00 DBG Disposing transaction.
2025-04-02 16:18:35.646 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:35.646 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:18:35.764 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 16:18:35.988 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 16:18:36.031 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:36.032 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:36.032 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:18:36.032 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:18:36.032 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:18:36.032 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 16:18:36.035 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 16:18:36.039 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:36.039 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 16:18:36.039 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:36.039 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:18:36.041 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:18:36.043 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:36.044 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 16:18:36.050 +04:00 DBG Hosting starting
2025-04-02 16:18:36.076 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 16:18:36.093 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 16:18:36.101 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 16:18:36.109 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 16:18:36.113 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 16:18:36.114 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 16:18:36.116 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 16:18:36.118 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 16:18:36.119 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 16:18:36.121 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 16:18:36.122 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 16:18:36.146 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:18:36.155 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.UtcNow)'
2025-04-02 16:18:36.205 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:18:36.222 +04:00 DBG Creating DbConnection.
2025-04-02 16:18:36.223 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:18:36.224 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:36.227 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:36.227 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:18:36.227 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:18:36.228 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:18:36.228 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:18:36.244 +04:00 INF Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:18:36.324 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:18:36.359 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 16:18:36.359 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 16:18:36.359 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 16:18:36.359 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 16:18:36.412 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:36.413 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 168ms reading results.
2025-04-02 16:18:36.415 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:36.416 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:18:36.417 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:18:36.417 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:18:36.417 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:18:36.420 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 16:18:36.600 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 16:18:36.601 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 16:18:36.602 +04:00 INF Hosting environment: Development
2025-04-02 16:18:36.602 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 16:18:36.602 +04:00 DBG Hosting started
2025-04-02 16:18:36.631 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 16:18:36.631 +04:00 DBG Request did not match any endpoints
2025-04-02 16:18:36.735 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 16:18:36.738 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 16:18:36.799 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 16:18:36.800 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 16:18:36.811 +04:00 DBG Connection ID "18158513703463419943" disconnecting.
2025-04-02 16:18:36.817 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 411.4093ms
2025-04-02 16:18:36.891 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 16:18:36.925 +04:00 DBG Connection ID "18230571293206380583" disconnecting.
2025-04-02 16:18:36.925 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 6.8414ms
2025-04-02 16:18:36.932 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 16:18:37.168 +04:00 DBG Connection ID "18158513707758387240" disconnecting.
2025-04-02 16:18:37.170 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 237.9318ms
2025-04-02 16:18:37.547 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 16:18:37.547 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 16:18:37.547 +04:00 DBG Request did not match any endpoints
2025-04-02 16:18:37.613 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 66.7459ms
2025-04-02 16:18:37.613 +04:00 DBG Connection ID "18230571293206380585" disconnecting.
2025-04-02 16:19:09.277 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 16:19:09.309 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 16:19:09.315 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 16:19:09.316 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:19:09.320 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:19:09.501 +04:00 DBG Successfully validated the token.
2025-04-02 16:19:09.504 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:19:09.521 +04:00 INF Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (User)
2025-04-02 16:19:09.527 +04:00 INF AuthenticationScheme: Bearer was forbidden.
2025-04-02 16:19:09.531 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/User/transaction - 403 null null 254.4828ms
2025-04-02 16:19:55.154 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 66
2025-04-02 16:19:55.160 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 16:19:55.161 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 16:19:55.161 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:19:55.162 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:19:55.169 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 16:19:55.171 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:19:55.205 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 16:19:55.206 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:19:55.208 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:19:55.210 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:19:55.211 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:19:55.212 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:19:55.214 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 16:19:55.282 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:19:55.284 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 16:19:55.288 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 16:19:55.292 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 16:19:55.295 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:19:55.316 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 16:19:55.317 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:19:55.317 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:19:55.318 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 16:19:55.327 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:19:55.329 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:19:55.329 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:19:55.329 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:19:55.330 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:19:55.332 +04:00 INF Login attempt for kirvalidzedachi@gmail.com
2025-04-02 16:19:55.342 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .SingleOrDefault(acc => acc.Email == __Email_0)'
2025-04-02 16:19:55.355 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 16:19:55.358 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 16:19:55.450 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:19:55.482 +04:00 DBG Creating DbConnection.
2025-04-02 16:19:55.482 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:19:55.482 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:19:55.483 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:19:55.483 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:19:55.483 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:19:55.487 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 16:19:55.493 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 16:19:55.537 +04:00 INF Executed DbCommand (50ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 16:19:55.553 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:19:55.594 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:19:55.596 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:19:55.603 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:19:55.604 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 66ms reading results.
2025-04-02 16:19:55.604 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:19:55.604 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:19:55.714 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:19:55.716 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:19:55.716 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:19:55.716 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:19:55.718 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:19:55.719 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 16:19:55.738 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 522.1912ms
2025-04-02 16:19:55.739 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:19:55.744 +04:00 DBG Connection ID "17942340921349636123" disconnecting.
2025-04-02 16:19:55.744 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:19:55.744 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:19:55.744 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:19:55.746 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 591.6013ms
2025-04-02 16:20:19.567 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 16:20:19.569 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 16:20:19.569 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 16:20:19.569 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:20:19.570 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:20:19.572 +04:00 DBG Successfully validated the token.
2025-04-02 16:20:19.574 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:20:19.584 +04:00 DBG Authorization was successful.
2025-04-02 16:20:19.585 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:20:19.598 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:20:19.598 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:20:19.598 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:20:19.599 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:20:19.599 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:20:19.599 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:20:19.599 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:20:19.601 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:20:19.603 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:20:19.613 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:20:19.613 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 16:20:19.613 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:20:19.621 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 16:20:19.621 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:20:19.621 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:20:19.622 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:20:19.625 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:20:19.625 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:20:19.625 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:20:19.625 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:20:19.626 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:20:19.628 +04:00 INF attempt to make a new Transaction on the offer with Id 2
2025-04-02 16:20:32.443 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .FirstOrDefault(acc => acc.Id == __id_0)'
2025-04-02 16:20:32.445 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 16:20:32.446 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 16:20:32.460 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:20:32.483 +04:00 DBG Creating DbConnection.
2025-04-02 16:20:32.483 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:20:32.483 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:32.483 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:32.484 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:20:32.484 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:20:32.484 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:20:32.485 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:20:32.524 +04:00 INF Executed DbCommand (40ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:20:32.525 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:20:32.527 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:20:32.527 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:20:32.529 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:32.529 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 16:20:32.529 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:32.530 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (1ms).
2025-04-02 16:20:34.806 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Include(off => off.Category)
    .SingleOrDefault(off => off.Id == __id_0)'
2025-04-02 16:20:34.808 +04:00 DBG Including navigation: 'Offer.Category'.
2025-04-02 16:20:34.826 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Offer>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Offer>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Offer entity;
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Offer instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Offer);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Offer)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<Description>k__BackingField = dataReader.GetString(6);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<Name>k__BackingField = dataReader.GetString(8);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Category instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Category);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(10) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Category)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Offer, Offer, Category>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Offer.Category (Category) ToPrincipal Category Inverse: Offers | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Category")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Category.Offers (List<Offer>) Collection ToDependent Offer Inverse: Category | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Category>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Category, List<Offer>, Offer> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:20:34.837 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:34.841 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:34.841 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:20:34.841 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:20:34.841 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:20:34.841 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:20:34.874 +04:00 INF Executed DbCommand (33ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:20:34.874 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:20:34.881 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:20:34.886 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:20:34.893 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:34.893 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 19ms reading results.
2025-04-02 16:20:34.894 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:34.894 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:20:42.633 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:42.633 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:42.634 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:20:42.635 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:20:46.965 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:20:46.965 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:20:46.965 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:20:46.965 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:20:47.000 +04:00 INF Executed DbCommand (35ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:20:47.000 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:47.001 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:20:53.431 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:20:53.435 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:20:53.460 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:20:53.472 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:20:53.496 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:20:53.577 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:20:53.596 +04:00 DBG Created transaction savepoint.
2025-04-02 16:20:53.629 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:20:53.629 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:20:53.630 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 16:20:53.631 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:20:53.637 +04:00 INF Executed DbCommand (6ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:20:53.644 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:53.645 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 7ms reading results.
2025-04-02 16:20:53.654 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:20:53.658 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:20:57.744 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:20:57.744 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:20:57.744 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:20:57.744 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:20:57.791 +04:00 INF Executed DbCommand (46ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:20:57.791 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:20:57.791 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:21:04.148 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:21:04.148 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:21:04.148 +04:00 DBG The unchanged property 'Offer.Count' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:21:04.148 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:21:04.149 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:21:04.151 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:21:04.155 +04:00 DBG Created transaction savepoint.
2025-04-02 16:21:04.156 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:21:04.156 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:21:04.156 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:21:04.157 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:21:04.182 +04:00 INF Executed DbCommand (25ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:21:04.191 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:21:04.191 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 16:21:04.192 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:21:04.192 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:21:09.017 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Transaction.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:21:09.033 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:21:12.748 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:21:12.748 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:21:12.754 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:21:12.771 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:21:12.773 +04:00 DBG Created transaction savepoint.
2025-04-02 16:21:12.773 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:21:12.773 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:21:12.776 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (2ms).
2025-04-02 16:21:12.776 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:21:12.821 +04:00 INF Executed DbCommand (46ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:21:12.829 +04:00 DBG The foreign key property 'Transaction.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:21:12.832 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:21:12.832 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 10ms reading results.
2025-04-02 16:21:12.836 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:21:12.836 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:21:14.133 +04:00 DBG Committing transaction.
2025-04-02 16:21:14.136 +04:00 DBG Committed transaction.
2025-04-02 16:21:14.139 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:21:14.139 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:21:14.534 +04:00 DBG Disposing transaction.
2025-04-02 16:21:21.029 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:21:21.029 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:21:21.029 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:21:21.029 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:21:21.030 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:21:21.030 +04:00 INF Executing CreatedAtActionResult, writing value of type 'offers.Application.Models.TransactionResponseModel'.
2025-04-02 16:21:21.169 +04:00 DBG Found the endpoints ["offers.API.Controllers.UserController.GetMyTransaction (offers.API)"] for address (id=[1],action=[GetMyTransaction],controller=[User])
2025-04-02 16:21:21.177 +04:00 DBG Successfully processed template api/User/transactions/{id} for offers.API.Controllers.UserController.GetMyTransaction (offers.API) resulting in /api/User/transactions/1 and 
2025-04-02 16:21:21.180 +04:00 DBG Link generation succeeded for endpoints ["offers.API.Controllers.UserController.GetMyTransaction (offers.API)"] with result /api/User/transactions/1
2025-04-02 16:21:21.198 +04:00 INF Executed action offers.API.Controllers.UserController.CreateTransaction (offers.API) in 61598.6514ms
2025-04-02 16:21:21.198 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:21:21.198 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:21:21.198 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:21:21.198 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:21:21.198 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/User/transaction - 201 null application/json; charset=utf-8 61631.7086ms
2025-04-02 16:21:37.223 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 16:21:37.227 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 16:21:37.227 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 16:21:37.230 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:21:37.231 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:21:37.233 +04:00 DBG Successfully validated the token.
2025-04-02 16:21:37.233 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:21:37.238 +04:00 DBG Authorization was successful.
2025-04-02 16:21:37.238 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:21:37.243 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:21:37.243 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:21:37.243 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:21:37.243 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:21:37.243 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:21:37.243 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:21:37.243 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:21:42.770 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:21:54.823 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:21:54.823 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:21:54.823 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:21:54.823 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:21:54.823 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:21:57.158 +04:00 DBG Creating DbConnection.
2025-04-02 16:21:57.159 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:21:57.159 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:21:57.159 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:21:57.159 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:21:57.159 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:21:57.159 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:21:57.160 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:21:57.232 +04:00 INF Executed DbCommand (73ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:21:57.233 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:21:57.233 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:21:57.234 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:21:57.234 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:21:57.234 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 16:21:57.234 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:21:57.235 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:21:59.043 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:21:59.043 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:21:59.044 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:21:59.044 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:21:59.044 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:21:59.044 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 16:21:59.130 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 21886.6632ms
2025-04-02 16:21:59.130 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:21:59.131 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:21:59.131 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:21:59.131 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:21:59.131 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 21908.0985ms
2025-04-02 16:22:16.452 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - null null
2025-04-02 16:22:16.452 +04:00 DBG 1 candidate(s) found for the request path '/api/User/offers'
2025-04-02 16:22:16.452 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)' with route pattern 'api/User/offers' is valid for the request path '/api/User/offers'
2025-04-02 16:22:16.452 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 16:22:16.453 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:22:16.453 +04:00 DBG Successfully validated the token.
2025-04-02 16:22:16.454 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:22:16.454 +04:00 DBG Authorization was successful.
2025-04-02 16:22:16.454 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 16:22:16.469 +04:00 INF Route matched with {action = "GetOffersByCategories", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOffersByCategories(System.Collections.Generic.List`1[System.Int32], System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:22:16.469 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:22:16.469 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:22:16.469 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:22:16.469 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:22:16.470 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:22:16.470 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:22:19.242 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:22:25.747 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:22:25.755 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 16:22:25.759 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' using the name 'categoryIds' in request data ...
2025-04-02 16:22:25.767 +04:00 DBG Attempting to bind model of type 'System.Int32' using the name 'categoryIds' in request data ...
2025-04-02 16:22:25.768 +04:00 DBG Done attempting to bind model of type 'System.Int32' using the name 'categoryIds'.
2025-04-02 16:22:25.770 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 16:22:25.770 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 16:22:25.770 +04:00 DBG Attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 16:22:25.772 +04:00 DBG Done attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 16:22:25.772 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:22:25.772 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:22:25.772 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:22:25.773 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:22:27.142 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .Where(ctg => __ids_0.Contains(ctg.Id))'
2025-04-02 16:22:27.208 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c
        WHERE c.Id IN (
            SELECT i.value
            FROM OPENJSON(@__ids_0) WITH (value int '') AS i)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c
        WHERE c.Id IN (
            SELECT i.value
            FROM OPENJSON(@__ids_0) WITH (value int '') AS i), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:22:27.228 +04:00 DBG Creating DbConnection.
2025-04-02 16:22:27.228 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:22:27.228 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:22:27.228 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:22:27.228 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:22:27.229 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:22:27.235 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 16:22:27.235 +04:00 DBG Executing DbCommand [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 16:22:27.281 +04:00 INF Executed DbCommand (46ms) [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 16:22:27.281 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:22:27.282 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:22:27.282 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 16:22:27.282 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:22:27.283 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:22:28.404 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => __categoryIds_0.Contains(off.CategoryId))'
2025-04-02 16:22:28.409 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.CategoryId IN (
            SELECT c.value
            FROM OPENJSON(@__categoryIds_0) WITH (value int '') AS c)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.CategoryId IN (
            SELECT c.value
            FROM OPENJSON(@__categoryIds_0) WITH (value int '') AS c), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:22:28.413 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:22:28.414 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:22:28.414 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:22:28.414 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:22:28.414 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:22:28.414 +04:00 DBG Executing DbCommand [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 16:22:28.441 +04:00 INF Executed DbCommand (27ms) [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 16:22:28.446 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:22:28.448 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:22:28.449 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:22:28.449 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 6ms reading results.
2025-04-02 16:22:28.449 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:22:28.449 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:22:29.499 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:22:29.500 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:22:29.500 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:22:29.500 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:22:29.500 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:22:29.500 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.OfferResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 16:22:29.556 +04:00 INF Executed action offers.API.Controllers.UserController.GetOffersByCategories (offers.API) in 13086.1333ms
2025-04-02 16:22:29.556 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 16:22:29.557 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:22:29.557 +04:00 DBG Connection ID "18374686494167138338" disconnecting.
2025-04-02 16:22:29.557 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:22:29.557 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:22:29.557 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - 200 null application/json; charset=utf-8 13105.0461ms
2025-04-02 16:23:09.385 +04:00 INF Request starting HTTP/2 DELETE https://localhost:44346/api/User/transactions/1 - null null
2025-04-02 16:23:09.385 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transactions/1'
2025-04-02 16:23:09.385 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.RefundTransaction (offers.API)' with route pattern 'api/User/transactions/{id}' is valid for the request path '/api/User/transactions/1'
2025-04-02 16:23:09.385 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.RefundTransaction (offers.API)'
2025-04-02 16:23:09.385 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:23:09.386 +04:00 DBG Successfully validated the token.
2025-04-02 16:23:09.386 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:23:09.387 +04:00 DBG Authorization was successful.
2025-04-02 16:23:09.387 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.RefundTransaction (offers.API)'
2025-04-02 16:23:09.396 +04:00 INF Route matched with {action = "RefundTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefundTransaction(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:23:09.397 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:23:09.397 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:23:09.397 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:23:09.397 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:23:09.398 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:23:09.398 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:23:09.400 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:23:09.401 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:23:09.401 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 16:23:09.402 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 16:23:09.403 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:23:09.403 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:23:09.403 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 16:23:09.404 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 16:23:09.404 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:23:09.404 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:23:09.404 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:23:09.404 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:23:09.405 +04:00 INF attempt to refund a transaction
2025-04-02 16:23:09.412 +04:00 DBG Compiling query expression: 
'DbSet<Transaction>()
    .Include(tran => tran.Offer)
    .Include(tran => tran.User)
    .SingleOrDefault(tran => tran.Id == __id_0)'
2025-04-02 16:23:09.414 +04:00 DBG Including navigation: 'Transaction.Offer'.
2025-04-02 16:23:09.415 +04:00 DBG Including navigation: 'Transaction.User'.
2025-04-02 16:23:09.442 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Transaction>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Transaction>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
                1 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Offer.AccountId (int) Required FK Index, 7], [Property: Offer.ArchiveAt (DateTime) Required, 8], [Property: Offer.CategoryId (int) Required FK Index, 9], [Property: Offer.Count (int) Required, 10], [Property: Offer.CreatedAt (DateTime) Required, 11], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 12], [Property: Offer.IsArchived (bool) Required, 13], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 14], [Property: Offer.Price (decimal) Required, 15] }
                2 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 16], [Property: UserDetail.Balance (decimal) Required, 17], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 18], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 19] }
            SELECT TOP(2) t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId, o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, u.AccountId, u.Balance, u.FirstName, u.LastName
            FROM Transactions AS t
            INNER JOIN Offers AS o ON t.OfferId == o.Id
            INNER JOIN UserDetails AS u ON t.UserId == u.AccountId
            WHERE t.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
                1 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Offer.AccountId (int) Required FK Index, 7], [Property: Offer.ArchiveAt (DateTime) Required, 8], [Property: Offer.CategoryId (int) Required FK Index, 9], [Property: Offer.Count (int) Required, 10], [Property: Offer.CreatedAt (DateTime) Required, 11], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 12], [Property: Offer.IsArchived (bool) Required, 13], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 14], [Property: Offer.Price (decimal) Required, 15] }
                2 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 16], [Property: UserDetail.Balance (decimal) Required, 17], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 18], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 19] }
            SELECT TOP(2) t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId, o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, u.AccountId, u.Balance, u.FirstName, u.LastName
            FROM Transactions AS t
            INNER JOIN Offers AS o ON t.OfferId == o.Id
            INNER JOIN UserDetails AS u ON t.UserId == u.AccountId
            WHERE t.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Transaction entity;
            Offer entity;
            UserDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Transaction instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Transaction);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Transaction.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Transaction)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]: 
                            {
                                return 
                                {
                                    Transaction instance;
                                    instance = new Transaction();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<OfferId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Paid>k__BackingField = dataReader.GetDecimal(4);
                                    instance.<UserId>k__BackingField = dataReader.GetInt32(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Transaction)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Offer instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Offer);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(6) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Offer)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(6);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(7);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(8);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(9);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(10);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(11);
                                    instance.<Description>k__BackingField = dataReader.GetString(12);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<Name>k__BackingField = dataReader.GetString(14);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(15);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                UserDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(UserDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(16) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (UserDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(16);
                                    instance.<Balance>k__BackingField = dataReader.GetDecimal(17);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(18);
                                    instance.<LastName>k__BackingField = dataReader.GetString(19);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Transaction, Transaction, Offer>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Transaction.Offer (Offer) ToPrincipal Offer Inverse: Transactions | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindNavigation("Offer")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Offer.Transactions (List<Transaction>) Collection ToDependent Transaction Inverse: Offer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Transactions")], 
                fixup: (namelessParameter{11}, namelessParameter{12}) => 
                {
                    namelessParameter{11}.<Offer>k__BackingField = namelessParameter{12};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Offer, List<Transaction>, Transaction> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Transactions").GetCollectionAccessor()].Add(
                        entity: namelessParameter{12}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Transaction, Transaction, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Transaction.User (UserDetail) ToPrincipal UserDetail Inverse: Transactions | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindNavigation("User")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Transactions (List<Transaction>) Collection ToDependent Transaction Inverse: User | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Transactions")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<User>k__BackingField = namelessParameter{17};
                    return [LIFTABLE Constant: ClrICollectionAccessor<UserDetail, List<Transaction>, Transaction> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Transactions").GetCollectionAccessor()].Add(
                        entity: namelessParameter{17}, 
                        value: namelessParameter{16}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:23:09.472 +04:00 DBG Creating DbConnection.
2025-04-02 16:23:09.472 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:23:09.472 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:09.472 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:09.473 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:23:09.473 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:23:09.473 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:23:09.473 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[Id] = @__id_0
2025-04-02 16:23:09.518 +04:00 INF Executed DbCommand (44ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[Id] = @__id_0
2025-04-02 16:23:09.523 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:23:09.525 +04:00 DBG The navigation 'Transaction.Offer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:23:09.525 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:23:09.528 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:23:09.529 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:23:09.530 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:09.530 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 12ms reading results.
2025-04-02 16:23:09.530 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:09.530 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:23:09.543 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:09.544 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:09.544 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:23:09.545 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:23:09.553 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:23:09.553 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:23:09.553 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:23:09.553 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:23:09.560 +04:00 INF Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:23:09.560 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:23:09.560 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:23:09.560 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:09.561 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:23:09.605 +04:00 DBG Rolling back transaction.
2025-04-02 16:23:09.609 +04:00 DBG Rolled back transaction.
2025-04-02 16:23:09.609 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:09.609 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:23:09.609 +04:00 DBG Disposing transaction.
2025-04-02 16:23:09.841 +04:00 INF Executed action offers.API.Controllers.UserController.RefundTransaction (offers.API) in 443.6829ms
2025-04-02 16:23:09.842 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.RefundTransaction (offers.API)'
2025-04-02 16:23:09.845 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Transaction.TransactionCouldNotBeRefundedException: transaction could not be refunded due to an unknwon issue
   at offers.Application.Services.Transactions.TransactionService.RefundAsync(Int32 id, Int32 accountId, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 155
   at offers.API.Controllers.UserController.RefundTransaction(Int32 id, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 93
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 16:23:10.095 +04:00 ERR Handled exception: transaction could not be refunded due to an unknwon issueoffers.Application.Exceptions.Transaction.TransactionCouldNotBeRefundedException: transaction could not be refunded due to an unknwon issue
   at offers.Application.Services.Transactions.TransactionService.RefundAsync(Int32 id, Int32 accountId, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 155
   at offers.API.Controllers.UserController.RefundTransaction(Int32 id, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 93
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 16:23:10.099 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:23:10.099 +04:00 DBG Connection ID "18302628887244308510" disconnecting.
2025-04-02 16:23:10.099 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:10.100 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:23:10.100 +04:00 INF Request finished HTTP/2 DELETE https://localhost:44346/api/User/transactions/1 - 500 null application/json 715.0694ms
2025-04-02 16:23:36.418 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:23:36.423 +04:00 DBG Creating DbConnection.
2025-04-02 16:23:36.426 +04:00 DBG Created DbConnection. (2ms).
2025-04-02 16:23:36.426 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:36.426 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:36.426 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:23:36.426 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:23:36.426 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:23:36.426 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:23:36.429 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:23:36.430 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:23:36.430 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:36.430 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:23:36.430 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:36.430 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:23:36.430 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:23:36.431 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:23:36.431 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:28:36.435 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:28:36.436 +04:00 DBG Creating DbConnection.
2025-04-02 16:28:36.436 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:28:36.436 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:28:36.482 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:28:36.483 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:28:36.483 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:28:36.483 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:28:36.483 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:28:36.495 +04:00 INF Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:28:36.495 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:28:36.495 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:28:36.496 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:28:36.496 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:28:36.496 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:28:36.496 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:28:36.496 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:28:36.496 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:31:58.150 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 16:31:58.333 +04:00 INF starting web host
2025-04-02 16:31:58.536 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 16:31:59.619 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:31:59.620 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:31:59.781 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:32:00.100 +04:00 DBG Creating DbConnection.
2025-04-02 16:32:00.174 +04:00 DBG Created DbConnection. (71ms).
2025-04-02 16:32:00.177 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:00.192 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:00.669 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:00.679 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:32:00.692 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (6ms).
2025-04-02 16:32:00.695 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (16ms).
2025-04-02 16:32:00.706 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:32:00.769 +04:00 INF Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:32:00.773 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:00.786 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (7ms).
2025-04-02 16:32:00.786 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:00.788 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:00.791 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 16:32:00.795 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:32:00.795 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:32:00.795 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:32:00.796 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 16:32:00.920 +04:00 INF Executed DbCommand (123ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 16:32:01.052 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:32:01.065 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:32:01.067 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:32:01.067 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:32:01.069 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 16:32:01.069 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 16:32:01.080 +04:00 INF Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 16:32:01.082 +04:00 DBG Committing transaction.
2025-04-02 16:32:01.117 +04:00 DBG Committed transaction.
2025-04-02 16:32:01.120 +04:00 DBG Disposing transaction.
2025-04-02 16:32:01.123 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:32:01.145 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:32:01.147 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:32:01.147 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:32:01.147 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:32:01.147 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:32:01.149 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:32:01.149 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:32:01.149 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:32:01.149 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:32:01.149 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 16:32:01.151 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 16:32:01.153 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:32:01.153 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:32:01.153 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:32:01.154 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 16:32:01.170 +04:00 INF Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 16:32:01.175 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:01.177 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 16:32:01.186 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 16:32:01.187 +04:00 DBG Committing transaction.
2025-04-02 16:32:01.187 +04:00 DBG Committed transaction.
2025-04-02 16:32:01.188 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:32:01.188 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:32:01.188 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:32:01.188 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 16:32:01.196 +04:00 INF Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 16:32:01.196 +04:00 DBG Disposing transaction.
2025-04-02 16:32:01.196 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:01.197 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:32:01.310 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 16:32:01.878 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 16:32:01.973 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:01.973 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:01.973 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:32:01.973 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:32:01.974 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:32:01.974 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 16:32:01.980 +04:00 INF Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 16:32:01.983 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:01.984 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 16:32:01.984 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:01.984 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:32:01.986 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:32:01.990 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:01.993 +04:00 DBG Disposed connection to database '' on server '' (2ms).
2025-04-02 16:32:02.001 +04:00 DBG Hosting starting
2025-04-02 16:32:02.070 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 16:32:02.101 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 16:32:02.116 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 16:32:02.134 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 16:32:02.145 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 16:32:02.145 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 16:32:02.148 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 16:32:02.149 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 16:32:02.151 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 16:32:02.154 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 16:32:02.156 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 16:32:02.234 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:32:02.253 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.UtcNow)'
2025-04-02 16:32:02.365 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:32:02.386 +04:00 DBG Creating DbConnection.
2025-04-02 16:32:02.387 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:32:02.390 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:02.395 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:02.396 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:32:02.396 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:32:02.396 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:32:02.397 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:32:02.432 +04:00 INF Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:32:02.553 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:32:02.583 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 16:32:02.584 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 16:32:02.584 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 16:32:02.584 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 16:32:02.715 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:02.716 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 283ms reading results.
2025-04-02 16:32:02.719 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:02.719 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:32:02.720 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:32:02.721 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:32:02.721 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:32:02.834 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 16:32:02.982 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 16:32:02.982 +04:00 INF Hosting environment: Development
2025-04-02 16:32:02.982 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 16:32:02.982 +04:00 DBG Hosting started
2025-04-02 16:32:03.182 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 16:32:03.224 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 16:32:03.225 +04:00 DBG Request did not match any endpoints
2025-04-02 16:32:03.429 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 16:32:03.435 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 16:32:03.536 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 16:32:03.537 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 16:32:03.759 +04:00 DBG Connection ID "18158513703463419951" disconnecting.
2025-04-02 16:32:03.760 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 887.6762ms
2025-04-02 16:32:03.764 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 16:32:03.765 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 16:32:03.771 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 5.7821ms
2025-04-02 16:32:03.883 +04:00 DBG Connection ID "18158513699168452631" disconnecting.
2025-04-02 16:32:03.888 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 122.5367ms
2025-04-02 16:32:03.985 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 16:32:03.985 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 16:32:03.986 +04:00 DBG Request did not match any endpoints
2025-04-02 16:32:04.047 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 61.6896ms
2025-04-02 16:32:34.866 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 16:32:34.905 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 16:32:34.911 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 16:32:34.912 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:32:34.917 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:32:35.060 +04:00 INF Failed to validate the token.Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '4/2/2025 12:20:09 PM', Current time (UTC): '4/2/2025 12:32:35 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)

2025-04-02 16:32:35.067 +04:00 INF Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '4/2/2025 12:20:09 PM', Current time (UTC): '4/2/2025 12:32:35 PM'.
2025-04-02 16:32:35.074 +04:00 DBG Policy authentication schemes  did not succeed
2025-04-02 16:32:35.078 +04:00 INF Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (User)
2025-04-02 16:32:35.084 +04:00 INF AuthenticationScheme: Bearer was challenged.
2025-04-02 16:32:35.087 +04:00 DBG Connection ID "18158513699168452636" disconnecting.
2025-04-02 16:32:35.087 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/User/transaction - 401 null null 220.7389ms
2025-04-02 16:33:29.151 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 66
2025-04-02 16:33:29.162 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 16:33:29.162 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 16:33:29.163 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:33:29.166 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:33:29.175 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 16:33:29.176 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:33:29.206 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 16:33:29.208 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:33:29.209 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:33:29.209 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:33:29.210 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:33:29.210 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:33:29.212 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 16:33:29.307 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:33:29.309 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 16:33:29.319 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 16:33:29.323 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 16:33:29.328 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:33:29.370 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 16:33:29.371 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:33:29.371 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:33:29.372 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 16:33:29.387 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:33:29.389 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:33:29.390 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:33:29.390 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:33:29.391 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:33:29.395 +04:00 INF Login attempt for kirvalidzedachi@gmail.com
2025-04-02 16:33:29.411 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .SingleOrDefault(acc => acc.Email == __Email_0)'
2025-04-02 16:33:29.438 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 16:33:29.440 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 16:33:29.547 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:33:29.573 +04:00 DBG Creating DbConnection.
2025-04-02 16:33:29.573 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:33:29.573 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:33:29.573 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:33:29.573 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:33:29.573 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:33:29.577 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 16:33:29.582 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 16:33:29.650 +04:00 INF Executed DbCommand (46ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 16:33:29.671 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:33:29.725 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:33:29.727 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:33:29.742 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:33:29.742 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 91ms reading results.
2025-04-02 16:33:29.743 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:33:29.743 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:33:29.857 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:33:29.859 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:33:29.860 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:33:29.860 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:33:29.861 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:33:29.862 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 16:33:29.902 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 682.6798ms
2025-04-02 16:33:29.903 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:33:29.910 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:33:29.911 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:33:29.911 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:33:29.915 +04:00 DBG Connection ID "17942340925644603441" disconnecting.
2025-04-02 16:33:29.919 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 768.3363ms
2025-04-02 16:34:20.491 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 16:34:20.500 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 16:34:20.501 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 16:34:20.501 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:34:20.501 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:34:20.508 +04:00 DBG Successfully validated the token.
2025-04-02 16:34:20.512 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:34:20.546 +04:00 DBG Authorization was successful.
2025-04-02 16:34:20.547 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:34:20.553 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:34:20.553 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:34:20.553 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:34:20.553 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:34:20.553 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:34:20.554 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:34:20.554 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:34:20.555 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:34:20.557 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:34:20.567 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:34:20.567 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 16:34:20.568 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:34:20.577 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 16:34:20.577 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:34:20.577 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:34:20.577 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:34:20.579 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:34:20.579 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:34:20.580 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:34:20.580 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:34:20.580 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:34:20.582 +04:00 INF attempt to make a new Transaction on the offer with Id 2
2025-04-02 16:34:25.112 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .FirstOrDefault(acc => acc.Id == __id_0)'
2025-04-02 16:34:25.113 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 16:34:25.115 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 16:34:25.133 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:34:25.156 +04:00 DBG Creating DbConnection.
2025-04-02 16:34:25.156 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:34:25.156 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:25.157 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:25.157 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:34:25.157 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:34:25.157 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:34:25.160 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:34:25.190 +04:00 INF Executed DbCommand (33ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:34:25.193 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:25.195 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:25.195 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:25.196 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:25.196 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 5ms reading results.
2025-04-02 16:34:25.196 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:25.197 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:34:26.653 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Include(off => off.Category)
    .SingleOrDefault(off => off.Id == __id_0)'
2025-04-02 16:34:26.655 +04:00 DBG Including navigation: 'Offer.Category'.
2025-04-02 16:34:26.669 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Offer>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Offer>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Offer entity;
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Offer instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Offer);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Offer)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<Description>k__BackingField = dataReader.GetString(6);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<Name>k__BackingField = dataReader.GetString(8);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Category instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Category);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(10) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Category)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Offer, Offer, Category>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Offer.Category (Category) ToPrincipal Category Inverse: Offers | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Category")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Category.Offers (List<Offer>) Collection ToDependent Offer Inverse: Category | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Category>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Category, List<Offer>, Offer> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:34:26.683 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:26.684 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:26.684 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:34:26.684 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:34:26.684 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:34:26.684 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:34:26.718 +04:00 INF Executed DbCommand (34ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:34:26.719 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:26.723 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:26.729 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:26.734 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:26.735 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 16ms reading results.
2025-04-02 16:34:26.735 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:26.735 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:34:30.559 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:30.559 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:30.560 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:34:30.561 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:34:32.882 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:34:32.882 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:34:32.882 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:34:32.882 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:34:32.920 +04:00 INF Executed DbCommand (37ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:34:32.920 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:32.921 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:34:37.300 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:34:37.306 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:34:37.333 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:34:37.342 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:37.365 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:34:37.457 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:34:37.469 +04:00 DBG Created transaction savepoint.
2025-04-02 16:34:37.498 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:34:37.499 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:34:37.500 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 16:34:37.500 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:34:37.504 +04:00 INF Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:34:37.512 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:37.513 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 7ms reading results.
2025-04-02 16:34:37.521 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:37.524 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:34:40.756 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:34:40.756 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:34:40.758 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 16:34:40.758 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:34:40.803 +04:00 INF Executed DbCommand (45ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:34:40.803 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:40.804 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:34:44.612 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:34:44.613 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:34:44.613 +04:00 DBG The unchanged property 'Offer.Count' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:34:44.613 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:44.613 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:34:44.616 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:34:44.618 +04:00 DBG Created transaction savepoint.
2025-04-02 16:34:44.620 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:34:44.620 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:34:44.620 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:34:44.620 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:34:44.655 +04:00 INF Executed DbCommand (35ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:34:44.656 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:44.656 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:34:44.660 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:44.663 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:34:46.944 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Transaction.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:46.969 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:48.636 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:34:48.637 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:34:48.650 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:34:48.678 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:34:48.679 +04:00 DBG Created transaction savepoint.
2025-04-02 16:34:48.679 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:34:48.679 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:34:48.728 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (48ms).
2025-04-02 16:34:48.728 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:34:48.750 +04:00 INF Executed DbCommand (22ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:34:48.762 +04:00 DBG The foreign key property 'Transaction.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:34:48.768 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:48.769 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 17ms reading results.
2025-04-02 16:34:48.773 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:34:48.773 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:34:49.034 +04:00 DBG Committing transaction.
2025-04-02 16:34:49.035 +04:00 DBG Committed transaction.
2025-04-02 16:34:49.037 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:49.037 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:34:49.265 +04:00 DBG Disposing transaction.
2025-04-02 16:34:51.660 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:34:51.660 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:34:51.660 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:34:51.660 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:34:51.661 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:34:51.661 +04:00 INF Executing CreatedAtActionResult, writing value of type 'offers.Application.Models.TransactionResponseModel'.
2025-04-02 16:34:51.775 +04:00 DBG Found the endpoints ["offers.API.Controllers.UserController.GetMyTransaction (offers.API)"] for address (id=[2],action=[GetMyTransaction],controller=[User])
2025-04-02 16:34:51.781 +04:00 DBG Successfully processed template api/User/transactions/{id} for offers.API.Controllers.UserController.GetMyTransaction (offers.API) resulting in /api/User/transactions/2 and 
2025-04-02 16:34:51.783 +04:00 DBG Link generation succeeded for endpoints ["offers.API.Controllers.UserController.GetMyTransaction (offers.API)"] with result /api/User/transactions/2
2025-04-02 16:34:51.793 +04:00 INF Executed action offers.API.Controllers.UserController.CreateTransaction (offers.API) in 31239.5097ms
2025-04-02 16:34:51.793 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:34:51.794 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:34:51.794 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:34:51.794 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:34:51.794 +04:00 DBG Connection ID "18158513703463419955" disconnecting.
2025-04-02 16:34:51.794 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/User/transaction - 201 null application/json; charset=utf-8 31304.6088ms
2025-04-02 16:35:14.288 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 16:35:14.288 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 16:35:14.288 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 16:35:14.289 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:35:14.289 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:35:14.289 +04:00 DBG Successfully validated the token.
2025-04-02 16:35:14.290 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:35:14.293 +04:00 DBG Authorization was successful.
2025-04-02 16:35:14.293 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:35:14.301 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:35:14.301 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:35:14.301 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:35:14.301 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:35:14.301 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:35:14.301 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:35:14.301 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:35:14.305 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:35:14.310 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:35:14.310 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:35:14.310 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:35:14.310 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:35:14.310 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:35:14.313 +04:00 DBG Creating DbConnection.
2025-04-02 16:35:14.313 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:35:14.313 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:14.313 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:14.313 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:35:14.313 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:14.313 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:14.314 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:35:14.319 +04:00 INF Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:35:14.319 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:14.319 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:14.320 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:14.320 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:14.320 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 16:35:14.320 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:14.321 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:35:14.331 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:35:14.331 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:35:14.331 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:35:14.331 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:35:14.331 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:35:14.331 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 16:35:14.334 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 32.5353ms
2025-04-02 16:35:14.334 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:35:14.335 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:35:14.335 +04:00 DBG Connection ID "18374686494167138340" disconnecting.
2025-04-02 16:35:14.335 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:14.335 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:35:14.335 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 46.954ms
2025-04-02 16:35:26.983 +04:00 INF Request starting HTTP/2 DELETE https://localhost:44346/api/User/transactions/2 - null null
2025-04-02 16:35:26.983 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transactions/2'
2025-04-02 16:35:26.984 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.RefundTransaction (offers.API)' with route pattern 'api/User/transactions/{id}' is valid for the request path '/api/User/transactions/2'
2025-04-02 16:35:26.984 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.RefundTransaction (offers.API)'
2025-04-02 16:35:26.984 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:35:26.987 +04:00 DBG Successfully validated the token.
2025-04-02 16:35:26.987 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:35:26.988 +04:00 DBG Authorization was successful.
2025-04-02 16:35:26.988 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.RefundTransaction (offers.API)'
2025-04-02 16:35:26.997 +04:00 INF Route matched with {action = "RefundTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefundTransaction(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:35:26.997 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:35:26.998 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:35:26.998 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:35:26.999 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:35:26.999 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:35:26.999 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:35:27.007 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:35:27.011 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:35:27.012 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 16:35:27.012 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 16:35:27.013 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:35:27.014 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:35:27.014 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 16:35:27.014 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 16:35:27.014 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:35:27.014 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:35:27.014 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:35:27.014 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:35:27.015 +04:00 INF attempt to refund a transaction
2025-04-02 16:35:30.023 +04:00 DBG Compiling query expression: 
'DbSet<Transaction>()
    .Include(tran => tran.Offer)
    .Include(tran => tran.User)
    .SingleOrDefault(tran => tran.Id == __id_0)'
2025-04-02 16:35:30.024 +04:00 DBG Including navigation: 'Transaction.Offer'.
2025-04-02 16:35:30.026 +04:00 DBG Including navigation: 'Transaction.User'.
2025-04-02 16:35:30.067 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Transaction>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Transaction>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
                1 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Offer.AccountId (int) Required FK Index, 7], [Property: Offer.ArchiveAt (DateTime) Required, 8], [Property: Offer.CategoryId (int) Required FK Index, 9], [Property: Offer.Count (int) Required, 10], [Property: Offer.CreatedAt (DateTime) Required, 11], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 12], [Property: Offer.IsArchived (bool) Required, 13], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 14], [Property: Offer.Price (decimal) Required, 15] }
                2 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 16], [Property: UserDetail.Balance (decimal) Required, 17], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 18], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 19] }
            SELECT TOP(2) t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId, o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, u.AccountId, u.Balance, u.FirstName, u.LastName
            FROM Transactions AS t
            INNER JOIN Offers AS o ON t.OfferId == o.Id
            INNER JOIN UserDetails AS u ON t.UserId == u.AccountId
            WHERE t.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
                1 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Offer.AccountId (int) Required FK Index, 7], [Property: Offer.ArchiveAt (DateTime) Required, 8], [Property: Offer.CategoryId (int) Required FK Index, 9], [Property: Offer.Count (int) Required, 10], [Property: Offer.CreatedAt (DateTime) Required, 11], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 12], [Property: Offer.IsArchived (bool) Required, 13], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 14], [Property: Offer.Price (decimal) Required, 15] }
                2 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 16], [Property: UserDetail.Balance (decimal) Required, 17], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 18], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 19] }
            SELECT TOP(2) t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId, o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, u.AccountId, u.Balance, u.FirstName, u.LastName
            FROM Transactions AS t
            INNER JOIN Offers AS o ON t.OfferId == o.Id
            INNER JOIN UserDetails AS u ON t.UserId == u.AccountId
            WHERE t.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Transaction entity;
            Offer entity;
            UserDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Transaction instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Transaction);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Transaction.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Transaction)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]: 
                            {
                                return 
                                {
                                    Transaction instance;
                                    instance = new Transaction();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<OfferId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Paid>k__BackingField = dataReader.GetDecimal(4);
                                    instance.<UserId>k__BackingField = dataReader.GetInt32(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Transaction)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Offer instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Offer);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(6) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Offer)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(6);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(7);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(8);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(9);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(10);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(11);
                                    instance.<Description>k__BackingField = dataReader.GetString(12);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<Name>k__BackingField = dataReader.GetString(14);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(15);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                UserDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(UserDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(16) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (UserDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(16);
                                    instance.<Balance>k__BackingField = dataReader.GetDecimal(17);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(18);
                                    instance.<LastName>k__BackingField = dataReader.GetString(19);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Transaction, Transaction, Offer>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Transaction.Offer (Offer) ToPrincipal Offer Inverse: Transactions | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindNavigation("Offer")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Offer.Transactions (List<Transaction>) Collection ToDependent Transaction Inverse: Offer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Transactions")], 
                fixup: (namelessParameter{11}, namelessParameter{12}) => 
                {
                    namelessParameter{11}.<Offer>k__BackingField = namelessParameter{12};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Offer, List<Transaction>, Transaction> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Transactions").GetCollectionAccessor()].Add(
                        entity: namelessParameter{12}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Transaction, Transaction, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Transaction.User (UserDetail) ToPrincipal UserDetail Inverse: Transactions | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindNavigation("User")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Transactions (List<Transaction>) Collection ToDependent Transaction Inverse: User | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Transactions")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<User>k__BackingField = namelessParameter{17};
                    return [LIFTABLE Constant: ClrICollectionAccessor<UserDetail, List<Transaction>, Transaction> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Transactions").GetCollectionAccessor()].Add(
                        entity: namelessParameter{17}, 
                        value: namelessParameter{16}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:35:30.092 +04:00 DBG Creating DbConnection.
2025-04-02 16:35:30.093 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:35:30.093 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:30.093 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:30.093 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:35:30.093 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:30.093 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:30.093 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[Id] = @__id_0
2025-04-02 16:35:30.189 +04:00 INF Executed DbCommand (96ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[Id] = @__id_0
2025-04-02 16:35:30.191 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:30.192 +04:00 DBG The navigation 'Transaction.Offer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:30.192 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:30.193 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:30.193 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:30.194 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:30.194 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 16:35:30.195 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:30.195 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:35:31.778 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:31.778 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:31.778 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:35:31.779 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:35:34.370 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:35:34.370 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:34.370 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:34.370 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:35:34.413 +04:00 INF Executed DbCommand (42ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:35:34.413 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:34.414 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:34.414 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:34.414 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:35:37.858 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:35:37.858 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:35:37.859 +04:00 DBG The unchanged property 'Offer.Count' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:35:37.859 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:37.859 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:35:37.860 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:35:37.862 +04:00 DBG Created transaction savepoint.
2025-04-02 16:35:37.862 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:35:37.862 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:37.862 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:37.863 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:35:37.896 +04:00 INF Executed DbCommand (33ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:35:37.896 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:37.897 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:35:37.897 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:37.897 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:35:41.365 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:35:41.365 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:41.365 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:41.366 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:35:41.420 +04:00 INF Executed DbCommand (53ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:35:41.421 +04:00 DBG The navigation 'UserDetail.Account' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:41.421 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:41.422 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:41.422 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 16:35:46.291 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:35:46.291 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:35:46.292 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:35:46.292 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:46.292 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:35:46.292 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:35:46.298 +04:00 DBG Created transaction savepoint.
2025-04-02 16:35:46.298 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:35:46.298 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:46.299 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:46.299 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:35:46.332 +04:00 INF Executed DbCommand (34ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:35:46.333 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:46.333 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:35:46.334 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:46.334 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:35:51.244 +04:00 DBG Compiling query expression: 
'DbSet<Transaction>()
    .FirstOrDefault(e => EF.Property<int>(e, "Id") == __p_0)'
2025-04-02 16:35:51.255 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Transaction>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Transaction>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
            SELECT TOP(1) t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId
            FROM Transactions AS t
            WHERE t.Id == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
            SELECT TOP(1) t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId
            FROM Transactions AS t
            WHERE t.Id == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Transaction entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Transaction instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Transaction);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Transaction.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Transaction)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]: 
                            {
                                return 
                                {
                                    Transaction instance;
                                    instance = new Transaction();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<OfferId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Paid>k__BackingField = dataReader.GetDecimal(4);
                                    instance.<UserId>k__BackingField = dataReader.GetInt32(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Transaction)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:35:51.263 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:35:51.263 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:51.264 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:51.264 +04:00 DBG Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[Id] = @__p_0
2025-04-02 16:35:51.272 +04:00 INF Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[Id] = @__p_0
2025-04-02 16:35:51.273 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:51.274 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:51.315 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 42ms reading results.
2025-04-02 16:35:52.404 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:55.415 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:35:55.417 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:35:55.418 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:35:55.422 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:35:55.424 +04:00 DBG Created transaction savepoint.
2025-04-02 16:35:55.424 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:35:55.424 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:55.424 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:35:55.424 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Transactions]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-02 16:35:55.445 +04:00 INF Executed DbCommand (21ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Transactions]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-02 16:35:55.445 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:55.445 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:35:55.448 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:35:55.448 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:35:56.435 +04:00 DBG Committing transaction.
2025-04-02 16:35:56.438 +04:00 DBG Committed transaction.
2025-04-02 16:35:56.438 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:35:56.438 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:35:56.740 +04:00 DBG Disposing transaction.
2025-04-02 16:36:00.092 +04:00 INF Executing StatusCodeResult, setting HTTP status code 204
2025-04-02 16:36:00.092 +04:00 INF Executed action offers.API.Controllers.UserController.RefundTransaction (offers.API) in 33093.6924ms
2025-04-02 16:36:00.093 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.RefundTransaction (offers.API)'
2025-04-02 16:36:00.094 +04:00 DBG Connection ID "18158513703463419957" disconnecting.
2025-04-02 16:36:01.886 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:36:01.886 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:01.886 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:36:02.402 +04:00 INF Request finished HTTP/2 DELETE https://localhost:44346/api/User/transactions/2 - 204 null null 35419.9865ms
2025-04-02 16:36:11.904 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 16:36:11.905 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 16:36:11.905 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 16:36:11.905 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:36:11.905 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:36:11.906 +04:00 DBG Successfully validated the token.
2025-04-02 16:36:11.906 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:36:11.906 +04:00 DBG Authorization was successful.
2025-04-02 16:36:11.906 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:36:11.907 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:36:11.907 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:36:11.907 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:36:11.907 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:36:11.907 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:36:11.907 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:36:11.907 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:36:11.909 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:36:11.909 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:36:11.910 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:36:11.910 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:36:11.910 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:36:11.910 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:36:11.911 +04:00 DBG Creating DbConnection.
2025-04-02 16:36:11.911 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:36:11.911 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:11.911 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:11.911 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:36:11.912 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:36:11.912 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:36:11.912 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:36:11.930 +04:00 INF Executed DbCommand (18ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:36:11.931 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:36:11.932 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:36:11.932 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:36:11.934 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:11.934 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 16:36:11.934 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:11.934 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:36:11.935 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:36:11.935 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:36:11.935 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:36:11.935 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:36:11.935 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:36:11.935 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 16:36:11.936 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 29.0596ms
2025-04-02 16:36:11.936 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:36:11.937 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:36:11.937 +04:00 DBG Connection ID "18158513703463419959" disconnecting.
2025-04-02 16:36:11.937 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:11.937 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:36:11.937 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 32.5406ms
2025-04-02 16:36:27.822 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - null null
2025-04-02 16:36:27.822 +04:00 DBG 1 candidate(s) found for the request path '/api/User/offers'
2025-04-02 16:36:27.822 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)' with route pattern 'api/User/offers' is valid for the request path '/api/User/offers'
2025-04-02 16:36:27.822 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 16:36:27.822 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:36:27.822 +04:00 DBG Successfully validated the token.
2025-04-02 16:36:27.823 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:36:27.823 +04:00 DBG Authorization was successful.
2025-04-02 16:36:27.823 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 16:36:27.832 +04:00 INF Route matched with {action = "GetOffersByCategories", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOffersByCategories(System.Collections.Generic.List`1[System.Int32], System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:36:27.833 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:36:27.833 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:36:27.833 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:36:27.833 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:36:27.833 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:36:27.833 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:36:27.835 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:36:27.835 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:36:27.843 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 16:36:27.845 +04:00 DBG Attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' using the name 'categoryIds' in request data ...
2025-04-02 16:36:27.852 +04:00 DBG Attempting to bind model of type 'System.Int32' using the name 'categoryIds' in request data ...
2025-04-02 16:36:27.852 +04:00 DBG Done attempting to bind model of type 'System.Int32' using the name 'categoryIds'.
2025-04-02 16:36:27.853 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 16:36:27.853 +04:00 DBG Done attempting to bind parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 16:36:27.853 +04:00 DBG Attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]' ...
2025-04-02 16:36:27.855 +04:00 DBG Done attempting to validate the bound parameter 'categoryIds' of type 'System.Collections.Generic.List`1[System.Int32]'.
2025-04-02 16:36:27.855 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:36:27.855 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:36:27.855 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:36:27.855 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:36:27.858 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .Where(ctg => __ids_0.Contains(ctg.Id))'
2025-04-02 16:36:27.908 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c
        WHERE c.Id IN (
            SELECT i.value
            FROM OPENJSON(@__ids_0) WITH (value int '') AS i)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c
        WHERE c.Id IN (
            SELECT i.value
            FROM OPENJSON(@__ids_0) WITH (value int '') AS i), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:36:27.921 +04:00 DBG Creating DbConnection.
2025-04-02 16:36:27.921 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:36:27.921 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:27.921 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:27.921 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:36:27.921 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:36:27.924 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (2ms).
2025-04-02 16:36:27.924 +04:00 DBG Executing DbCommand [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 16:36:27.929 +04:00 INF Executed DbCommand (5ms) [Parameters=[@__ids_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] IN (
    SELECT [i].[value]
    FROM OPENJSON(@__ids_0) WITH ([value] int '$') AS [i]
)
2025-04-02 16:36:27.930 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:36:27.931 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:27.931 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 16:36:27.932 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:27.932 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:36:27.934 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => __categoryIds_0.Contains(off.CategoryId))'
2025-04-02 16:36:27.939 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.CategoryId IN (
            SELECT c.value
            FROM OPENJSON(@__categoryIds_0) WITH (value int '') AS c)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.CategoryId IN (
            SELECT c.value
            FROM OPENJSON(@__categoryIds_0) WITH (value int '') AS c), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:36:27.941 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:27.941 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:27.941 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:36:27.942 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:36:27.942 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:36:27.942 +04:00 DBG Executing DbCommand [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 16:36:27.955 +04:00 INF Executed DbCommand (13ms) [Parameters=[@__categoryIds_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[CategoryId] IN (
    SELECT [c].[value]
    FROM OPENJSON(@__categoryIds_0) WITH ([value] int '$') AS [c]
)
2025-04-02 16:36:27.956 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:36:27.957 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:36:27.957 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:27.957 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 16:36:27.957 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:27.957 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:36:27.988 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:36:27.988 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:36:27.988 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:36:27.988 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:36:27.988 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:36:27.989 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.OfferResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 16:36:27.993 +04:00 INF Executed action offers.API.Controllers.UserController.GetOffersByCategories (offers.API) in 159.677ms
2025-04-02 16:36:27.993 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetOffersByCategories (offers.API)'
2025-04-02 16:36:27.993 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:36:27.993 +04:00 DBG Connection ID "17942340925644603443" disconnecting.
2025-04-02 16:36:27.993 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:27.993 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:36:27.994 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User/offers?categoryIds=1 - 200 null application/json; charset=utf-8 172.0114ms
2025-04-02 16:36:52.018 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User/transactions/2 - null null
2025-04-02 16:36:52.022 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transactions/2'
2025-04-02 16:36:52.022 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)' with route pattern 'api/User/transactions/{id}' is valid for the request path '/api/User/transactions/2'
2025-04-02 16:36:52.024 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)'
2025-04-02 16:36:52.024 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:36:52.025 +04:00 DBG Successfully validated the token.
2025-04-02 16:36:52.025 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:36:52.025 +04:00 DBG Authorization was successful.
2025-04-02 16:36:52.025 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)'
2025-04-02 16:36:52.031 +04:00 INF Route matched with {action = "GetMyTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMyTransaction(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:36:52.031 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:36:52.031 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:36:52.032 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:36:52.032 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:36:52.032 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:36:52.032 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:36:52.033 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:36:52.033 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:36:52.033 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 16:36:52.033 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 16:36:52.033 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:36:52.034 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:36:52.034 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 16:36:52.034 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 16:36:52.034 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:36:52.035 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:36:52.035 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:36:52.035 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:36:52.042 +04:00 DBG Creating DbConnection.
2025-04-02 16:36:52.042 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:36:52.042 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:52.042 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:52.042 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:36:52.042 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:36:52.042 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:36:52.042 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[Id] = @__id_0
2025-04-02 16:36:52.053 +04:00 INF Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[Id] = @__id_0
2025-04-02 16:36:52.053 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:52.053 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:36:52.053 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:52.054 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:36:52.148 +04:00 INF Executed action offers.API.Controllers.UserController.GetMyTransaction (offers.API) in 115.8842ms
2025-04-02 16:36:52.148 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)'
2025-04-02 16:36:52.151 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Transaction.TransactionNotFoundException: Transaction with the id 2 was not found
   at offers.Application.Services.Transactions.TransactionService.GetMyTransactionAsync(Int32 id, Int32 accountId, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 128
   at offers.API.Controllers.UserController.GetMyTransaction(Int32 id, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 85
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 16:36:52.422 +04:00 WRN Handled exception: Transaction with the id 2 was not foundoffers.Application.Exceptions.Transaction.TransactionNotFoundException: Transaction with the id 2 was not found
   at offers.Application.Services.Transactions.TransactionService.GetMyTransactionAsync(Int32 id, Int32 accountId, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Transactions\TransactionService.cs:line 128
   at offers.API.Controllers.UserController.GetMyTransaction(Int32 id, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\UserController.cs:line 85
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 16:36:52.429 +04:00 DBG Connection ID "18230571293206380597" disconnecting.
2025-04-02 16:36:52.427 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:36:52.429 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:36:52.429 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:36:52.429 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User/transactions/2 - 404 null application/json 411.7001ms
2025-04-02 16:37:02.269 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User/transactions/1 - null null
2025-04-02 16:37:02.269 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transactions/1'
2025-04-02 16:37:02.269 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)' with route pattern 'api/User/transactions/{id}' is valid for the request path '/api/User/transactions/1'
2025-04-02 16:37:02.269 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)'
2025-04-02 16:37:02.269 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:37:02.270 +04:00 DBG Successfully validated the token.
2025-04-02 16:37:02.270 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:37:02.271 +04:00 DBG Authorization was successful.
2025-04-02 16:37:02.271 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)'
2025-04-02 16:37:02.271 +04:00 INF Route matched with {action = "GetMyTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMyTransaction(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:37:02.271 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:37:02.271 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:37:02.272 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:37:02.272 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:37:02.272 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:37:02.272 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:37:02.273 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:37:02.274 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:37:02.275 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 16:37:02.275 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 16:37:02.275 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:37:02.275 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:37:02.275 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 16:37:02.275 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 16:37:02.275 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:37:02.275 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:37:02.275 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:37:02.276 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:37:02.278 +04:00 DBG Creating DbConnection.
2025-04-02 16:37:02.279 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:37:02.279 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:37:02.279 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:37:02.279 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:37:02.280 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:37:02.280 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:37:02.280 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[Id] = @__id_0
2025-04-02 16:37:02.291 +04:00 INF Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[Id] = @__id_0
2025-04-02 16:37:02.292 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:37:02.292 +04:00 DBG The navigation 'Transaction.Offer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:37:02.293 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:37:02.293 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:37:02.293 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:37:02.293 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:37:02.294 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 16:37:02.294 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:37:02.295 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:37:02.296 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:37:02.297 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:37:02.297 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:37:02.297 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:37:02.297 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:37:02.297 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.TransactionResponseModel'.
2025-04-02 16:37:02.298 +04:00 INF Executed action offers.API.Controllers.UserController.GetMyTransaction (offers.API) in 26.6782ms
2025-04-02 16:37:02.299 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)'
2025-04-02 16:37:02.299 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:37:02.299 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:37:02.299 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:37:02.299 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User/transactions/1 - 200 null application/json; charset=utf-8 30.6767ms
2025-04-02 16:37:02.734 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:37:02.735 +04:00 DBG Creating DbConnection.
2025-04-02 16:37:02.735 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:37:02.735 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:37:02.735 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:37:02.735 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:37:02.735 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:37:02.735 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:37:02.736 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:37:02.738 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:37:02.739 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:37:02.739 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:37:02.739 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:37:02.739 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:37:02.739 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:37:02.740 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:37:02.740 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:37:02.740 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:38:07.078 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 72
2025-04-02 16:38:07.079 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 16:38:07.081 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 16:38:07.081 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:38:07.081 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:38:07.081 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 16:38:07.082 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:38:07.082 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 16:38:07.082 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:38:07.082 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:38:07.083 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:38:07.083 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:38:07.083 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:38:07.083 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 16:38:07.085 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:38:07.085 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 16:38:07.085 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 16:38:07.086 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 16:38:07.086 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:38:07.090 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 16:38:07.090 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:38:07.090 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:38:07.090 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 16:38:07.092 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:38:07.092 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:38:07.092 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:38:07.092 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:38:07.092 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:38:07.093 +04:00 INF Login attempt for mishokirvalidze11@gmail.com
2025-04-02 16:38:07.096 +04:00 DBG Creating DbConnection.
2025-04-02 16:38:07.097 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:38:07.097 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:38:07.097 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:38:07.098 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:38:07.098 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:38:07.098 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:38:07.098 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 16:38:07.125 +04:00 INF Executed DbCommand (27ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 16:38:07.126 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:38:07.128 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:38:07.129 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:38:07.132 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:38:07.132 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 6ms reading results.
2025-04-02 16:38:07.132 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:38:07.132 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:38:07.133 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:38:07.133 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:38:07.133 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:38:07.133 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:38:07.133 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:38:07.133 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 16:38:07.134 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 50.7537ms
2025-04-02 16:38:07.134 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:38:07.135 +04:00 DBG Connection ID "18158513703463419964" disconnecting.
2025-04-02 16:38:07.135 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:38:07.135 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:38:07.135 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:38:07.135 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 57.9317ms
2025-04-02 16:39:12.535 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Company/offers - application/json 167
2025-04-02 16:39:12.535 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers'
2025-04-02 16:39:12.535 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)' with route pattern 'api/Company/offers' is valid for the request path '/api/Company/offers'
2025-04-02 16:39:12.535 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 16:39:12.535 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:39:12.536 +04:00 DBG Successfully validated the token.
2025-04-02 16:39:12.536 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:39:12.536 +04:00 INF Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Company)
2025-04-02 16:39:12.541 +04:00 INF AuthenticationScheme: Bearer was forbidden.
2025-04-02 16:39:12.542 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Company/offers - 403 null null 6.8974ms
2025-04-02 16:40:02.359 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Company/offers - application/json 167
2025-04-02 16:40:02.359 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers'
2025-04-02 16:40:02.360 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)' with route pattern 'api/Company/offers' is valid for the request path '/api/Company/offers'
2025-04-02 16:40:02.360 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 16:40:02.360 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:40:02.360 +04:00 DBG Successfully validated the token.
2025-04-02 16:40:02.360 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:40:02.360 +04:00 DBG Authorization was successful.
2025-04-02 16:40:02.360 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 16:40:02.367 +04:00 INF Route matched with {action = "Post", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Post(offers.API.Models.OfferDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 16:40:02.367 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:40:02.367 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:40:02.367 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:40:02.367 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:40:02.367 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:40:02.367 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 16:40:02.369 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:40:02.371 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 16:40:02.371 +04:00 DBG Attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' ...
2025-04-02 16:40:02.371 +04:00 DBG Attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' using the name '' in request data ...
2025-04-02 16:40:02.371 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:40:02.391 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.OfferDTO'
2025-04-02 16:40:02.391 +04:00 DBG Done attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 16:40:02.391 +04:00 DBG Done attempting to bind parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 16:40:02.391 +04:00 DBG Attempting to validate the bound parameter 'offerDTO' of type 'offers.API.Models.OfferDTO' ...
2025-04-02 16:40:02.395 +04:00 DBG Done attempting to validate the bound parameter 'offerDTO' of type 'offers.API.Models.OfferDTO'.
2025-04-02 16:40:02.395 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:40:02.395 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:40:02.395 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:40:02.395 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:40:02.397 +04:00 INF attempt to add a new Offer offer
2025-04-02 16:40:02.403 +04:00 DBG Creating DbConnection.
2025-04-02 16:40:02.403 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:40:02.403 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.403 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.403 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:02.403 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:02.403 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:02.404 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:40:02.422 +04:00 INF Executed DbCommand (18ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:40:02.423 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:02.423 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:02.423 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:02.424 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.424 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 16:40:02.424 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.424 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:40:02.427 +04:00 DBG Compiling query expression: 
'DbSet<Category>()
    .SingleOrDefault(cat => cat.Id == __id_0)'
2025-04-02 16:40:02.433 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
            SELECT TOP(2) c.Id, c.Description, c.Name
            FROM Categories AS c
            WHERE c.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                    instance.<Name>k__BackingField = dataReader.GetString(2);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:40:02.435 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.435 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.435 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:02.435 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:02.435 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:02.435 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 16:40:02.440 +04:00 INF Executed DbCommand (5ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
WHERE [c].[Id] = @__id_0
2025-04-02 16:40:02.441 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:02.441 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.441 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:40:02.442 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.442 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:40:02.445 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.445 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.445 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:02.445 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:02.445 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:02.446 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:40:02.448 +04:00 INF Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:40:02.453 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.453 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 16:40:02.453 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.453 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:40:02.457 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Offer.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:02.459 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:02.460 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:40:02.460 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:40:02.463 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:40:02.465 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.465 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.465 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:02.466 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:02.466 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:02.466 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime2), @p5='?' (Size = 1000) (DbType = AnsiString), @p6='?' (DbType = Boolean), @p7='?' (Size = 255) (DbType = AnsiString), @p8='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Offers] ([AccountId], [ArchiveAt], [CategoryId], [Count], [CreatedAt], [Description], [IsArchived], [Name], [Price])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-04-02 16:40:02.470 +04:00 INF Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime2), @p5='?' (Size = 1000) (DbType = AnsiString), @p6='?' (DbType = Boolean), @p7='?' (Size = 255) (DbType = AnsiString), @p8='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Offers] ([AccountId], [ArchiveAt], [CategoryId], [Count], [CreatedAt], [Description], [IsArchived], [Name], [Price])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8);
2025-04-02 16:40:02.472 +04:00 DBG The foreign key property 'Offer.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:40:02.473 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.473 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 16:40:02.473 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.474 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:40:02.474 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:02.474 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:40:02.479 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:40:02.479 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:40:02.479 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:40:02.479 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:40:02.479 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:40:02.479 +04:00 INF Executing CreatedAtActionResult, writing value of type 'offers.Application.Models.OfferResponseModel'.
2025-04-02 16:40:02.480 +04:00 DBG Found the endpoints ["offers.API.Controllers.CompanyController.GetMyOffer (offers.API)"] for address (id=[3],action=[GetMyOffer],controller=[Company])
2025-04-02 16:40:02.480 +04:00 DBG Successfully processed template api/Company/offers/{id} for offers.API.Controllers.CompanyController.GetMyOffer (offers.API) resulting in /api/Company/offers/3 and 
2025-04-02 16:40:02.480 +04:00 DBG Link generation succeeded for endpoints ["offers.API.Controllers.CompanyController.GetMyOffer (offers.API)"] with result /api/Company/offers/3
2025-04-02 16:40:02.481 +04:00 INF Executed action offers.API.Controllers.CompanyController.Post (offers.API) in 113.8275ms
2025-04-02 16:40:02.481 +04:00 INF Executed endpoint 'offers.API.Controllers.CompanyController.Post (offers.API)'
2025-04-02 16:40:02.481 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:40:02.481 +04:00 DBG Connection ID "18158513712053354533" disconnecting.
2025-04-02 16:40:02.482 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:02.482 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:40:02.482 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Company/offers - 201 null application/json; charset=utf-8 123.7978ms
2025-04-02 16:40:49.157 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 16:40:49.157 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 16:40:49.157 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 16:40:49.157 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:40:49.158 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:40:49.158 +04:00 DBG Successfully validated the token.
2025-04-02 16:40:49.158 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:40:49.158 +04:00 DBG Authorization was successful.
2025-04-02 16:40:49.158 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:40:49.158 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:40:49.158 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:40:49.158 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:40:49.158 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:40:49.158 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:40:49.158 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:40:49.158 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:40:49.159 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:40:49.159 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:40:49.160 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:40:49.160 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 16:40:49.160 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:40:49.160 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 16:40:49.160 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:40:49.160 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:40:49.160 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:40:49.160 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:40:49.160 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:40:49.160 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:40:49.160 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:40:49.160 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:40:49.161 +04:00 INF attempt to make a new Transaction on the offer with Id 3
2025-04-02 16:40:49.161 +04:00 DBG Creating DbConnection.
2025-04-02 16:40:49.162 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:40:49.162 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.162 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.162 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:49.162 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.162 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.162 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:40:49.198 +04:00 INF Executed DbCommand (36ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:40:49.199 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.199 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.199 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.199 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.199 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:40:49.199 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.199 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:40:49.200 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.200 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.200 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:49.200 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.200 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.200 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:40:49.211 +04:00 INF Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:40:49.212 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.212 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.212 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.212 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.212 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:40:49.212 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.212 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:40:49.220 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.220 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.220 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:40:49.221 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:40:49.222 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:49.222 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.223 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.223 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:40:49.227 +04:00 INF Executed DbCommand (4ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:40:49.228 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.229 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:40:49.258 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:40:49.259 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:40:49.259 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:40:49.259 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.259 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:40:49.260 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:40:49.264 +04:00 DBG Created transaction savepoint.
2025-04-02 16:40:49.264 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:49.264 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.264 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.264 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:40:49.269 +04:00 INF Executed DbCommand (4ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:40:49.269 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.269 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:40:49.270 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.270 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:40:49.270 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:49.270 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.271 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.271 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:40:49.277 +04:00 INF Executed DbCommand (7ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:40:49.278 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.278 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:40:49.279 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:40:49.279 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:40:49.279 +04:00 DBG The unchanged property 'Offer.Count' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:40:49.279 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.279 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:40:49.280 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:40:49.281 +04:00 DBG Created transaction savepoint.
2025-04-02 16:40:49.281 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:49.281 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.281 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.282 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:40:49.285 +04:00 INF Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:40:49.285 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.285 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:40:49.286 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.286 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:40:49.288 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Transaction.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.288 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.288 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:40:49.289 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:40:49.289 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:40:49.289 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:40:49.292 +04:00 DBG Created transaction savepoint.
2025-04-02 16:40:49.292 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:49.292 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.292 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:49.292 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:40:49.300 +04:00 INF Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:40:49.300 +04:00 DBG The foreign key property 'Transaction.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:40:49.300 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.301 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:40:49.301 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:49.302 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:40:49.302 +04:00 DBG Committing transaction.
2025-04-02 16:40:49.303 +04:00 DBG Committed transaction.
2025-04-02 16:40:49.303 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.303 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:40:49.303 +04:00 DBG Disposing transaction.
2025-04-02 16:40:49.303 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:40:49.303 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:40:49.303 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:40:49.303 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:40:49.303 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:40:49.303 +04:00 INF Executing CreatedAtActionResult, writing value of type 'offers.Application.Models.TransactionResponseModel'.
2025-04-02 16:40:49.303 +04:00 DBG Found the endpoints ["offers.API.Controllers.UserController.GetMyTransaction (offers.API)"] for address (id=[3],action=[GetMyTransaction],controller=[User])
2025-04-02 16:40:49.304 +04:00 DBG Successfully processed template api/User/transactions/{id} for offers.API.Controllers.UserController.GetMyTransaction (offers.API) resulting in /api/User/transactions/3 and 
2025-04-02 16:40:49.304 +04:00 DBG Link generation succeeded for endpoints ["offers.API.Controllers.UserController.GetMyTransaction (offers.API)"] with result /api/User/transactions/3
2025-04-02 16:40:49.305 +04:00 INF Executed action offers.API.Controllers.UserController.CreateTransaction (offers.API) in 146.079ms
2025-04-02 16:40:49.305 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:40:49.306 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:40:49.306 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:49.306 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:40:49.306 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/User/transaction - 201 null application/json; charset=utf-8 149.1276ms
2025-04-02 16:40:57.778 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 16:40:57.778 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 16:40:57.778 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 16:40:57.778 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:40:57.779 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:40:57.779 +04:00 DBG Successfully validated the token.
2025-04-02 16:40:57.779 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:40:57.780 +04:00 DBG Authorization was successful.
2025-04-02 16:40:57.780 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:40:57.780 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:40:57.796 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:40:57.796 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:40:57.796 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:40:57.796 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:40:57.796 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:40:57.796 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:40:57.797 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:40:57.797 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:40:57.797 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:40:57.797 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:40:57.797 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:40:57.797 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:40:57.798 +04:00 DBG Creating DbConnection.
2025-04-02 16:40:57.798 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:40:57.798 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:57.798 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:57.798 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:40:57.798 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:57.798 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:40:57.798 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:40:57.816 +04:00 INF Executed DbCommand (18ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:40:57.817 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:57.817 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:57.817 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:40:57.817 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:57.818 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 16:40:57.818 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:57.818 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:40:57.818 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:40:57.818 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:40:57.818 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:40:57.818 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:40:57.818 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:40:57.819 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 16:40:57.819 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 23.2086ms
2025-04-02 16:40:57.819 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:40:57.820 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:40:57.820 +04:00 DBG Connection ID "18158513699168452638" disconnecting.
2025-04-02 16:40:57.820 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:40:57.820 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:40:57.820 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 42.0347ms
2025-04-02 16:41:10.682 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/User/transaction - application/json 46
2025-04-02 16:41:10.683 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transaction'
2025-04-02 16:41:10.683 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)' with route pattern 'api/User/transaction' is valid for the request path '/api/User/transaction'
2025-04-02 16:41:10.683 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:41:10.683 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:41:10.683 +04:00 DBG Successfully validated the token.
2025-04-02 16:41:10.683 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:41:10.684 +04:00 DBG Authorization was successful.
2025-04-02 16:41:10.684 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:41:10.684 +04:00 INF Route matched with {action = "CreateTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateTransaction(offers.API.Models.TransactionDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:41:10.684 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:41:10.684 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:41:10.684 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:41:10.684 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:41:10.684 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:41:10.684 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:41:10.685 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:41:10.685 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:41:10.685 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:41:10.686 +04:00 DBG Attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' using the name '' in request data ...
2025-04-02 16:41:10.686 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:41:10.686 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.TransactionDTO'
2025-04-02 16:41:10.686 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:41:10.686 +04:00 DBG Done attempting to bind parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:41:10.686 +04:00 DBG Attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO' ...
2025-04-02 16:41:10.686 +04:00 DBG Done attempting to validate the bound parameter 'transactionDTO' of type 'offers.API.Models.TransactionDTO'.
2025-04-02 16:41:10.686 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:41:10.687 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:41:10.687 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:41:10.687 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:41:10.687 +04:00 INF attempt to make a new Transaction on the offer with Id 3
2025-04-02 16:41:10.687 +04:00 DBG Creating DbConnection.
2025-04-02 16:41:10.687 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:41:10.687 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.688 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.688 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:10.689 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.689 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.689 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:41:10.697 +04:00 INF Executed DbCommand (8ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:41:10.697 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.698 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.698 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.699 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.699 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 16:41:10.699 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.699 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:41:10.700 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.700 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.701 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:10.701 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.701 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.701 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:41:10.711 +04:00 INF Executed DbCommand (10ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:41:10.711 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.713 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.714 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.714 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.714 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 16:41:10.714 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.715 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:41:10.715 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.716 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.716 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:41:10.717 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:41:10.718 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:10.718 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.718 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.718 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:41:10.721 +04:00 INF Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:41:10.722 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.722 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:41:10.722 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:41:10.722 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:41:10.724 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:41:10.725 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.725 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:41:10.726 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:41:10.729 +04:00 DBG Created transaction savepoint.
2025-04-02 16:41:10.729 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:10.729 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.730 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.730 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:41:10.735 +04:00 INF Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:41:10.735 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.735 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:41:10.735 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.735 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:41:10.737 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:10.737 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.738 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.738 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:41:10.741 +04:00 INF Executed DbCommand (3ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:41:10.741 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.742 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:41:10.742 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:41:10.742 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:41:10.742 +04:00 DBG The unchanged property 'Offer.Count' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:41:10.742 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.742 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:41:10.743 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:41:10.744 +04:00 DBG Created transaction savepoint.
2025-04-02 16:41:10.744 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:10.744 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.744 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.744 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:41:10.749 +04:00 INF Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Offers] SET [Count] = @p0
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:41:10.749 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.749 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:41:10.750 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.750 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:41:10.750 +04:00 DBG 'ApplicationDbContext' generated a temporary value for the property 'Transaction.Id'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.751 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.751 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:41:10.751 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:41:10.751 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:41:10.751 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:41:10.752 +04:00 DBG Created transaction savepoint.
2025-04-02 16:41:10.756 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:10.756 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.756 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:10.756 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:41:10.761 +04:00 INF Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime), @p2='?' (DbType = Int32), @p3='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p4='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Transactions] ([Count], [CreatedAt], [OfferId], [Paid], [UserId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
2025-04-02 16:41:10.761 +04:00 DBG The foreign key property 'Transaction.Id' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:41:10.761 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.762 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:41:10.762 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:10.762 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:41:10.762 +04:00 DBG Committing transaction.
2025-04-02 16:41:10.764 +04:00 DBG Committed transaction.
2025-04-02 16:41:10.764 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.764 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:41:10.764 +04:00 DBG Disposing transaction.
2025-04-02 16:41:10.764 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:41:10.764 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:41:10.764 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:41:10.764 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:41:10.764 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:41:10.765 +04:00 INF Executing CreatedAtActionResult, writing value of type 'offers.Application.Models.TransactionResponseModel'.
2025-04-02 16:41:10.765 +04:00 DBG Found the endpoints ["offers.API.Controllers.UserController.GetMyTransaction (offers.API)"] for address (id=[4],action=[GetMyTransaction],controller=[User])
2025-04-02 16:41:10.765 +04:00 DBG Successfully processed template api/User/transactions/{id} for offers.API.Controllers.UserController.GetMyTransaction (offers.API) resulting in /api/User/transactions/4 and 
2025-04-02 16:41:10.765 +04:00 DBG Link generation succeeded for endpoints ["offers.API.Controllers.UserController.GetMyTransaction (offers.API)"] with result /api/User/transactions/4
2025-04-02 16:41:10.765 +04:00 INF Executed action offers.API.Controllers.UserController.CreateTransaction (offers.API) in 81.3496ms
2025-04-02 16:41:10.766 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.CreateTransaction (offers.API)'
2025-04-02 16:41:10.766 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:41:10.766 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:10.766 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:41:10.766 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/User/transaction - 201 null application/json; charset=utf-8 83.9855ms
2025-04-02 16:41:10.766 +04:00 DBG Connection ID "18158513699168452640" disconnecting.
2025-04-02 16:41:23.629 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 16:41:23.630 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 16:41:23.630 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 16:41:23.630 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:41:23.630 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:41:23.631 +04:00 DBG Successfully validated the token.
2025-04-02 16:41:23.631 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:41:23.631 +04:00 DBG Authorization was successful.
2025-04-02 16:41:23.631 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:41:23.631 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:41:23.631 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:41:23.631 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:41:23.631 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:41:23.631 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:41:23.632 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:41:23.632 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:41:23.633 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:41:23.633 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:41:23.634 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:41:23.636 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:41:23.636 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:41:23.636 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:41:23.638 +04:00 DBG Creating DbConnection.
2025-04-02 16:41:23.638 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:41:23.638 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:23.638 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:23.638 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:23.639 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:23.639 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:23.639 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:41:23.651 +04:00 INF Executed DbCommand (12ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:41:23.652 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:23.655 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:23.656 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:23.656 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:23.656 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 16:41:23.657 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:23.657 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:41:23.657 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:41:23.659 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:41:23.661 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:41:23.661 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:41:23.661 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:41:23.661 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 16:41:23.662 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 30.1408ms
2025-04-02 16:41:23.662 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:41:23.662 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:41:23.662 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:23.662 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:41:23.662 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 32.883ms
2025-04-02 16:41:59.741 +04:00 INF Request starting HTTP/2 DELETE https://localhost:44346/api/Company/offers/3 - null null
2025-04-02 16:41:59.742 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers/3'
2025-04-02 16:41:59.742 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)' with route pattern 'api/Company/offers/{id}' is valid for the request path '/api/Company/offers/3'
2025-04-02 16:41:59.742 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 16:41:59.742 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:41:59.743 +04:00 DBG Successfully validated the token.
2025-04-02 16:41:59.743 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:41:59.743 +04:00 DBG Authorization was successful.
2025-04-02 16:41:59.743 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 16:41:59.751 +04:00 INF Route matched with {action = "Delete", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 16:41:59.752 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:41:59.752 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:41:59.752 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:41:59.752 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:41:59.752 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:41:59.752 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 16:41:59.753 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:41:59.754 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 16:41:59.755 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 16:41:59.755 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 16:41:59.755 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:41:59.755 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:41:59.755 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 16:41:59.755 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 16:41:59.755 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:41:59.755 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:41:59.755 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:41:59.755 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:41:59.756 +04:00 INF attempt to Delete an offer with the id 3
2025-04-02 16:41:59.758 +04:00 DBG Creating DbConnection.
2025-04-02 16:41:59.758 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:41:59.758 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.758 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.758 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:59.758 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:59.758 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:59.759 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:41:59.765 +04:00 INF Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:41:59.767 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.772 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.774 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.774 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.774 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 7ms reading results.
2025-04-02 16:41:59.775 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.775 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:41:59.775 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.775 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.775 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:59.776 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:59.776 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:59.776 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:41:59.784 +04:00 INF Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:41:59.787 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.787 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.787 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.787 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.787 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 16:41:59.787 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.788 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:41:59.788 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.788 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.789 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:41:59.789 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:41:59.789 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.796 +04:00 DBG Compiling query expression: 
'DbSet<Transaction>()
    .Where(tran => tran.OfferId == __offerId_0)'
2025-04-02 16:41:59.804 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Transaction>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
        SELECT t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId
        FROM Transactions AS t
        WHERE t.OfferId == @__offerId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
        SELECT t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId
        FROM Transactions AS t
        WHERE t.OfferId == @__offerId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Transaction entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Transaction instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Transaction);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Transaction.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Transaction)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]: 
                        {
                            return 
                            {
                                Transaction instance;
                                instance = new Transaction();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Count>k__BackingField = dataReader.GetInt32(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<OfferId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Paid>k__BackingField = dataReader.GetDecimal(4);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Transaction)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:41:59.806 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:59.806 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:59.807 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:59.807 +04:00 DBG Executing DbCommand [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:41:59.814 +04:00 INF Executed DbCommand (7ms) [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:41:59.814 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.815 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.816 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.816 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 16:41:59.817 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:41:59.817 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:59.817 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:41:59.817 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:41:59.819 +04:00 INF Executed DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:41:59.822 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.823 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.823 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.823 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.823 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.824 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:41:59.824 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 16:41:59.852 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:41:59.852 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:41:59.852 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:41:59.852 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.852 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:41:59.855 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:41:59.864 +04:00 ERR An exception occurred in the database while saving changes for context type 'offers.Persistance.Context.ApplicationDbContext'.
System.InvalidOperationException: The association between entity types 'Offer' and 'Transaction' has been severed, but the relationship is either marked as required or is implicitly required because the foreign key is not nullable. If the dependent/child entity should be deleted when a required relationship is severed, configure the relationship to use cascade deletes. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleConceptualNulls(Boolean sensitiveLoggingEnabled, Boolean force, Boolean isCascadeDelete)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.CascadeDelete(InternalEntityEntry entry, Boolean force, IEnumerable`1 foreignKeys)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.CascadeChanges(Boolean force)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetEntriesToSave(Boolean cascadeChanges)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)System.InvalidOperationException: The association between entity types 'Offer' and 'Transaction' has been severed, but the relationship is either marked as required or is implicitly required because the foreign key is not nullable. If the dependent/child entity should be deleted when a required relationship is severed, configure the relationship to use cascade deletes. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleConceptualNulls(Boolean sensitiveLoggingEnabled, Boolean force, Boolean isCascadeDelete)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.CascadeDelete(InternalEntityEntry entry, Boolean force, IEnumerable`1 foreignKeys)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.CascadeChanges(Boolean force)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetEntriesToSave(Boolean cascadeChanges)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)

2025-04-02 16:42:00.091 +04:00 DBG Rolling back transaction.
2025-04-02 16:42:00.094 +04:00 DBG Rolled back transaction.
2025-04-02 16:42:00.094 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:42:00.094 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:42:00.094 +04:00 DBG Disposing transaction.
2025-04-02 16:42:00.401 +04:00 INF Executed action offers.API.Controllers.CompanyController.Delete (offers.API) in 649.028ms
2025-04-02 16:42:00.401 +04:00 INF Executed endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 16:42:00.403 +04:00 ERR An unhandled exception has occurred while executing the request.offers.Application.Exceptions.Offer.OfferCouldNotBeDeletedException: Unknown Issue occured
   at offers.Application.Services.Offers.OfferService.DeleteAsync(Int32 id, Int32 accountId, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Offers\OfferService.cs:line 134
   at offers.API.Controllers.CompanyController.Delete(Int32 id, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\CompanyController.cs:line 71
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 16:42:00.410 +04:00 ERR Handled exception: Unknown Issue occuredoffers.Application.Exceptions.Offer.OfferCouldNotBeDeletedException: Unknown Issue occured
   at offers.Application.Services.Offers.OfferService.DeleteAsync(Int32 id, Int32 accountId, CancellationToken cancellationToken) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.Application\Services\Offers\OfferService.cs:line 134
   at offers.API.Controllers.CompanyController.Delete(Int32 id, CancellationToken cancellation) in C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API\Controllers\CompanyController.cs:line 71
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|10_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)

2025-04-02 16:42:00.413 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:42:00.413 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:42:00.414 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:42:00.414 +04:00 INF Request finished HTTP/2 DELETE https://localhost:44346/api/Company/offers/3 - 500 null application/json 672.4949ms
2025-04-02 16:42:00.414 +04:00 DBG Connection ID "18230571293206380603" disconnecting.
2025-04-02 16:42:02.746 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:42:02.747 +04:00 DBG Creating DbConnection.
2025-04-02 16:42:02.747 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:42:02.747 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:42:02.748 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:42:02.748 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:42:02.748 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:42:02.748 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:42:02.748 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:42:02.752 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:42:02.752 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:42:02.752 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:42:02.753 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:42:02.753 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:42:02.753 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:42:02.753 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:42:02.753 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:42:02.753 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:42:02.753 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:42:53.119 +04:00 INF Request starting HTTP/2 DELETE https://localhost:44346/api/Company/offers/3 - null null
2025-04-02 16:42:53.119 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers/3'
2025-04-02 16:42:53.119 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)' with route pattern 'api/Company/offers/{id}' is valid for the request path '/api/Company/offers/3'
2025-04-02 16:42:53.119 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 16:42:53.119 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:42:53.119 +04:00 DBG Successfully validated the token.
2025-04-02 16:42:53.120 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:42:53.120 +04:00 DBG Authorization was successful.
2025-04-02 16:42:53.120 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 16:42:53.120 +04:00 INF Route matched with {action = "Delete", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 16:42:53.120 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:42:53.120 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:42:53.120 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:42:53.120 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:42:53.120 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:42:53.120 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 16:42:53.121 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:42:53.121 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 16:42:53.122 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 16:42:53.122 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 16:42:53.122 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:42:53.122 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:42:53.122 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 16:42:53.122 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 16:42:53.122 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:42:53.122 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:42:53.122 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:42:53.122 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:42:53.129 +04:00 INF attempt to Delete an offer with the id 3
2025-04-02 16:43:05.192 +04:00 DBG Creating DbConnection.
2025-04-02 16:43:05.192 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:43:05.192 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:43:05.193 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:43:05.193 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:43:05.193 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:43:05.194 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:43:05.194 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:43:05.222 +04:00 INF Executed DbCommand (28ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:43:05.223 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:43:05.223 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:43:05.224 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:43:05.224 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:43:05.224 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 16:43:05.224 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:43:05.225 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:43:10.222 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:43:10.222 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:43:10.223 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:43:10.223 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:43:10.223 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:43:10.223 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:43:10.251 +04:00 INF Executed DbCommand (28ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:43:10.252 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:43:10.255 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:43:10.256 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:43:10.256 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:43:10.256 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 16:43:10.256 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:43:10.258 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (2ms).
2025-04-02 16:43:29.705 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:43:29.705 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:43:29.706 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:43:29.706 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:43:35.153 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:44:00.622 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:44:00.622 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:44:00.622 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:44:00.623 +04:00 DBG Executing DbCommand [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:44:00.667 +04:00 INF Executed DbCommand (45ms) [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:44:00.668 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:44:00.668 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:44:00.668 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:44:00.668 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:44:12.980 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:44:12.980 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:44:12.980 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:44:12.980 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:44:13.019 +04:00 INF Executed DbCommand (40ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:44:13.020 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:44:13.020 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:44:13.020 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:44:13.020 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:44:13.020 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:44:13.020 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:44:13.020 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:48:46.334 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 16:48:46.589 +04:00 INF starting web host
2025-04-02 16:48:46.749 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 16:48:47.609 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:48:47.613 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:48:47.708 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:48:47.851 +04:00 DBG Creating DbConnection.
2025-04-02 16:48:47.916 +04:00 DBG Created DbConnection. (62ms).
2025-04-02 16:48:47.917 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:47.933 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:48.358 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:48.368 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:48:48.377 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-04-02 16:48:48.383 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (16ms).
2025-04-02 16:48:48.391 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:48:48.430 +04:00 INF Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:48:48.433 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:48.444 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (5ms).
2025-04-02 16:48:48.444 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:48.445 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:48.446 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 16:48:48.448 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:48:48.449 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:48:48.449 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:48:48.450 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 16:48:48.471 +04:00 INF Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 16:48:48.583 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:48:48.595 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:48:48.598 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:48:48.598 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:48:48.600 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 16:48:48.600 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 16:48:48.606 +04:00 INF Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 16:48:48.608 +04:00 DBG Committing transaction.
2025-04-02 16:48:48.616 +04:00 DBG Committed transaction.
2025-04-02 16:48:48.619 +04:00 DBG Disposing transaction.
2025-04-02 16:48:48.620 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:48:48.621 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:48:48.622 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:48:48.623 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:48:48.623 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:48:48.623 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:48:48.624 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:48:48.624 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:48:48.624 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:48:48.624 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:48:48.625 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 16:48:48.625 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 16:48:48.630 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:48:48.630 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:48:48.630 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:48:48.630 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 16:48:48.635 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 16:48:48.638 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:48.640 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 16:48:48.648 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 16:48:48.648 +04:00 DBG Committing transaction.
2025-04-02 16:48:48.649 +04:00 DBG Committed transaction.
2025-04-02 16:48:48.649 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:48:48.649 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:48:48.649 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:48:48.649 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 16:48:48.653 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 16:48:48.653 +04:00 DBG Disposing transaction.
2025-04-02 16:48:48.653 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:48.654 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:48:48.713 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 16:48:49.026 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 16:48:49.084 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:49.085 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:49.085 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:48:49.085 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:48:49.085 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:48:49.085 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 16:48:49.090 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 16:48:49.095 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:49.095 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 16:48:49.095 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:49.095 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:48:49.098 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:48:49.102 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:49.103 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 16:48:49.109 +04:00 DBG Hosting starting
2025-04-02 16:48:49.135 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 16:48:49.168 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 16:48:49.183 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 16:48:49.193 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 16:48:49.198 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 16:48:49.199 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 16:48:49.201 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 16:48:49.202 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 16:48:49.203 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 16:48:49.205 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 16:48:49.206 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 16:48:49.235 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:48:49.245 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.UtcNow)'
2025-04-02 16:48:49.319 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:48:49.348 +04:00 DBG Creating DbConnection.
2025-04-02 16:48:49.350 +04:00 DBG Created DbConnection. (1ms).
2025-04-02 16:48:49.352 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:49.356 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:49.357 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:48:49.357 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:48:49.357 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:48:49.358 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:48:49.390 +04:00 INF Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:48:49.482 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:48:49.501 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 16:48:49.502 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 16:48:49.502 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 16:48:49.502 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 16:48:49.621 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:48:49.626 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:49.629 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 238ms reading results.
2025-04-02 16:48:49.628 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 16:48:49.632 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:49.632 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:48:49.634 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:48:49.634 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:48:49.634 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:48:49.821 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 16:48:49.846 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 16:48:49.846 +04:00 INF Hosting environment: Development
2025-04-02 16:48:49.846 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 16:48:49.846 +04:00 DBG Hosting started
2025-04-02 16:48:49.865 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 16:48:49.866 +04:00 DBG Request did not match any endpoints
2025-04-02 16:48:49.996 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 16:48:49.998 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 16:48:50.073 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 16:48:50.075 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 16:48:50.095 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 536.0008ms
2025-04-02 16:48:50.139 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 16:48:50.139 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 16:48:50.145 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 5.7941ms
2025-04-02 16:48:50.225 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 86.7283ms
2025-04-02 16:48:50.248 +04:00 DBG Connection ID "18374686481282236470" disconnecting.
2025-04-02 16:48:50.332 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 16:48:50.332 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 16:48:50.332 +04:00 DBG Request did not match any endpoints
2025-04-02 16:48:50.398 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 66.272ms
2025-04-02 16:49:17.446 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 72
2025-04-02 16:49:17.505 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 16:49:17.514 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 16:49:17.515 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:49:17.519 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:49:17.606 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 16:49:17.611 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:49:17.635 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 16:49:17.636 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:49:17.637 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:49:17.637 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:49:17.638 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:49:17.638 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:49:17.641 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 16:49:17.700 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:49:17.701 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 16:49:17.706 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 16:49:17.712 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 16:49:17.715 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:49:17.738 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 16:49:17.739 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:49:17.739 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:49:17.739 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 16:49:17.750 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:49:17.751 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:49:17.752 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:49:17.752 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:49:17.752 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:49:17.755 +04:00 INF Login attempt for mishokirvalidze11@gmail.com
2025-04-02 16:49:17.765 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .SingleOrDefault(acc => acc.Email == __Email_0)'
2025-04-02 16:49:17.782 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 16:49:17.784 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 16:49:17.868 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:49:17.900 +04:00 DBG Creating DbConnection.
2025-04-02 16:49:17.900 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:49:17.900 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:49:17.901 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:49:17.901 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:49:17.901 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:49:17.907 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (5ms).
2025-04-02 16:49:17.911 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 16:49:17.950 +04:00 INF Executed DbCommand (43ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 16:49:17.967 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:49:18.013 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:49:18.016 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:49:18.031 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:49:18.032 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 80ms reading results.
2025-04-02 16:49:18.032 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:49:18.032 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:49:18.151 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:49:18.153 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:49:18.153 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:49:18.154 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:49:18.155 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:49:18.155 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 16:49:18.169 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 528.4453ms
2025-04-02 16:49:18.170 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:49:18.172 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:49:18.173 +04:00 DBG Connection ID "18086456109425492022" disconnecting.
2025-04-02 16:49:18.174 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:49:18.174 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:49:18.176 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 731.328ms
2025-04-02 16:49:43.288 +04:00 INF Request starting HTTP/2 DELETE https://localhost:44346/api/Company/offers/3 - null null
2025-04-02 16:49:43.291 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers/3'
2025-04-02 16:49:43.291 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)' with route pattern 'api/Company/offers/{id}' is valid for the request path '/api/Company/offers/3'
2025-04-02 16:49:43.291 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 16:49:43.292 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:49:43.304 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 16:49:43.310 +04:00 DBG Policy authentication schemes  did not succeed
2025-04-02 16:49:43.313 +04:00 INF Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Company)
2025-04-02 16:49:43.318 +04:00 INF AuthenticationScheme: Bearer was challenged.
2025-04-02 16:49:43.320 +04:00 DBG Connection ID "18158513707758387247" disconnecting.
2025-04-02 16:49:43.320 +04:00 INF Request finished HTTP/2 DELETE https://localhost:44346/api/Company/offers/3 - 401 null null 31.9157ms
2025-04-02 16:50:18.769 +04:00 INF Request starting HTTP/2 DELETE https://localhost:44346/api/Company/offers/3 - null null
2025-04-02 16:50:18.769 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers/3'
2025-04-02 16:50:18.769 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)' with route pattern 'api/Company/offers/{id}' is valid for the request path '/api/Company/offers/3'
2025-04-02 16:50:18.770 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 16:50:18.770 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:50:18.829 +04:00 DBG Successfully validated the token.
2025-04-02 16:50:18.831 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:50:18.833 +04:00 DBG Authorization was successful.
2025-04-02 16:50:18.835 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 16:50:18.842 +04:00 INF Route matched with {action = "Delete", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 16:50:18.842 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:50:18.843 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:50:18.843 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:50:18.843 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:50:18.843 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:50:18.843 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 16:50:18.846 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:50:18.847 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 16:50:18.848 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 16:50:18.849 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 16:50:18.850 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:50:18.850 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:50:18.850 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 16:50:18.852 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 16:50:18.853 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:50:18.853 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:50:18.853 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:50:18.854 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:50:18.855 +04:00 INF attempt to Delete an offer with the id 3
2025-04-02 16:50:23.264 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .FirstOrDefault(acc => acc.Id == __id_0)'
2025-04-02 16:50:23.265 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 16:50:23.266 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 16:50:23.287 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:50:23.310 +04:00 DBG Creating DbConnection.
2025-04-02 16:50:23.310 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:50:23.311 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:23.311 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:23.311 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:50:23.311 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:50:23.312 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:50:23.313 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:50:23.355 +04:00 INF Executed DbCommand (42ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:50:23.357 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:23.358 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:23.359 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:23.360 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:23.360 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 16:50:23.360 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:23.360 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:50:27.166 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Include(off => off.Category)
    .SingleOrDefault(off => off.Id == __id_0)'
2025-04-02 16:50:27.170 +04:00 DBG Including navigation: 'Offer.Category'.
2025-04-02 16:50:27.189 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Offer>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Offer>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Offer entity;
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Offer instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Offer);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Offer)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<Description>k__BackingField = dataReader.GetString(6);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<Name>k__BackingField = dataReader.GetString(8);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Category instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Category);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(10) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Category)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Offer, Offer, Category>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Offer.Category (Category) ToPrincipal Category Inverse: Offers | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Category")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Category.Offers (List<Offer>) Collection ToDependent Offer Inverse: Category | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Category>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Category, List<Offer>, Offer> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:50:27.206 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:27.206 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:27.206 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:50:27.206 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:50:27.206 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:50:27.206 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:50:27.236 +04:00 INF Executed DbCommand (30ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:50:27.241 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:27.244 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:27.246 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:27.254 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:27.254 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 17ms reading results.
2025-04-02 16:50:27.254 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:27.255 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:50:33.798 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:33.799 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:33.800 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:50:33.802 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:50:36.856 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:43.451 +04:00 DBG Compiling query expression: 
'DbSet<Transaction>()
    .Where(tran => tran.OfferId == __offerId_0)'
2025-04-02 16:50:43.456 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Transaction>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
        SELECT t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId
        FROM Transactions AS t
        WHERE t.OfferId == @__offerId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
        SELECT t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId
        FROM Transactions AS t
        WHERE t.OfferId == @__offerId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Transaction entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Transaction instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Transaction);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Transaction.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Transaction)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]: 
                        {
                            return 
                            {
                                Transaction instance;
                                instance = new Transaction();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Count>k__BackingField = dataReader.GetInt32(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<OfferId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Paid>k__BackingField = dataReader.GetDecimal(4);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Transaction)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:50:43.465 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:50:43.465 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:50:43.465 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:50:43.465 +04:00 DBG Executing DbCommand [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:50:43.628 +04:00 INF Executed DbCommand (163ms) [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:50:43.640 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:43.655 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:43.655 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:43.655 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 26ms reading results.
2025-04-02 16:50:47.285 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:50:47.285 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:50:47.285 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:50:47.286 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:50:47.319 +04:00 INF Executed DbCommand (33ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:50:47.320 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:47.323 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:47.325 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:47.328 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:47.329 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:47.340 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:50:47.340 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 20ms reading results.
2025-04-02 16:50:53.288 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:50:53.292 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:50:53.340 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:50:53.341 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:53.343 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:50:53.353 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:50:53.366 +04:00 ERR An exception occurred in the database while saving changes for context type 'offers.Persistance.Context.ApplicationDbContext'.
System.InvalidOperationException: The association between entity types 'Offer' and 'Transaction' has been severed, but the relationship is either marked as required or is implicitly required because the foreign key is not nullable. If the dependent/child entity should be deleted when a required relationship is severed, configure the relationship to use cascade deletes. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleConceptualNulls(Boolean sensitiveLoggingEnabled, Boolean force, Boolean isCascadeDelete)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.CascadeDelete(InternalEntityEntry entry, Boolean force, IEnumerable`1 foreignKeys)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.CascadeChanges(Boolean force)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetEntriesToSave(Boolean cascadeChanges)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)System.InvalidOperationException: The association between entity types 'Offer' and 'Transaction' has been severed, but the relationship is either marked as required or is implicitly required because the foreign key is not nullable. If the dependent/child entity should be deleted when a required relationship is severed, configure the relationship to use cascade deletes. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the key values.
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleConceptualNulls(Boolean sensitiveLoggingEnabled, Boolean force, Boolean isCascadeDelete)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.CascadeDelete(InternalEntityEntry entry, Boolean force, IEnumerable`1 foreignKeys)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.CascadeChanges(Boolean force)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetEntriesToSave(Boolean cascadeChanges)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)

2025-04-02 16:53:27.436 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 16:53:27.655 +04:00 INF starting web host
2025-04-02 16:53:27.831 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 16:53:29.145 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:53:29.147 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:53:44.324 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 16:53:44.478 +04:00 INF starting web host
2025-04-02 16:53:44.721 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 16:53:45.716 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:53:45.718 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 16:53:45.831 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:53:46.025 +04:00 DBG Creating DbConnection.
2025-04-02 16:53:46.071 +04:00 DBG Created DbConnection. (41ms).
2025-04-02 16:53:46.073 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:46.087 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:46.410 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:46.418 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:53:46.429 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (7ms).
2025-04-02 16:53:46.437 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (20ms).
2025-04-02 16:53:46.450 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:53:46.486 +04:00 INF Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:53:46.488 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:46.502 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (5ms).
2025-04-02 16:53:46.503 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:46.505 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:46.506 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 16:53:46.509 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:53:46.509 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:53:46.509 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:53:46.510 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 16:53:46.541 +04:00 INF Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 16:53:46.645 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:53:46.658 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:53:46.660 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:53:46.660 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:53:46.662 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-04-02 16:53:46.662 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 16:53:46.671 +04:00 INF Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 16:53:46.673 +04:00 DBG Committing transaction.
2025-04-02 16:53:46.676 +04:00 DBG Committed transaction.
2025-04-02 16:53:46.678 +04:00 DBG Disposing transaction.
2025-04-02 16:53:46.680 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:53:46.680 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:53:46.682 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 16:53:46.682 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:53:46.683 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 16:53:46.683 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:53:46.685 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 16:53:46.685 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:53:46.685 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:53:46.685 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:53:46.685 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 16:53:46.686 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 16:53:46.688 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:53:46.688 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:53:46.688 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:53:46.689 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 16:53:46.692 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 16:53:46.695 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:46.696 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 16:53:46.704 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 16:53:46.705 +04:00 DBG Committing transaction.
2025-04-02 16:53:46.705 +04:00 DBG Committed transaction.
2025-04-02 16:53:46.705 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 16:53:46.706 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:53:46.706 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 16:53:46.706 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 16:53:46.709 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 16:53:46.709 +04:00 DBG Disposing transaction.
2025-04-02 16:53:46.709 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:46.710 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:53:46.772 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 16:53:47.119 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 16:53:47.181 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:47.182 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:47.183 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:53:47.183 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:53:47.184 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:53:47.184 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 16:53:47.188 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 16:53:47.191 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:47.191 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 16:53:47.191 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:47.191 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:53:47.192 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:53:47.194 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:47.195 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:53:47.200 +04:00 DBG Hosting starting
2025-04-02 16:53:47.220 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 16:53:47.240 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 16:53:47.246 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 16:53:47.257 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 16:53:47.261 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 16:53:47.261 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 16:53:47.263 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 16:53:47.266 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 16:53:47.268 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 16:53:47.271 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 16:53:47.272 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 16:53:47.331 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:53:47.342 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.UtcNow)'
2025-04-02 16:53:47.420 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:53:47.441 +04:00 DBG Creating DbConnection.
2025-04-02 16:53:47.442 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:53:47.443 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:47.445 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:47.446 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:53:47.446 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:53:47.446 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:53:47.447 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:53:47.469 +04:00 INF Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 16:53:47.551 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:53:47.587 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 16:53:47.588 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 16:53:47.588 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 16:53:47.588 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 16:53:47.685 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:53:47.689 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:47.690 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 220ms reading results.
2025-04-02 16:53:47.692 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:47.693 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:53:47.694 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:53:47.694 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:53:47.694 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:53:47.695 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 16:53:47.903 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 16:53:47.936 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 16:53:47.936 +04:00 DBG Request did not match any endpoints
2025-04-02 16:53:48.044 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 16:53:48.047 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 16:53:48.096 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 16:53:48.096 +04:00 INF Hosting environment: Development
2025-04-02 16:53:48.097 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 16:53:48.098 +04:00 DBG Hosting started
2025-04-02 16:53:48.118 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 16:53:48.119 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 16:53:48.195 +04:00 DBG Connection ID "18158513703463419974" disconnecting.
2025-04-02 16:53:48.195 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 16:53:48.196 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 16:53:48.203 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 529.7321ms
2025-04-02 16:53:48.207 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 10.6941ms
2025-04-02 16:53:48.296 +04:00 DBG Connection ID "18374686481282236476" disconnecting.
2025-04-02 16:53:48.304 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 108.5495ms
2025-04-02 16:53:48.423 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 16:53:48.423 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 16:53:48.424 +04:00 DBG Request did not match any endpoints
2025-04-02 16:53:48.476 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 53.8309ms
2025-04-02 16:54:17.890 +04:00 INF Request starting HTTP/2 DELETE https://localhost:44346/api/Company/offers/3 - null null
2025-04-02 16:54:17.905 +04:00 DBG 1 candidate(s) found for the request path '/api/Company/offers/3'
2025-04-02 16:54:17.909 +04:00 DBG Endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)' with route pattern 'api/Company/offers/{id}' is valid for the request path '/api/Company/offers/3'
2025-04-02 16:54:17.910 +04:00 DBG Request matched endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 16:54:17.914 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:54:18.067 +04:00 DBG Successfully validated the token.
2025-04-02 16:54:18.072 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:54:18.084 +04:00 DBG Authorization was successful.
2025-04-02 16:54:18.085 +04:00 INF Executing endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 16:54:18.119 +04:00 INF Route matched with {action = "Delete", controller = "Company"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Delete(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.CompanyController (offers.API).
2025-04-02 16:54:18.120 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:54:18.121 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:54:18.121 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:54:18.122 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:54:18.122 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:54:18.124 +04:00 DBG Executing controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 16:54:18.203 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:54:18.205 +04:00 DBG Executed controller factory for controller offers.API.Controllers.CompanyController (offers.API)
2025-04-02 16:54:18.210 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 16:54:18.214 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 16:54:18.217 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:54:18.217 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 16:54:18.218 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 16:54:18.220 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 16:54:18.221 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:54:18.222 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:54:18.222 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:54:18.223 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:54:18.224 +04:00 INF attempt to Delete an offer with the id 3
2025-04-02 16:54:18.239 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .FirstOrDefault(acc => acc.Id == __id_0)'
2025-04-02 16:54:18.268 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 16:54:18.270 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 16:54:18.352 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:54:18.380 +04:00 DBG Creating DbConnection.
2025-04-02 16:54:18.381 +04:00 DBG Created DbConnection. (1ms).
2025-04-02 16:54:18.383 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.384 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.384 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:54:18.385 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.389 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (4ms).
2025-04-02 16:54:18.394 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:54:18.426 +04:00 INF Executed DbCommand (37ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:54:18.447 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.493 +04:00 DBG The navigation 'Account.CompanyDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.494 +04:00 DBG Context 'ApplicationDbContext' started tracking 'CompanyDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.502 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.502 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 71ms reading results.
2025-04-02 16:54:18.502 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.502 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:54:18.505 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Include(off => off.Category)
    .SingleOrDefault(off => off.Id == __id_0)'
2025-04-02 16:54:18.507 +04:00 DBG Including navigation: 'Offer.Category'.
2025-04-02 16:54:18.527 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Offer>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Offer>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
                1 -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 10], [Property: Category.Description (string) MaxLength(1000) ANSI, 11], [Property: Category.Name (string) Required MaxLength(255) ANSI, 12] }
            SELECT TOP(2) o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, c.Id, c.Description, c.Name
            FROM Offers AS o
            INNER JOIN Categories AS c ON o.CategoryId == c.Id
            WHERE o.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Offer entity;
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Offer instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Offer);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Offer)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                    instance.<Description>k__BackingField = dataReader.GetString(6);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<Name>k__BackingField = dataReader.GetString(8);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Category instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Category);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(10) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Category)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(10);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(11) ? default(string) : dataReader.GetString(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Offer, Offer, Category>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Offer.Category (Category) ToPrincipal Category Inverse: Offers | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Category")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Category.Offers (List<Offer>) Collection ToDependent Offer Inverse: Category | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Category>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Category, List<Offer>, Offer> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindNavigation("Offers").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:54:18.536 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.536 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.536 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:54:18.537 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.537 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.537 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:54:18.548 +04:00 INF Executed DbCommand (11ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [c].[Id], [c].[Description], [c].[Name]
FROM [Offers] AS [o]
INNER JOIN [Categories] AS [c] ON [o].[CategoryId] = [c].[Id]
WHERE [o].[Id] = @__id_0
2025-04-02 16:54:18.553 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.557 +04:00 DBG The navigation 'Offer.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.558 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.564 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.565 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 16ms reading results.
2025-04-02 16:54:18.565 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.565 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:54:18.570 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.570 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.571 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 16:54:18.572 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 16:54:18.581 +04:00 DBG Compiling query expression: 
'DbSet<Transaction>()
    .Where(tran => tran.OfferId == __offerId_0)'
2025-04-02 16:54:18.588 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Transaction>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
        SELECT t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId
        FROM Transactions AS t
        WHERE t.OfferId == @__offerId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
        SELECT t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId
        FROM Transactions AS t
        WHERE t.OfferId == @__offerId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Transaction entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Transaction instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Transaction);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Transaction.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Transaction)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]: 
                        {
                            return 
                            {
                                Transaction instance;
                                instance = new Transaction();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Count>k__BackingField = dataReader.GetInt32(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<OfferId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Paid>k__BackingField = dataReader.GetDecimal(4);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Transaction)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:54:18.592 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:54:18.592 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.592 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.592 +04:00 DBG Executing DbCommand [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:54:18.600 +04:00 INF Executed DbCommand (8ms) [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:54:18.606 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.613 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.614 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.614 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 14ms reading results.
2025-04-02 16:54:18.618 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:54:18.618 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.618 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.618 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:54:18.620 +04:00 INF Executed DbCommand (1ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:54:18.620 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.624 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.625 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.627 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.628 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.634 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.634 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 14ms reading results.
2025-04-02 16:54:18.642 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:54:18.647 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:54:18.767 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:54:18.793 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.808 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:54:18.890 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:54:18.901 +04:00 DBG Created transaction savepoint.
2025-04-02 16:54:18.904 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:54:18.904 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.905 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 16:54:18.906 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:54:18.910 +04:00 INF Executed DbCommand (5ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:54:18.917 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.917 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 6ms reading results.
2025-04-02 16:54:18.922 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.925 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:54:18.925 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:54:18.925 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.926 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.926 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:54:18.931 +04:00 INF Executed DbCommand (6ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:54:18.932 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.933 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:54:18.933 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:54:18.933 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:54:18.934 +04:00 DBG The unchanged property 'UserDetail.Balance' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-04-02 16:54:18.934 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.935 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:54:18.936 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:54:18.937 +04:00 DBG Created transaction savepoint.
2025-04-02 16:54:18.937 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:54:18.938 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.938 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.938 +04:00 DBG Executing DbCommand [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:54:18.941 +04:00 INF Executed DbCommand (3ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [UserDetails] SET [Balance] = @p0
OUTPUT 1
WHERE [AccountId] = @p1;
2025-04-02 16:54:18.941 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.941 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:54:18.942 +04:00 DBG An entity of type 'UserDetail' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.942 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:54:18.946 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:54:18.946 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.946 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.947 +04:00 DBG Executing DbCommand [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:54:18.950 +04:00 INF Executed DbCommand (4ms) [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:54:18.951 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.952 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:54:18.956 +04:00 DBG Compiling query expression: 
'DbSet<Transaction>()
    .Where(tran => tran.OfferId == __offerId_0)'
2025-04-02 16:54:18.972 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Transaction>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
        SELECT t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId
        FROM Transactions AS t
        WHERE t.OfferId == @__offerId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
        SELECT t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId
        FROM Transactions AS t
        WHERE t.OfferId == @__offerId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Transaction entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Transaction instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Transaction);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Transaction.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Transaction)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]: 
                        {
                            return 
                            {
                                Transaction instance;
                                instance = new Transaction();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Count>k__BackingField = dataReader.GetInt32(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<OfferId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Paid>k__BackingField = dataReader.GetDecimal(4);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Transaction)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 16:54:18.978 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:54:18.978 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.978 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:18.979 +04:00 DBG Executing DbCommand [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:54:18.984 +04:00 INF Executed DbCommand (5ms) [Parameters=[@__offerId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId]
FROM [Transactions] AS [t]
WHERE [t].[OfferId] = @__offerId_0
2025-04-02 16:54:18.985 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.987 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:18.988 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:18.988 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 16:54:18.988 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:54:18.988 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:54:18.991 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:54:19.010 +04:00 DBG Executing 2 update commands as a batch.
2025-04-02 16:54:19.011 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:54:19.013 +04:00 DBG Created transaction savepoint.
2025-04-02 16:54:19.013 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:54:19.014 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:19.014 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:19.014 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Transactions]
OUTPUT 1
WHERE [Id] = @p0;
DELETE FROM [Transactions]
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:54:19.020 +04:00 INF Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Transactions]
OUTPUT 1
WHERE [Id] = @p0;
DELETE FROM [Transactions]
OUTPUT 1
WHERE [Id] = @p1;
2025-04-02 16:54:19.021 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:19.021 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:54:19.026 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:19.026 +04:00 DBG An entity of type 'Transaction' tracked by 'ApplicationDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:19.027 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-04-02 16:54:24.102 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Deleted"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:28.048 +04:00 DBG SaveChanges starting for 'ApplicationDbContext'.
2025-04-02 16:54:28.048 +04:00 DBG DetectChanges starting for 'ApplicationDbContext'.
2025-04-02 16:54:28.049 +04:00 DBG DetectChanges completed for 'ApplicationDbContext'.
2025-04-02 16:54:28.052 +04:00 DBG Creating transaction savepoint.
2025-04-02 16:54:28.054 +04:00 DBG Created transaction savepoint.
2025-04-02 16:54:28.055 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:54:28.056 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:54:28.057 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 16:54:28.085 +04:00 DBG Executing DbCommand [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Offers]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-02 16:54:28.092 +04:00 INF Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Offers]
OUTPUT 1
WHERE [Id] = @p0;
2025-04-02 16:54:28.093 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:28.093 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:54:28.094 +04:00 DBG An entity of type 'Offer' tracked by 'ApplicationDbContext' changed state from '"Deleted"' to '"Detached"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:54:28.094 +04:00 DBG SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-04-02 16:54:29.166 +04:00 DBG Committing transaction.
2025-04-02 16:54:29.169 +04:00 DBG Committed transaction.
2025-04-02 16:54:29.171 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:29.171 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:54:29.480 +04:00 DBG Disposing transaction.
2025-04-02 16:54:33.601 +04:00 INF Executing StatusCodeResult, setting HTTP status code 204
2025-04-02 16:54:33.604 +04:00 INF Executed action offers.API.Controllers.CompanyController.Delete (offers.API) in 15479.5635ms
2025-04-02 16:54:33.605 +04:00 INF Executed endpoint 'offers.API.Controllers.CompanyController.Delete (offers.API)'
2025-04-02 16:54:33.609 +04:00 DBG Connection ID "18086456109425492024" disconnecting.
2025-04-02 16:54:34.570 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:54:34.571 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:54:34.571 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:54:35.145 +04:00 INF Request finished HTTP/2 DELETE https://localhost:44346/api/Company/offers/3 - 204 null null 17255.1057ms
2025-04-02 16:55:24.305 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 66
2025-04-02 16:55:24.311 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 16:55:24.312 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 16:55:24.344 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:55:24.346 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:55:24.349 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 16:55:24.350 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:55:24.363 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 16:55:24.364 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:55:24.364 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:55:24.364 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:55:24.364 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:55:24.364 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:55:24.364 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 16:55:24.369 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:55:24.372 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 16:55:24.381 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 16:55:24.382 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 16:55:24.385 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 16:55:24.413 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 16:55:24.414 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:55:24.414 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:55:24.414 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 16:55:24.422 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 16:55:24.422 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:55:24.423 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:55:24.423 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:55:24.423 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 16:55:24.427 +04:00 INF Login attempt for kirvalidzedachi@gmail.com
2025-04-02 16:55:24.434 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .SingleOrDefault(acc => acc.Email == __Email_0)'
2025-04-02 16:55:24.437 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 16:55:24.437 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 16:55:24.453 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 16:55:24.469 +04:00 DBG Creating DbConnection.
2025-04-02 16:55:24.469 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:55:24.469 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:55:24.470 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:55:24.470 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:55:24.470 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:55:24.471 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (1ms).
2025-04-02 16:55:24.471 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 16:55:24.491 +04:00 INF Executed DbCommand (20ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 16:55:24.494 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:55:24.495 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:55:24.495 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:55:24.496 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:55:24.496 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 16:55:24.497 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:55:24.497 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:55:24.579 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:55:24.580 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:55:24.581 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:55:24.581 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:55:24.582 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:55:24.583 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 16:55:24.595 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 230.2094ms
2025-04-02 16:55:24.595 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 16:55:24.596 +04:00 DBG Connection ID "17942340925644603453" disconnecting.
2025-04-02 16:55:24.596 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:55:24.597 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:55:24.597 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:55:24.598 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 297.0657ms
2025-04-02 16:55:49.442 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 16:55:49.442 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 16:55:49.442 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 16:55:49.443 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:55:49.443 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 16:55:49.476 +04:00 DBG Successfully validated the token.
2025-04-02 16:55:49.477 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 16:55:49.510 +04:00 DBG Authorization was successful.
2025-04-02 16:55:49.511 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:55:49.514 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 16:55:49.515 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 16:55:49.515 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 16:55:49.515 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 16:55:49.515 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 16:55:49.515 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 16:55:49.515 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:55:49.516 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 16:55:49.519 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 16:55:49.519 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:55:49.519 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:55:49.519 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 16:55:49.519 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 16:55:49.523 +04:00 DBG Creating DbConnection.
2025-04-02 16:55:49.523 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 16:55:49.523 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:55:49.524 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:55:49.524 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 16:55:49.524 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:55:49.524 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 16:55:49.524 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:55:49.533 +04:00 INF Executed DbCommand (9ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 16:55:49.533 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:55:49.534 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:55:49.534 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 16:55:49.534 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:55:49.534 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 0ms reading results.
2025-04-02 16:55:49.534 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:55:49.534 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 16:55:49.546 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 16:55:49.546 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 16:55:49.546 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 16:55:49.546 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 16:55:49.547 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 16:55:49.547 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 16:55:49.555 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 40.0636ms
2025-04-02 16:55:49.555 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 16:55:49.556 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 16:55:49.556 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 16:55:49.556 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 16:55:49.556 +04:00 DBG Connection ID "18374686481282236481" disconnecting.
2025-04-02 16:55:49.556 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 120.8722ms
2025-04-02 18:06:03.684 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 18:06:03.848 +04:00 INF starting web host
2025-04-02 18:06:04.072 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 18:06:04.883 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 18:06:04.885 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 18:06:05.042 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:06:05.203 +04:00 DBG Creating DbConnection.
2025-04-02 18:06:05.280 +04:00 DBG Created DbConnection. (75ms).
2025-04-02 18:06:05.282 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:05.299 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:05.793 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:05.797 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 18:06:05.806 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-04-02 18:06:05.808 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (11ms).
2025-04-02 18:06:05.815 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:06:05.851 +04:00 INF Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:06:05.856 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:05.872 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (8ms).
2025-04-02 18:06:05.872 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:05.874 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:05.875 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 18:06:05.880 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 18:06:05.880 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:06:05.881 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:06:05.881 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 18:06:05.938 +04:00 INF Executed DbCommand (57ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 18:06:06.079 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 18:06:06.091 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 18:06:06.092 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 18:06:06.093 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 18:06:06.094 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 18:06:06.094 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 18:06:06.100 +04:00 INF Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 18:06:06.105 +04:00 DBG Committing transaction.
2025-04-02 18:06:06.111 +04:00 DBG Committed transaction.
2025-04-02 18:06:06.113 +04:00 DBG Disposing transaction.
2025-04-02 18:06:06.116 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 18:06:06.117 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 18:06:06.119 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 18:06:06.119 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 18:06:06.120 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 18:06:06.121 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:06:06.123 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:06:06.124 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 18:06:06.124 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:06:06.124 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:06:06.125 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 18:06:06.126 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 18:06:06.130 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:06:06.130 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:06:06.130 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:06:06.131 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 18:06:06.150 +04:00 INF Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 18:06:06.157 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:06.159 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 6ms reading results.
2025-04-02 18:06:06.165 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 18:06:06.166 +04:00 DBG Committing transaction.
2025-04-02 18:06:06.167 +04:00 DBG Committed transaction.
2025-04-02 18:06:06.167 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 18:06:06.167 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:06:06.167 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:06:06.167 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 18:06:06.177 +04:00 INF Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 18:06:06.178 +04:00 DBG Disposing transaction.
2025-04-02 18:06:06.178 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:06.178 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:06:06.296 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 18:06:06.658 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 18:06:06.734 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:06.734 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:06.734 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:06:06.734 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:06:06.735 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:06:06.735 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 18:06:06.741 +04:00 INF Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 18:06:06.746 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:06.746 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 4ms reading results.
2025-04-02 18:06:06.746 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:06.746 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:06:06.748 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:06:06.752 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:06.756 +04:00 DBG Disposed connection to database '' on server '' (2ms).
2025-04-02 18:06:06.765 +04:00 DBG Hosting starting
2025-04-02 18:06:06.806 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 18:06:06.823 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 18:06:06.833 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 18:06:06.848 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 18:06:06.851 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 18:06:06.853 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 18:06:06.856 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 18:06:06.857 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 18:06:06.859 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 18:06:06.860 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 18:06:06.861 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 18:06:06.891 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:06:06.915 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.UtcNow)'
2025-04-02 18:06:06.997 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 18:06:07.023 +04:00 DBG Creating DbConnection.
2025-04-02 18:06:07.024 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 18:06:07.027 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:07.031 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:07.032 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:06:07.032 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:06:07.033 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:06:07.033 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 18:06:07.063 +04:00 INF Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 18:06:07.154 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:06:07.261 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:07.263 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 199ms reading results.
2025-04-02 18:06:07.265 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:07.266 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:06:07.268 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:06:07.268 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:06:07.268 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 18:06:07.353 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 18:06:07.354 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 18:06:07.354 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 18:06:07.354 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 18:06:07.485 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger - null null
2025-04-02 18:06:07.685 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 18:06:07.685 +04:00 INF Hosting environment: Development
2025-04-02 18:06:07.685 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 18:06:07.686 +04:00 DBG Hosting started
2025-04-02 18:06:07.889 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 18:06:07.958 +04:00 DBG No candidates found for the request path '/swagger'
2025-04-02 18:06:07.959 +04:00 DBG Request did not match any endpoints
2025-04-02 18:06:08.126 +04:00 DBG Connection ID "18158513703463419978" disconnecting.
2025-04-02 18:06:08.142 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger - 301 null null 676.879ms
2025-04-02 18:06:08.143 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 18:06:08.161 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 18:06:08.161 +04:00 DBG Request did not match any endpoints
2025-04-02 18:06:08.309 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 18:06:08.312 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 18:06:08.374 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 18:06:08.374 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 18:06:08.376 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 233.563ms
2025-04-02 18:06:08.392 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 18:06:08.399 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/swagger-ui-bundle.js - null null
2025-04-02 18:06:08.399 +04:00 DBG No candidates found for the request path '/swagger/swagger-ui-bundle.js'
2025-04-02 18:06:08.399 +04:00 DBG Request did not match any endpoints
2025-04-02 18:06:08.404 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/swagger-ui.css - null null
2025-04-02 18:06:08.406 +04:00 DBG No candidates found for the request path '/swagger/swagger-ui.css'
2025-04-02 18:06:08.406 +04:00 DBG Request did not match any endpoints
2025-04-02 18:06:08.409 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 15.5949ms
2025-04-02 18:06:08.417 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/swagger-ui-standalone-preset.js - null null
2025-04-02 18:06:08.426 +04:00 DBG No candidates found for the request path '/swagger/swagger-ui-standalone-preset.js'
2025-04-02 18:06:08.426 +04:00 DBG Request did not match any endpoints
2025-04-02 18:06:08.455 +04:00 INF Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-04-02 18:06:08.461 +04:00 INF Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-04-02 18:06:08.464 +04:00 DBG Connection ID "18158513703463419982" disconnecting.
2025-04-02 18:06:08.481 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/swagger-ui.css - 200 152034 text/css 76.7672ms
2025-04-02 18:06:08.488 +04:00 DBG Connection ID "18302628887244308514" disconnecting.
2025-04-02 18:06:08.491 +04:00 INF Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-04-02 18:06:08.515 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/swagger-ui-standalone-preset.js - 200 230280 text/javascript 98.4024ms
2025-04-02 18:06:08.518 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 18:06:08.682 +04:00 DBG Connection ID "17798225737568747531" disconnecting.
2025-04-02 18:06:08.695 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 179.7892ms
2025-04-02 18:06:08.702 +04:00 DBG Connection ID "18086456105130524697" disconnecting.
2025-04-02 18:06:08.711 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/swagger-ui-bundle.js - 200 1456926 text/javascript 314.2402ms
2025-04-02 18:06:09.132 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 18:06:09.133 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 18:06:09.133 +04:00 DBG Request did not match any endpoints
2025-04-02 18:06:09.210 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 78.331ms
2025-04-02 18:07:15.715 +04:00 INF Request starting HTTP/2 POST https://localhost:44346/api/Auth/login - application/json 66
2025-04-02 18:07:15.750 +04:00 DBG 1 candidate(s) found for the request path '/api/Auth/login'
2025-04-02 18:07:15.791 +04:00 DBG Endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-04-02 18:07:15.792 +04:00 DBG Request matched endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 18:07:15.797 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 18:07:15.893 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 18:07:15.899 +04:00 INF Executing endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 18:07:15.936 +04:00 INF Route matched with {action = "LogIn", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] LogIn(offers.API.Models.AccountLoginDTO, System.Threading.CancellationToken) on controller offers.API.Controllers.AuthController (offers.API).
2025-04-02 18:07:15.938 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 18:07:15.939 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 18:07:15.939 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 18:07:15.940 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 18:07:15.940 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 18:07:15.943 +04:00 DBG Executing controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 18:07:16.023 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:07:16.025 +04:00 DBG Executed controller factory for controller offers.API.Controllers.AuthController (offers.API)
2025-04-02 18:07:16.037 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 18:07:16.041 +04:00 DBG Attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' using the name '' in request data ...
2025-04-02 18:07:16.047 +04:00 DBG Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-04-02 18:07:16.081 +04:00 DBG JSON input formatter succeeded, deserializing to type 'offers.API.Models.AccountLoginDTO'
2025-04-02 18:07:16.082 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 18:07:16.082 +04:00 DBG Done attempting to bind parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 18:07:16.083 +04:00 DBG Attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO' ...
2025-04-02 18:07:16.099 +04:00 DBG Done attempting to validate the bound parameter 'accountLoginDTO' of type 'offers.API.Models.AccountLoginDTO'.
2025-04-02 18:07:16.102 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:07:16.103 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 18:07:16.103 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:07:16.103 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 18:07:16.106 +04:00 INF Login attempt for kirvalidzedachi@gmail.com
2025-04-02 18:07:16.123 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .SingleOrDefault(acc => acc.Email == __Email_0)'
2025-04-02 18:07:16.157 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 18:07:16.161 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 18:07:16.262 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(2) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Email == @__Email_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 18:07:16.286 +04:00 DBG Creating DbConnection.
2025-04-02 18:07:16.286 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 18:07:16.286 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:07:16.287 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:07:16.287 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:07:16.287 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:07:16.291 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (3ms).
2025-04-02 18:07:16.293 +04:00 DBG Executing DbCommand [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 18:07:16.358 +04:00 INF Executed DbCommand (67ms) [Parameters=[@__Email_0='?' (Size = 255) (DbType = AnsiString)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Email] = @__Email_0
2025-04-02 18:07:16.383 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:07:16.411 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:07:16.413 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:07:16.421 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:07:16.422 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 62ms reading results.
2025-04-02 18:07:16.422 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:07:16.422 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:07:16.547 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 18:07:16.549 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 18:07:16.549 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 18:07:16.549 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 18:07:16.550 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 18:07:16.551 +04:00 INF Executing OkObjectResult, writing value of type 'offers.API.Models.LoginResponseDTO'.
2025-04-02 18:07:16.566 +04:00 INF Executed action offers.API.Controllers.AuthController.LogIn (offers.API) in 620.4378ms
2025-04-02 18:07:16.567 +04:00 INF Executed endpoint 'offers.API.Controllers.AuthController.LogIn (offers.API)'
2025-04-02 18:07:16.571 +04:00 DBG Connection ID "18230571306091282475" disconnecting.
2025-04-02 18:07:16.572 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:07:16.573 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:07:16.573 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 18:07:16.577 +04:00 INF Request finished HTTP/2 POST https://localhost:44346/api/Auth/login - 200 null application/json; charset=utf-8 862.2013ms
2025-04-02 18:07:38.934 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User/transactions - null null
2025-04-02 18:07:38.937 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transactions'
2025-04-02 18:07:38.938 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetMyTransactions (offers.API)' with route pattern 'api/User/transactions' is valid for the request path '/api/User/transactions'
2025-04-02 18:07:38.938 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetMyTransactions (offers.API)'
2025-04-02 18:07:38.938 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 18:07:39.003 +04:00 DBG Successfully validated the token.
2025-04-02 18:07:39.005 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 18:07:39.012 +04:00 DBG Authorization was successful.
2025-04-02 18:07:39.013 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetMyTransactions (offers.API)'
2025-04-02 18:07:39.018 +04:00 INF Route matched with {action = "GetMyTransactions", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMyTransactions(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 18:07:39.018 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 18:07:39.018 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 18:07:39.018 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 18:07:39.018 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 18:07:39.018 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 18:07:39.019 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 18:07:39.020 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:07:39.022 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 18:07:39.027 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:07:39.064 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 18:07:39.064 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:07:39.064 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 18:07:39.069 +04:00 DBG Compiling query expression: 
'DbSet<Transaction>()
    .Include(tran => tran.Offer)
    .Include(tran => tran.User)
    .Where(tran => tran.UserId == __accountId_0)'
2025-04-02 18:07:39.071 +04:00 DBG Including navigation: 'Transaction.Offer'.
2025-04-02 18:07:39.072 +04:00 DBG Including navigation: 'Transaction.User'.
2025-04-02 18:07:39.095 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Transaction>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
            1 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Offer.AccountId (int) Required FK Index, 7], [Property: Offer.ArchiveAt (DateTime) Required, 8], [Property: Offer.CategoryId (int) Required FK Index, 9], [Property: Offer.Count (int) Required, 10], [Property: Offer.CreatedAt (DateTime) Required, 11], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 12], [Property: Offer.IsArchived (bool) Required, 13], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 14], [Property: Offer.Price (decimal) Required, 15] }
            2 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 16], [Property: UserDetail.Balance (decimal) Required, 17], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 18], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 19] }
        SELECT t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId, o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, u.AccountId, u.Balance, u.FirstName, u.LastName
        FROM Transactions AS t
        INNER JOIN Offers AS o ON t.OfferId == o.Id
        INNER JOIN UserDetails AS u ON t.UserId == u.AccountId
        WHERE t.UserId == @__accountId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
            1 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Offer.AccountId (int) Required FK Index, 7], [Property: Offer.ArchiveAt (DateTime) Required, 8], [Property: Offer.CategoryId (int) Required FK Index, 9], [Property: Offer.Count (int) Required, 10], [Property: Offer.CreatedAt (DateTime) Required, 11], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 12], [Property: Offer.IsArchived (bool) Required, 13], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 14], [Property: Offer.Price (decimal) Required, 15] }
            2 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 16], [Property: UserDetail.Balance (decimal) Required, 17], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 18], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 19] }
        SELECT t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId, o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, u.AccountId, u.Balance, u.FirstName, u.LastName
        FROM Transactions AS t
        INNER JOIN Offers AS o ON t.OfferId == o.Id
        INNER JOIN UserDetails AS u ON t.UserId == u.AccountId
        WHERE t.UserId == @__accountId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Transaction entity;
        Offer entity;
        UserDetail entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Transaction instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Transaction);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Transaction.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Transaction)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]: 
                        {
                            return 
                            {
                                Transaction instance;
                                instance = new Transaction();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Count>k__BackingField = dataReader.GetInt32(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<OfferId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Paid>k__BackingField = dataReader.GetDecimal(4);
                                instance.<UserId>k__BackingField = dataReader.GetInt32(5);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Transaction)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            Offer instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(Offer);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(6) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (Offer)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(6);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(7);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(8);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(9);
                                instance.<Count>k__BackingField = dataReader.GetInt32(10);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(11);
                                instance.<Description>k__BackingField = dataReader.GetString(12);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(13);
                                instance.<Name>k__BackingField = dataReader.GetString(14);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(15);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        entity = 
        {
            MaterializationContext materializationContext3;
            IEntityType entityType3;
            UserDetail instance3;
            InternalEntityEntry entry3;
            bool hasNullKey3;
            materializationContext3 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance3 = default(UserDetail);
            entry3 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(16) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey3);
            !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
            {
                entityType3 = entry3.EntityType;
                return instance3 = (UserDetail)entry3.Entity;
            } : 
            {
                ISnapshot shadowSnapshot3;
                shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType3 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                instance3 = switch (entityType3)
                {
                    case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                        {
                            return 
                            {
                                UserDetail instance;
                                instance = new UserDetail();
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(16);
                                instance.<Balance>k__BackingField = dataReader.GetDecimal(17);
                                instance.<FirstName>k__BackingField = dataReader.GetString(18);
                                instance.<LastName>k__BackingField = dataReader.GetString(19);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext3.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(UserDetail)
                }
                ;
                entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType3, 
                    entity: instance3, 
                    snapshot: shadowSnapshot3);
                return instance3;
            } : default(void);
            return instance3;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Transaction, Transaction, Offer>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Transaction.Offer (Offer) ToPrincipal Offer Inverse: Transactions | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindNavigation("Offer")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: Offer.Transactions (List<Transaction>) Collection ToDependent Transaction Inverse: Offer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Transactions")], 
            fixup: (namelessParameter{11}, namelessParameter{12}) => 
            {
                namelessParameter{11}.<Offer>k__BackingField = namelessParameter{12};
                return [LIFTABLE Constant: ClrICollectionAccessor<Offer, List<Transaction>, Transaction> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Transactions").GetCollectionAccessor()].Add(
                    entity: namelessParameter{12}, 
                    value: namelessParameter{11}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        ShaperProcessingExpressionVisitor.IncludeReference<Transaction, Transaction, UserDetail>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Transaction.User (UserDetail) ToPrincipal UserDetail Inverse: Transactions | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindNavigation("User")], 
            inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Transactions (List<Transaction>) Collection ToDependent Transaction Inverse: User | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Transactions")], 
            fixup: (namelessParameter{16}, namelessParameter{17}) => 
            {
                namelessParameter{16}.<User>k__BackingField = namelessParameter{17};
                return [LIFTABLE Constant: ClrICollectionAccessor<UserDetail, List<Transaction>, Transaction> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Transactions").GetCollectionAccessor()].Add(
                    entity: namelessParameter{17}, 
                    value: namelessParameter{16}, 
                    forMaterialization: True);
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 18:07:39.114 +04:00 DBG Creating DbConnection.
2025-04-02 18:07:39.114 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 18:07:39.115 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:07:39.115 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:07:39.115 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:07:39.115 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:07:39.116 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:07:39.117 +04:00 DBG Executing DbCommand [Parameters=[@__accountId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[UserId] = @__accountId_0
2025-04-02 18:07:39.133 +04:00 INF Executed DbCommand (17ms) [Parameters=[@__accountId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[UserId] = @__accountId_0
2025-04-02 18:07:39.136 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:07:39.143 +04:00 DBG The navigation 'Transaction.Offer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:07:39.148 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:07:39.151 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:07:39.151 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:07:39.153 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:07:39.153 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 19ms reading results.
2025-04-02 18:07:39.153 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:07:39.153 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:07:39.187 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 18:07:39.188 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 18:07:39.188 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 18:07:39.188 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 18:07:39.188 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 18:07:39.188 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.TransactionResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 18:07:39.200 +04:00 INF Executed action offers.API.Controllers.UserController.GetMyTransactions (offers.API) in 181.3188ms
2025-04-02 18:07:39.200 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetMyTransactions (offers.API)'
2025-04-02 18:07:39.201 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:07:39.201 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:07:39.201 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 18:07:39.201 +04:00 DBG Connection ID "18230571306091282477" disconnecting.
2025-04-02 18:07:39.201 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User/transactions - 200 null application/json; charset=utf-8 267.3721ms
2025-04-02 18:08:23.152 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User/transactions/1 - null null
2025-04-02 18:08:23.157 +04:00 DBG 1 candidate(s) found for the request path '/api/User/transactions/1'
2025-04-02 18:08:23.158 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)' with route pattern 'api/User/transactions/{id}' is valid for the request path '/api/User/transactions/1'
2025-04-02 18:08:23.158 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)'
2025-04-02 18:08:23.158 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 18:08:23.163 +04:00 DBG Successfully validated the token.
2025-04-02 18:08:23.163 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 18:08:23.169 +04:00 DBG Authorization was successful.
2025-04-02 18:08:23.175 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)'
2025-04-02 18:08:23.184 +04:00 INF Route matched with {action = "GetMyTransaction", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetMyTransaction(Int32, System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 18:08:23.185 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 18:08:23.185 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 18:08:23.185 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 18:08:23.185 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 18:08:23.185 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 18:08:23.185 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 18:08:23.187 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:08:23.191 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 18:08:23.191 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-04-02 18:08:23.192 +04:00 DBG Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-04-02 18:08:23.194 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 18:08:23.194 +04:00 DBG Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-04-02 18:08:23.194 +04:00 DBG Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-04-02 18:08:23.195 +04:00 DBG Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-04-02 18:08:23.195 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:08:23.195 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 18:08:23.195 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:08:23.195 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 18:08:23.201 +04:00 DBG Compiling query expression: 
'DbSet<Transaction>()
    .Include(tran => tran.Offer)
    .Include(tran => tran.User)
    .SingleOrDefault(tran => tran.Id == __id_0)'
2025-04-02 18:08:23.201 +04:00 DBG Including navigation: 'Transaction.Offer'.
2025-04-02 18:08:23.202 +04:00 DBG Including navigation: 'Transaction.User'.
2025-04-02 18:08:23.218 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Transaction>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Transaction>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
                1 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Offer.AccountId (int) Required FK Index, 7], [Property: Offer.ArchiveAt (DateTime) Required, 8], [Property: Offer.CategoryId (int) Required FK Index, 9], [Property: Offer.Count (int) Required, 10], [Property: Offer.CreatedAt (DateTime) Required, 11], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 12], [Property: Offer.IsArchived (bool) Required, 13], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 14], [Property: Offer.Price (decimal) Required, 15] }
                2 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 16], [Property: UserDetail.Balance (decimal) Required, 17], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 18], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 19] }
            SELECT TOP(2) t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId, o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, u.AccountId, u.Balance, u.FirstName, u.LastName
            FROM Transactions AS t
            INNER JOIN Offers AS o ON t.OfferId == o.Id
            INNER JOIN UserDetails AS u ON t.UserId == u.AccountId
            WHERE t.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Transaction.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Transaction.Count (int) Required, 1], [Property: Transaction.CreatedAt (DateTime) Required, 2], [Property: Transaction.OfferId (int) Required FK Index, 3], [Property: Transaction.Paid (decimal) Required, 4], [Property: Transaction.UserId (int) Required FK Index, 5] }
                1 -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 6], [Property: Offer.AccountId (int) Required FK Index, 7], [Property: Offer.ArchiveAt (DateTime) Required, 8], [Property: Offer.CategoryId (int) Required FK Index, 9], [Property: Offer.Count (int) Required, 10], [Property: Offer.CreatedAt (DateTime) Required, 11], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 12], [Property: Offer.IsArchived (bool) Required, 13], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 14], [Property: Offer.Price (decimal) Required, 15] }
                2 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 16], [Property: UserDetail.Balance (decimal) Required, 17], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 18], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 19] }
            SELECT TOP(2) t.Id, t.Count, t.CreatedAt, t.OfferId, t.Paid, t.UserId, o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price, u.AccountId, u.Balance, u.FirstName, u.LastName
            FROM Transactions AS t
            INNER JOIN Offers AS o ON t.OfferId == o.Id
            INNER JOIN UserDetails AS u ON t.UserId == u.AccountId
            WHERE t.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Transaction entity;
            Offer entity;
            UserDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Transaction instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Transaction);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Transaction.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Transaction)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]: 
                            {
                                return 
                                {
                                    Transaction instance;
                                    instance = new Transaction();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<OfferId>k__BackingField = dataReader.GetInt32(3);
                                    instance.<Paid>k__BackingField = dataReader.GetDecimal(4);
                                    instance.<UserId>k__BackingField = dataReader.GetInt32(5);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Transaction | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Transaction)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Offer instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Offer);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(6) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Offer)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                            {
                                return 
                                {
                                    Offer instance;
                                    instance = new Offer();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(6);
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(7);
                                    instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(8);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(9);
                                    instance.<Count>k__BackingField = dataReader.GetInt32(10);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(11);
                                    instance.<Description>k__BackingField = dataReader.GetString(12);
                                    instance.<IsArchived>k__BackingField = dataReader.GetBoolean(13);
                                    instance.<Name>k__BackingField = dataReader.GetString(14);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(15);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Offer)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                UserDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(UserDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(16) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (UserDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.GetInt32(16);
                                    instance.<Balance>k__BackingField = dataReader.GetDecimal(17);
                                    instance.<FirstName>k__BackingField = dataReader.GetString(18);
                                    instance.<LastName>k__BackingField = dataReader.GetString(19);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Transaction, Transaction, Offer>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Transaction.Offer (Offer) ToPrincipal Offer Inverse: Transactions | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindNavigation("Offer")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Offer.Transactions (List<Transaction>) Collection ToDependent Transaction Inverse: Offer | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Transactions")], 
                fixup: (namelessParameter{11}, namelessParameter{12}) => 
                {
                    namelessParameter{11}.<Offer>k__BackingField = namelessParameter{12};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Offer, List<Transaction>, Transaction> | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindNavigation("Transactions").GetCollectionAccessor()].Add(
                        entity: namelessParameter{12}, 
                        value: namelessParameter{11}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Transaction, Transaction, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Transaction.User (UserDetail) ToPrincipal UserDetail Inverse: Transactions | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Transaction").FindNavigation("User")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Transactions (List<Transaction>) Collection ToDependent Transaction Inverse: User | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Transactions")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<User>k__BackingField = namelessParameter{17};
                    return [LIFTABLE Constant: ClrICollectionAccessor<UserDetail, List<Transaction>, Transaction> | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Transactions").GetCollectionAccessor()].Add(
                        entity: namelessParameter{17}, 
                        value: namelessParameter{16}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 18:08:23.233 +04:00 DBG Creating DbConnection.
2025-04-02 18:08:23.233 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 18:08:23.233 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:08:23.233 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:08:23.233 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:08:23.233 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:08:23.233 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:08:23.234 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[Id] = @__id_0
2025-04-02 18:08:23.263 +04:00 INF Executed DbCommand (29ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [t].[Id], [t].[Count], [t].[CreatedAt], [t].[OfferId], [t].[Paid], [t].[UserId], [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName]
FROM [Transactions] AS [t]
INNER JOIN [Offers] AS [o] ON [t].[OfferId] = [o].[Id]
INNER JOIN [UserDetails] AS [u] ON [t].[UserId] = [u].[AccountId]
WHERE [t].[Id] = @__id_0
2025-04-02 18:08:23.263 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Transaction' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:08:23.264 +04:00 DBG The navigation 'Transaction.Offer' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:08:23.264 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:08:23.264 +04:00 DBG The navigation 'Transaction.User' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:08:23.264 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:08:23.265 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:08:23.265 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 18:08:23.265 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:08:23.265 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:08:23.268 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 18:08:23.269 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 18:08:23.269 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 18:08:23.269 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 18:08:23.269 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 18:08:23.269 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.TransactionResponseModel'.
2025-04-02 18:08:23.270 +04:00 INF Executed action offers.API.Controllers.UserController.GetMyTransaction (offers.API) in 84.4746ms
2025-04-02 18:08:23.270 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetMyTransaction (offers.API)'
2025-04-02 18:08:23.270 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:08:23.270 +04:00 DBG Connection ID "18230571301796315187" disconnecting.
2025-04-02 18:08:23.271 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:08:23.271 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 18:08:23.271 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User/transactions/1 - 200 null application/json; charset=utf-8 123.9514ms
2025-04-02 18:08:30.634 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/User - null null
2025-04-02 18:08:30.634 +04:00 DBG 1 candidate(s) found for the request path '/api/User'
2025-04-02 18:08:30.634 +04:00 DBG Endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)' with route pattern 'api/User' is valid for the request path '/api/User'
2025-04-02 18:08:30.634 +04:00 DBG Request matched endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 18:08:30.635 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 18:08:30.635 +04:00 DBG Successfully validated the token.
2025-04-02 18:08:30.635 +04:00 DBG AuthenticationScheme: Bearer was successfully authenticated.
2025-04-02 18:08:30.637 +04:00 DBG Authorization was successful.
2025-04-02 18:08:30.638 +04:00 INF Executing endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 18:08:30.646 +04:00 INF Route matched with {action = "GetCurrentUser", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCurrentUser(System.Threading.CancellationToken) on controller offers.API.Controllers.UserController (offers.API).
2025-04-02 18:08:30.646 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 18:08:30.646 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 18:08:30.646 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 18:08:30.646 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 18:08:30.646 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 18:08:30.646 +04:00 DBG Executing controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 18:08:30.654 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:08:30.660 +04:00 DBG Executed controller factory for controller offers.API.Controllers.UserController (offers.API)
2025-04-02 18:08:30.660 +04:00 DBG Attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:08:30.660 +04:00 DBG Done attempting to bind parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 18:08:30.660 +04:00 DBG Attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:08:30.661 +04:00 DBG Done attempting to validate the bound parameter 'cancellationToken' of type 'System.Threading.CancellationToken'.
2025-04-02 18:08:30.665 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Include(acc => acc.UserDetail)
    .Include(acc => acc.CompanyDetail)
    .FirstOrDefault(acc => acc.Id == __id_0)'
2025-04-02 18:08:30.665 +04:00 DBG Including navigation: 'Account.UserDetail'.
2025-04-02 18:08:30.666 +04:00 DBG Including navigation: 'Account.CompanyDetail'.
2025-04-02 18:08:30.681 +04:00 DBG Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Account>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Account>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Account.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Account.Email (string) Required MaxLength(255) ANSI, 1], [Property: Account.PasswordHash (string) Required MaxLength(512) ANSI, 2], [Property: Account.Phone (string) Required MaxLength(50) ANSI, 3], [Property: Account.Role (AccountRole) Required MaxLength(50) ANSI, 4] }
                1 -> Dictionary<IProperty, int> { [Property: UserDetail.AccountId (int) Required PK FK AfterSave:Throw, 5], [Property: UserDetail.Balance (decimal) Required, 6], [Property: UserDetail.FirstName (string) Required MaxLength(100) ANSI, 7], [Property: UserDetail.LastName (string) Required MaxLength(100) ANSI, 8] }
                2 -> Dictionary<IProperty, int> { [Property: CompanyDetail.AccountId (int) Required PK FK AfterSave:Throw, 9], [Property: CompanyDetail.CompanyName (string) Required MaxLength(255) ANSI, 10], [Property: CompanyDetail.IsActive (bool) Required, 11] }
            SELECT TOP(1) a.Id, a.Email, a.PasswordHash, a.Phone, a.Role, u.AccountId, u.Balance, u.FirstName, u.LastName, c.AccountId, c.CompanyName, c.IsActive
            FROM Accounts AS a
            LEFT JOIN UserDetails AS u ON a.Id == u.AccountId
            LEFT JOIN CompanyDetails AS c ON a.Id == c.AccountId
            WHERE a.Id == @__id_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Account entity;
            UserDetail entity;
            CompanyDetail entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Account instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Account);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Account.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Account)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]: 
                            {
                                return 
                                {
                                    Account instance;
                                    instance = new Account();
                                    instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                    instance.<Email>k__BackingField = dataReader.GetString(1);
                                    instance.<PasswordHash>k__BackingField = dataReader.GetString(2);
                                    instance.<Phone>k__BackingField = dataReader.GetString(3);
                                    instance.<Role>k__BackingField = Invoke(((EnumToStringConverter<AccountRole>)((IReadOnlyProperty)[LIFTABLE Constant: Property: Account.Role (AccountRole) Required MaxLength(50) ANSI | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindProperty("Role")]).GetTypeMapping().Converter).ConvertFromProviderTyped, dataReader.GetString(4));
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Account | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Account)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                UserDetail instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(UserDetail);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: UserDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(5) ? default(object) : (object)dataReader.GetInt32(5) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (UserDetail)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]: 
                            {
                                return 
                                {
                                    UserDetail instance;
                                    instance = new UserDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(5) ? default(int) : dataReader.GetInt32(5);
                                    instance.<Balance>k__BackingField = dataReader.IsDBNull(6) ? default(decimal) : dataReader.GetDecimal(6);
                                    instance.<FirstName>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<LastName>k__BackingField = dataReader.IsDBNull(8) ? default(string) : dataReader.GetString(8);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: UserDetail | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(UserDetail)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            entity = 
            {
                MaterializationContext materializationContext3;
                IEntityType entityType3;
                CompanyDetail instance3;
                InternalEntityEntry entry3;
                bool hasNullKey3;
                materializationContext3 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance3 = default(CompanyDetail);
                entry3 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: CompanyDetail.AccountId PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindPrimaryKey()], 
                    keyValues: new object[]{ dataReader.IsDBNull(9) ? default(object) : (object)dataReader.GetInt32(9) }, 
                    throwOnNullKey: False, 
                    hasNullKey: hasNullKey3);
                !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                {
                    entityType3 = entry3.EntityType;
                    return instance3 = (CompanyDetail)entry3.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot3;
                    shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType3 = [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")];
                    instance3 = switch (entityType3)
                    {
                        case [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]: 
                            {
                                return 
                                {
                                    CompanyDetail instance;
                                    instance = new CompanyDetail();
                                    instance.<AccountId>k__BackingField = dataReader.IsDBNull(9) ? default(int) : dataReader.GetInt32(9);
                                    instance.<CompanyName>k__BackingField = dataReader.IsDBNull(10) ? default(string) : dataReader.GetString(10);
                                    instance.<IsActive>k__BackingField = dataReader.IsDBNull(11) ? default(bool) : dataReader.GetBoolean(11);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext3.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: CompanyDetail | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(CompanyDetail)
                    }
                    ;
                    entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType3, 
                        entity: instance3, 
                        snapshot: shadowSnapshot3);
                    return instance3;
                } : default(void);
                return instance3;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, UserDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.UserDetail (UserDetail) ToDependent UserDetail Inverse: Account | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("UserDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: UserDetail.Account (Account) ToPrincipal Account Inverse: UserDetail | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("offers.Domain.Models.UserDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{12}, namelessParameter{13}) => 
                {
                    namelessParameter{12}.<UserDetail>k__BackingField = namelessParameter{13};
                    return namelessParameter{13}.<Account>k__BackingField = namelessParameter{12};
                }, 
                trackingQuery: True);
            ShaperProcessingExpressionVisitor.IncludeReference<Account, Account, CompanyDetail>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Account.CompanyDetail (CompanyDetail) ToDependent CompanyDetail Inverse: Account | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("offers.Domain.Models.Account").FindNavigation("CompanyDetail")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: CompanyDetail.Account (Account) ToPrincipal Account Inverse: CompanyDetail | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("offers.Domain.Models.CompanyDetail").FindNavigation("Account")], 
                fixup: (namelessParameter{16}, namelessParameter{17}) => 
                {
                    namelessParameter{16}.<CompanyDetail>k__BackingField = namelessParameter{17};
                    return namelessParameter{17}.<Account>k__BackingField = namelessParameter{16};
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: offers.Persistance.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-04-02 18:08:30.698 +04:00 DBG Creating DbConnection.
2025-04-02 18:08:30.698 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 18:08:30.698 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:08:30.698 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:08:30.698 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:08:30.699 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:08:30.699 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:08:30.699 +04:00 DBG Executing DbCommand [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 18:08:30.729 +04:00 INF Executed DbCommand (30ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[Email], [a].[PasswordHash], [a].[Phone], [a].[Role], [u].[AccountId], [u].[Balance], [u].[FirstName], [u].[LastName], [c].[AccountId], [c].[CompanyName], [c].[IsActive]
FROM [Accounts] AS [a]
LEFT JOIN [UserDetails] AS [u] ON [a].[Id] = [u].[AccountId]
LEFT JOIN [CompanyDetails] AS [c] ON [a].[Id] = [c].[AccountId]
WHERE [a].[Id] = @__id_0
2025-04-02 18:08:30.729 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Account' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:08:30.730 +04:00 DBG The navigation 'Account.UserDetail' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:08:30.730 +04:00 DBG Context 'ApplicationDbContext' started tracking 'UserDetail' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:08:30.731 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:08:30.731 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 18:08:30.731 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:08:30.731 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:08:30.744 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 18:08:30.744 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 18:08:30.744 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 18:08:30.744 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 18:08:30.744 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 18:08:30.744 +04:00 INF Executing OkObjectResult, writing value of type 'offers.Application.Models.UserResponseModel'.
2025-04-02 18:08:30.747 +04:00 INF Executed action offers.API.Controllers.UserController.GetCurrentUser (offers.API) in 100.9677ms
2025-04-02 18:08:30.747 +04:00 INF Executed endpoint 'offers.API.Controllers.UserController.GetCurrentUser (offers.API)'
2025-04-02 18:08:30.747 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:08:30.748 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:08:30.748 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 18:08:30.748 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/User - 200 null application/json; charset=utf-8 113.9427ms
2025-04-02 18:08:30.748 +04:00 DBG Connection ID "18086456105130524699" disconnecting.
2025-04-02 18:22:24.807 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 18:22:24.984 +04:00 INF starting web host
2025-04-02 18:22:25.221 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 18:22:26.166 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 18:22:26.167 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 18:22:26.267 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:22:26.449 +04:00 DBG Creating DbConnection.
2025-04-02 18:22:26.527 +04:00 DBG Created DbConnection. (74ms).
2025-04-02 18:22:26.530 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:26.544 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:26.968 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:26.972 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 18:22:26.983 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-04-02 18:22:26.985 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (13ms).
2025-04-02 18:22:26.991 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:22:27.021 +04:00 INF Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:22:27.023 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.035 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (8ms).
2025-04-02 18:22:27.035 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.037 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.038 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 18:22:27.040 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 18:22:27.041 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:22:27.041 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:22:27.042 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 18:22:27.077 +04:00 INF Executed DbCommand (35ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 18:22:27.151 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 18:22:27.156 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 18:22:27.157 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 18:22:27.158 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 18:22:27.159 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (1ms).
2025-04-02 18:22:27.159 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 18:22:27.166 +04:00 INF Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 18:22:27.168 +04:00 DBG Committing transaction.
2025-04-02 18:22:27.170 +04:00 DBG Committed transaction.
2025-04-02 18:22:27.172 +04:00 DBG Disposing transaction.
2025-04-02 18:22:27.174 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 18:22:27.174 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 18:22:27.176 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 18:22:27.178 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 18:22:27.178 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-04-02 18:22:27.178 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:22:27.181 +04:00 INF Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:22:27.181 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 18:22:27.181 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:22:27.181 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:22:27.182 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 18:22:27.182 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 18:22:27.184 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:22:27.184 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:22:27.184 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:22:27.185 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 18:22:27.189 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 18:22:27.191 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.195 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 18:22:27.201 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 18:22:27.201 +04:00 DBG Committing transaction.
2025-04-02 18:22:27.202 +04:00 DBG Committed transaction.
2025-04-02 18:22:27.202 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 18:22:27.202 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:22:27.202 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:22:27.202 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 18:22:27.206 +04:00 INF Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 18:22:27.206 +04:00 DBG Disposing transaction.
2025-04-02 18:22:27.206 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.207 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:22:27.299 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 18:22:27.617 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 18:22:27.676 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.676 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.676 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:22:27.676 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:22:27.676 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:22:27.676 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 18:22:27.681 +04:00 INF Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 18:22:27.683 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.684 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 18:22:27.684 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.684 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:22:27.685 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:22:27.687 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.688 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 18:22:27.693 +04:00 DBG Hosting starting
2025-04-02 18:22:27.730 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 18:22:27.746 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 18:22:27.756 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 18:22:27.769 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 18:22:27.772 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 18:22:27.773 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 18:22:27.775 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 18:22:27.780 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 18:22:27.781 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 18:22:27.783 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 18:22:27.784 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 18:22:27.810 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:22:27.818 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.UtcNow)'
2025-04-02 18:22:27.898 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 18:22:27.922 +04:00 DBG Creating DbConnection.
2025-04-02 18:22:27.923 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 18:22:27.926 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.932 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:27.933 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:22:27.933 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:22:27.933 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:22:27.934 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 18:22:27.970 +04:00 INF Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 18:22:28.049 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:22:28.102 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 18:22:28.102 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 18:22:28.102 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 18:22:28.102 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 18:22:28.143 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:28.145 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 174ms reading results.
2025-04-02 18:22:28.148 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:28.149 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:22:28.151 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:22:28.152 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:22:28.152 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 18:22:28.212 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 18:22:28.446 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 18:22:28.447 +04:00 INF Hosting environment: Development
2025-04-02 18:22:28.447 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 18:22:28.448 +04:00 DBG Hosting started
2025-04-02 18:22:28.518 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 18:22:28.544 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 18:22:28.545 +04:00 DBG Request did not match any endpoints
2025-04-02 18:22:28.663 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 18:22:28.666 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 18:22:28.752 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 18:22:28.753 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 18:22:29.054 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 18:22:29.060 +04:00 DBG Connection ID "18158513703463419986" disconnecting.
2025-04-02 18:22:29.060 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 18:22:29.063 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 861.4271ms
2025-04-02 18:22:29.081 +04:00 DBG Connection ID "18230571293206380614" disconnecting.
2025-04-02 18:22:29.081 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 13.8546ms
2025-04-02 18:22:29.354 +04:00 DBG Connection ID "18374686481282236486" disconnecting.
2025-04-02 18:22:29.365 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 311.9801ms
2025-04-02 18:22:29.458 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 18:22:29.459 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 18:22:29.460 +04:00 DBG Request did not match any endpoints
2025-04-02 18:22:29.525 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 66.6868ms
2025-04-02 18:27:28.242 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:27:28.250 +04:00 DBG Creating DbConnection.
2025-04-02 18:27:28.250 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 18:27:28.250 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:27:28.250 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:27:28.251 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:27:28.251 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:27:28.251 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:27:28.251 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 18:27:28.258 +04:00 INF Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 18:27:28.259 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:27:28.260 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:27:28.260 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 1ms reading results.
2025-04-02 18:27:28.260 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:27:28.260 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:27:28.260 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:27:28.261 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:27:28.261 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 18:44:25.075 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 18:44:25.236 +04:00 INF starting web host
2025-04-02 18:44:25.482 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 18:44:26.377 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 18:44:26.378 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 18:44:26.478 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:44:26.679 +04:00 DBG Creating DbConnection.
2025-04-02 18:44:26.749 +04:00 DBG Created DbConnection. (68ms).
2025-04-02 18:44:26.753 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:26.768 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:27.181 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:27.188 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 18:44:27.194 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-04-02 18:44:27.196 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (8ms).
2025-04-02 18:44:27.205 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:44:27.236 +04:00 INF Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:44:27.239 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:27.248 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (5ms).
2025-04-02 18:44:27.248 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:27.250 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:27.252 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 18:44:27.258 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 18:44:27.258 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:44:27.258 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:44:27.259 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 18:44:27.292 +04:00 INF Executed DbCommand (33ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 18:44:27.415 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 18:44:27.432 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 18:44:27.435 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 18:44:27.435 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 18:44:27.437 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (2ms).
2025-04-02 18:44:27.437 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 18:44:27.444 +04:00 INF Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 18:44:27.446 +04:00 DBG Committing transaction.
2025-04-02 18:44:27.452 +04:00 DBG Committed transaction.
2025-04-02 18:44:27.456 +04:00 DBG Disposing transaction.
2025-04-02 18:44:27.459 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 18:44:27.459 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 18:44:27.462 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 18:44:27.462 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 18:44:27.462 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 18:44:27.462 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:44:27.463 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 18:44:27.464 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 18:44:27.464 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:44:27.464 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:44:27.464 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 18:44:27.465 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 18:44:27.472 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:44:27.472 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:44:27.472 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:44:27.473 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 18:44:27.478 +04:00 INF Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 18:44:27.482 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:27.486 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 18:44:27.498 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 18:44:27.499 +04:00 DBG Committing transaction.
2025-04-02 18:44:27.500 +04:00 DBG Committed transaction.
2025-04-02 18:44:27.500 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 18:44:27.501 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:44:27.501 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 18:44:27.501 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 18:44:27.506 +04:00 INF Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 18:44:27.506 +04:00 DBG Disposing transaction.
2025-04-02 18:44:27.506 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:27.507 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:44:27.642 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 18:44:27.980 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 18:44:28.048 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:28.048 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:28.048 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:44:28.048 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:44:28.048 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:44:28.049 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 18:44:28.057 +04:00 INF Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 18:44:28.060 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:28.060 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 18:44:28.060 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:28.060 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:44:28.063 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:44:28.065 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:28.067 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 18:44:28.076 +04:00 DBG Hosting starting
2025-04-02 18:44:28.109 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 18:44:28.145 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 18:44:28.161 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 18:44:28.174 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 18:44:28.178 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 18:44:28.179 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 18:44:28.181 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 18:44:28.183 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 18:44:28.186 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 18:44:28.189 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 18:44:28.190 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 18:44:28.220 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:44:28.231 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.UtcNow)'
2025-04-02 18:44:28.318 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 18:44:28.344 +04:00 DBG Creating DbConnection.
2025-04-02 18:44:28.345 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 18:44:28.348 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:28.351 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:28.353 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:44:28.353 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:44:28.353 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:44:28.354 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 18:44:28.377 +04:00 INF Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 18:44:28.452 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:44:28.573 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 18:44:28.574 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 18:44:28.574 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 18:44:28.574 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 18:44:28.596 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:28.598 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 219ms reading results.
2025-04-02 18:44:28.616 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:28.617 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (1ms).
2025-04-02 18:44:28.620 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:44:28.621 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:28.621 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 18:44:28.675 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 18:44:28.976 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 18:44:28.976 +04:00 INF Hosting environment: Development
2025-04-02 18:44:28.977 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 18:44:28.977 +04:00 DBG Hosting started
2025-04-02 18:44:29.173 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 18:44:29.214 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 18:44:29.215 +04:00 DBG Request did not match any endpoints
2025-04-02 18:44:29.398 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 18:44:29.406 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 18:44:29.531 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 18:44:29.531 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 18:44:29.545 +04:00 DBG Connection ID "17942340925644603457" disconnecting.
2025-04-02 18:44:29.548 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 890.3403ms
2025-04-02 18:44:29.569 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 18:44:29.599 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 25.8446ms
2025-04-02 18:44:29.625 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 18:44:29.831 +04:00 DBG Connection ID "18374686494167138348" disconnecting.
2025-04-02 18:44:29.875 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 249.9698ms
2025-04-02 18:44:29.987 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 18:44:29.991 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 18:44:29.992 +04:00 DBG Request did not match any endpoints
2025-04-02 18:44:30.066 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 79.3641ms
2025-04-02 18:44:44.496 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Guest/categories - null null
2025-04-02 18:44:44.506 +04:00 DBG 1 candidate(s) found for the request path '/api/Guest/categories'
2025-04-02 18:44:44.512 +04:00 DBG Endpoint 'offers.API.Controllers.GuestController.GetAllCategoriesAsync (offers.API)' with route pattern 'api/Guest/categories' is valid for the request path '/api/Guest/categories'
2025-04-02 18:44:44.514 +04:00 DBG Request matched endpoint 'offers.API.Controllers.GuestController.GetAllCategoriesAsync (offers.API)'
2025-04-02 18:44:44.522 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 18:44:44.623 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 18:44:44.626 +04:00 INF Executing endpoint 'offers.API.Controllers.GuestController.GetAllCategoriesAsync (offers.API)'
2025-04-02 18:44:44.654 +04:00 INF Route matched with {action = "GetAllCategories", controller = "Guest"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategoriesAsync(System.Threading.CancellationToken) on controller offers.API.Controllers.GuestController (offers.API).
2025-04-02 18:44:44.655 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 18:44:44.656 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 18:44:44.656 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 18:44:44.657 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 18:44:44.657 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 18:44:44.659 +04:00 DBG Executing controller factory for controller offers.API.Controllers.GuestController (offers.API)
2025-04-02 18:44:44.722 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:44:44.724 +04:00 DBG Executed controller factory for controller offers.API.Controllers.GuestController (offers.API)
2025-04-02 18:44:44.737 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:44:44.742 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 18:44:44.742 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:44:44.747 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 18:44:44.766 +04:00 DBG Compiling query expression: 
'DbSet<Category>()'
2025-04-02 18:44:44.784 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.Description (string) MaxLength(1000) ANSI, 1], [Property: Category.Name (string) Required MaxLength(255) ANSI, 2] }
        SELECT c.Id, c.Description, c.Name
        FROM Categories AS c, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(1) ? default(string) : dataReader.GetString(1);
                                instance.<Name>k__BackingField = dataReader.GetString(2);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 18:44:44.793 +04:00 DBG Creating DbConnection.
2025-04-02 18:44:44.793 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 18:44:44.793 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:44.794 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:44.794 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:44:44.794 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:44:44.794 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:44:44.795 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2025-04-02 18:44:44.813 +04:00 INF Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[Name]
FROM [Categories] AS [c]
2025-04-02 18:44:44.821 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:44:44.830 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:44.830 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 17ms reading results.
2025-04-02 18:44:44.831 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:44.831 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:44:44.920 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 18:44:44.923 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 18:44:44.923 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 18:44:44.924 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 18:44:44.925 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 18:44:44.925 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.CategoryResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 18:44:44.940 +04:00 INF Executed action offers.API.Controllers.GuestController.GetAllCategoriesAsync (offers.API) in 276.9567ms
2025-04-02 18:44:44.941 +04:00 INF Executed endpoint 'offers.API.Controllers.GuestController.GetAllCategoriesAsync (offers.API)'
2025-04-02 18:44:44.945 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:44:44.945 +04:00 DBG Connection ID "17870283331606675476" disconnecting.
2025-04-02 18:44:44.946 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:44:44.946 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 18:44:44.951 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Guest/categories - 200 null application/json; charset=utf-8 455.2022ms
2025-04-02 18:45:07.844 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/api/Guest/offers - null null
2025-04-02 18:45:07.848 +04:00 DBG 1 candidate(s) found for the request path '/api/Guest/offers'
2025-04-02 18:45:07.849 +04:00 DBG Endpoint 'offers.API.Controllers.GuestController.GetAllOfferAsync (offers.API)' with route pattern 'api/Guest/offers' is valid for the request path '/api/Guest/offers'
2025-04-02 18:45:07.849 +04:00 DBG Request matched endpoint 'offers.API.Controllers.GuestController.GetAllOfferAsync (offers.API)'
2025-04-02 18:45:07.850 +04:00 DBG Static files was skipped as the request already matched an endpoint.
2025-04-02 18:45:07.858 +04:00 DBG AuthenticationScheme: Bearer was not authenticated.
2025-04-02 18:45:07.858 +04:00 INF Executing endpoint 'offers.API.Controllers.GuestController.GetAllOfferAsync (offers.API)'
2025-04-02 18:45:07.865 +04:00 INF Route matched with {action = "GetAllOffer", controller = "Guest"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllOfferAsync(System.Threading.CancellationToken) on controller offers.API.Controllers.GuestController (offers.API).
2025-04-02 18:45:07.866 +04:00 DBG Execution plan of authorization filters (in the following order): ["None"]
2025-04-02 18:45:07.866 +04:00 DBG Execution plan of resource filters (in the following order): ["None"]
2025-04-02 18:45:07.866 +04:00 DBG Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-04-02 18:45:07.866 +04:00 DBG Execution plan of exception filters (in the following order): ["None"]
2025-04-02 18:45:07.867 +04:00 DBG Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-04-02 18:45:07.867 +04:00 DBG Executing controller factory for controller offers.API.Controllers.GuestController (offers.API)
2025-04-02 18:45:07.871 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 18:45:07.873 +04:00 DBG Executed controller factory for controller offers.API.Controllers.GuestController (offers.API)
2025-04-02 18:45:07.874 +04:00 DBG Attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:45:07.874 +04:00 DBG Done attempting to bind parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 18:45:07.874 +04:00 DBG Attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken' ...
2025-04-02 18:45:07.874 +04:00 DBG Done attempting to validate the bound parameter 'cancellation' of type 'System.Threading.CancellationToken'.
2025-04-02 18:45:07.877 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => !(off.IsArchived))'
2025-04-02 18:45:07.887 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE Not(o.IsArchived)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE Not(o.IsArchived), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 18:45:07.892 +04:00 DBG Creating DbConnection.
2025-04-02 18:45:07.892 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 18:45:07.893 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:45:07.893 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:45:07.893 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 18:45:07.893 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:45:07.894 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 18:45:07.894 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[IsArchived] = CAST(0 AS bit)
2025-04-02 18:45:07.912 +04:00 INF Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[IsArchived] = CAST(0 AS bit)
2025-04-02 18:45:07.913 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:45:07.914 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 18:45:07.916 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:45:07.916 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 18:45:07.916 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:45:07.916 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 18:45:07.932 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 18:45:07.933 +04:00 DBG No information found on request to perform content negotiation.
2025-04-02 18:45:07.933 +04:00 DBG Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-04-02 18:45:07.933 +04:00 DBG Attempting to select the first formatter in the output formatters list which can write the result.
2025-04-02 18:45:07.933 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 18:45:07.933 +04:00 INF Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[offers.Application.Models.OfferResponseModel, offers.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-04-02 18:45:07.943 +04:00 INF Executed action offers.API.Controllers.GuestController.GetAllOfferAsync (offers.API) in 76.168ms
2025-04-02 18:45:07.943 +04:00 INF Executed endpoint 'offers.API.Controllers.GuestController.GetAllOfferAsync (offers.API)'
2025-04-02 18:45:07.944 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 18:45:07.944 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 18:45:07.944 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 18:45:07.945 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/api/Guest/offers - 200 null application/json; charset=utf-8 100.7496ms
2025-04-02 18:45:07.945 +04:00 DBG Connection ID "18086456109425492027" disconnecting.
2025-04-02 19:57:40.764 +04:00 DBG Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-04-02 19:57:40.950 +04:00 INF starting web host
2025-04-02 19:57:41.177 +04:00 DBG An 'IServiceProvider' was created for internal use by Entity Framework.
2025-04-02 19:57:42.052 +04:00 WRN No store type was specified for the decimal property 'Price' on entity type 'Offer'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 19:57:42.053 +04:00 WRN No store type was specified for the decimal property 'Balance' on entity type 'UserDetail'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-04-02 19:57:42.139 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 19:57:42.298 +04:00 DBG Creating DbConnection.
2025-04-02 19:57:42.392 +04:00 DBG Created DbConnection. (91ms).
2025-04-02 19:57:42.394 +04:00 DBG Migrating using database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:42.413 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:42.855 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:42.859 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 19:57:42.866 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (4ms).
2025-04-02 19:57:42.868 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (9ms).
2025-04-02 19:57:42.874 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 19:57:42.920 +04:00 INF Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 19:57:42.924 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:42.940 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (9ms).
2025-04-02 19:57:42.940 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:42.943 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:42.944 +04:00 INF Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-04-02 19:57:42.952 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 19:57:42.953 +04:00 DBG Created DbCommand for 'ExecuteScalar' (1ms).
2025-04-02 19:57:42.954 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (1ms).
2025-04-02 19:57:42.955 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 19:57:43.000 +04:00 INF Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-04-02 19:57:43.092 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 19:57:43.097 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 19:57:43.099 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 19:57:43.099 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 19:57:43.103 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (4ms).
2025-04-02 19:57:43.104 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 19:57:43.110 +04:00 INF Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-04-02 19:57:43.113 +04:00 DBG Committing transaction.
2025-04-02 19:57:43.119 +04:00 DBG Committed transaction.
2025-04-02 19:57:43.121 +04:00 DBG Disposing transaction.
2025-04-02 19:57:43.124 +04:00 DBG Beginning transaction with isolation level 'Unspecified'.
2025-04-02 19:57:43.125 +04:00 DBG Began transaction with isolation level 'ReadCommitted'.
2025-04-02 19:57:43.128 +04:00 DBG Creating DbCommand for 'ExecuteNonQuery'.
2025-04-02 19:57:43.128 +04:00 DBG Created DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 19:57:43.128 +04:00 DBG Initialized DbCommand for 'ExecuteNonQuery' (0ms).
2025-04-02 19:57:43.128 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 19:57:43.130 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-04-02 19:57:43.130 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 19:57:43.130 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 19:57:43.130 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 19:57:43.130 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 19:57:43.131 +04:00 INF Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-04-02 19:57:43.133 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 19:57:43.133 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 19:57:43.134 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 19:57:43.134 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 19:57:43.145 +04:00 INF Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-04-02 19:57:43.148 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:43.150 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 2ms reading results.
2025-04-02 19:57:43.162 +04:00 INF No migrations were applied. The database is already up to date.
2025-04-02 19:57:43.162 +04:00 DBG Committing transaction.
2025-04-02 19:57:43.163 +04:00 DBG Committed transaction.
2025-04-02 19:57:43.163 +04:00 DBG Creating DbCommand for 'ExecuteScalar'.
2025-04-02 19:57:43.163 +04:00 DBG Created DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 19:57:43.164 +04:00 DBG Initialized DbCommand for 'ExecuteScalar' (0ms).
2025-04-02 19:57:43.164 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 19:57:43.179 +04:00 INF Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-04-02 19:57:43.179 +04:00 DBG Disposing transaction.
2025-04-02 19:57:43.179 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:43.180 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 19:57:43.261 +04:00 DBG Compiling query expression: 
'DbSet<Account>()
    .Any(x => (int)x.Role == 2)'
2025-04-02 19:57:43.602 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<bool>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin')) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> 0
        SELECT EXISTS (
            SELECT 1
            FROM Accounts AS a
            WHERE a.Role == 'Admin'), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        bool? value1;
        value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
        return (bool)value1;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)
    .Single()'
2025-04-02 19:57:43.670 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:43.670 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:43.670 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 19:57:43.670 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 19:57:43.670 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 19:57:43.671 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 19:57:43.711 +04:00 INF Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Accounts] AS [a]
        WHERE [a].[Role] = 'Admin') THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-04-02 19:57:43.715 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:43.715 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 3ms reading results.
2025-04-02 19:57:43.716 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:43.716 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 19:57:43.719 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 19:57:43.722 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:43.724 +04:00 DBG Disposed connection to database '' on server '' (1ms).
2025-04-02 19:57:43.731 +04:00 DBG Hosting starting
2025-04-02 19:57:43.791 +04:00 INF User profile is available. Using 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-04-02 19:57:43.825 +04:00 DBG Reading data from file 'C:\Users\misho\AppData\Local\ASP.NET\DataProtection-Keys\key-557b37cc-37f6-47ec-b065-df0e1794c732.xml'.
2025-04-02 19:57:43.844 +04:00 DBG Found key {557b37cc-37f6-47ec-b065-df0e1794c732}.
2025-04-02 19:57:43.870 +04:00 DBG Considering key {557b37cc-37f6-47ec-b065-df0e1794c732} with expiration date 2025-06-29 10:17:47Z as default key.
2025-04-02 19:57:43.877 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 19:57:43.878 +04:00 DBG Decrypting secret element using Windows DPAPI.
2025-04-02 19:57:43.880 +04:00 DBG Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-04-02 19:57:43.885 +04:00 DBG Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-04-02 19:57:43.892 +04:00 DBG Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-04-02 19:57:43.894 +04:00 DBG Using key {557b37cc-37f6-47ec-b065-df0e1794c732} as the default key.
2025-04-02 19:57:43.896 +04:00 DBG Key ring with default key {557b37cc-37f6-47ec-b065-df0e1794c732} was loaded during application startup.
2025-04-02 19:57:43.992 +04:00 DBG Entity Framework Core 9.0.3 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.3' with options: EngineType=SqlServer 
2025-04-02 19:57:44.015 +04:00 DBG Compiling query expression: 
'DbSet<Offer>()
    .Where(off => off.ArchiveAt <= DateTime.UtcNow)'
2025-04-02 19:57:44.139 +04:00 DBG Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Offer>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE()) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Offer.Id (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Offer.AccountId (int) Required FK Index, 1], [Property: Offer.ArchiveAt (DateTime) Required, 2], [Property: Offer.CategoryId (int) Required FK Index, 3], [Property: Offer.Count (int) Required, 4], [Property: Offer.CreatedAt (DateTime) Required, 5], [Property: Offer.Description (string) Required MaxLength(1000) ANSI, 6], [Property: Offer.IsArchived (bool) Required, 7], [Property: Offer.Name (string) Required MaxLength(255) ANSI, 8], [Property: Offer.Price (decimal) Required, 9] }
        SELECT o.Id, o.AccountId, o.ArchiveAt, o.CategoryId, o.Count, o.CreatedAt, o.Description, o.IsArchived, o.Name, o.Price
        FROM Offers AS o
        WHERE o.ArchiveAt <= GETUTCDATE(), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Offer entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Offer instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Offer);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Offer.Id PK | Resolver: c => c.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Offer)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]: 
                        {
                            return 
                            {
                                Offer instance;
                                instance = new Offer();
                                instance.<Id>k__BackingField = dataReader.GetInt32(0);
                                instance.<AccountId>k__BackingField = dataReader.GetInt32(1);
                                instance.<ArchiveAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(3);
                                instance.<Count>k__BackingField = dataReader.GetInt32(4);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(5);
                                instance.<Description>k__BackingField = dataReader.GetString(6);
                                instance.<IsArchived>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(9);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Offer | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("offers.Domain.Models.Offer")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Offer)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: offers.Persistance.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-04-02 19:57:44.158 +04:00 DBG Creating DbConnection.
2025-04-02 19:57:44.158 +04:00 DBG Created DbConnection. (0ms).
2025-04-02 19:57:44.160 +04:00 DBG Opening connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:44.163 +04:00 DBG Opened connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:44.164 +04:00 DBG Creating DbCommand for 'ExecuteReader'.
2025-04-02 19:57:44.164 +04:00 DBG Created DbCommand for 'ExecuteReader' (0ms).
2025-04-02 19:57:44.164 +04:00 DBG Initialized DbCommand for 'ExecuteReader' (0ms).
2025-04-02 19:57:44.165 +04:00 DBG Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 19:57:44.281 +04:00 INF Executed DbCommand (116ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[Id], [o].[AccountId], [o].[ArchiveAt], [o].[CategoryId], [o].[Count], [o].[CreatedAt], [o].[Description], [o].[IsArchived], [o].[Name], [o].[Price]
FROM [Offers] AS [o]
WHERE [o].[ArchiveAt] <= GETUTCDATE()
2025-04-02 19:57:44.509 +04:00 DBG Context 'ApplicationDbContext' started tracking 'Offer' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-04-02 19:57:44.636 +04:00 DBG Loaded hosting startup assembly offers.API
2025-04-02 19:57:44.636 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-04-02 19:57:44.636 +04:00 DBG Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-04-02 19:57:44.636 +04:00 DBG Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-04-02 19:57:44.637 +04:00 DBG Closing data reader to 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:44.639 +04:00 DBG A data reader for 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' is being disposed after spending 357ms reading results.
2025-04-02 19:57:44.642 +04:00 DBG Closing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:44.642 +04:00 DBG Closed connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS' (0ms).
2025-04-02 19:57:44.674 +04:00 DBG 'ApplicationDbContext' disposed.
2025-04-02 19:57:44.674 +04:00 DBG Disposing connection to database 'OffersDb' on server 'DESKTOP-T9J7KFM\SQLEXPRESS'.
2025-04-02 19:57:44.674 +04:00 DBG Disposed connection to database '' on server '' (0ms).
2025-04-02 19:57:44.780 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/index.html - null null
2025-04-02 19:57:45.060 +04:00 INF Application started. Press Ctrl+C to shut down.
2025-04-02 19:57:45.060 +04:00 INF Hosting environment: Development
2025-04-02 19:57:45.060 +04:00 INF Content root path: C:\Users\misho\Desktop\Project\offers.itacademy.ge\offers.API
2025-04-02 19:57:45.061 +04:00 DBG Hosting started
2025-04-02 19:57:45.394 +04:00 DBG Wildcard detected, all requests with hosts will be allowed.
2025-04-02 19:57:45.419 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.422 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.424 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.451 +04:00 DBG No candidates found for the request path '/swagger/index.html'
2025-04-02 19:57:45.452 +04:00 DBG Request did not match any endpoints
2025-04-02 19:57:45.456 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.457 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.457 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.458 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.458 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.458 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.458 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.458 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.458 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.555 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.555 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.555 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.578 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.578 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.578 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.579 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.579 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.579 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.579 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.579 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.579 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.590 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.590 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.590 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.593 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.593 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.593 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.594 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.594 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.594 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.594 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.597 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.597 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.604 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.604 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.604 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.606 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.607 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.607 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.607 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.607 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.607 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.607 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.607 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.607 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.607 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.608 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.608 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.608 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.608 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.608 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.642 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:45.642 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:45.642 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:45.688 +04:00 DBG Response markup is scheduled to include Browser Link script injection.
2025-04-02 19:57:45.690 +04:00 DBG Response markup is scheduled to include browser refresh script injection.
2025-04-02 19:57:45.832 +04:00 DBG Response markup was updated to include Browser Link script injection.
2025-04-02 19:57:45.833 +04:00 DBG Response markup was updated to include browser refresh script injection.
2025-04-02 19:57:45.865 +04:00 DBG Connection ID "18374686494167138352" disconnecting.
2025-04-02 19:57:45.867 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/index.html - 200 null text/html;charset=utf-8 1087.8297ms
2025-04-02 19:57:45.970 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_vs/browserLink - null null
2025-04-02 19:57:45.979 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - null null
2025-04-02 19:57:45.992 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_framework/aspnetcore-browser-refresh.js - 200 13772 application/javascript; charset=utf-8 10.8241ms
2025-04-02 19:57:46.080 +04:00 DBG Connection ID "17942340925644603461" disconnecting.
2025-04-02 19:57:46.088 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/_vs/browserLink - 200 null text/javascript; charset=UTF-8 118.1853ms
2025-04-02 19:57:46.187 +04:00 INF Request starting HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - null null
2025-04-02 19:57:46.188 +04:00 DBG No candidates found for the request path '/swagger/v1/swagger.json'
2025-04-02 19:57:46.188 +04:00 DBG Request did not match any endpoints
2025-04-02 19:57:46.240 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.240 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.240 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.240 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.241 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.241 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.241 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.241 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.242 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.242 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.242 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.242 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.281 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.281 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.281 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.281 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.281 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.282 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.283 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.284 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.284 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.285 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.285 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.285 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.292 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.292 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.292 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.292 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.293 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.293 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.293 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.293 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.293 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.293 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.293 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.293 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.297 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.298 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.298 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.298 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.298 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.298 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.310 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.310 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.310 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.311 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.311 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.311 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.311 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.311 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.311 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.312 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.312 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.312 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.312 +04:00 DBG List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-04-02 19:57:46.312 +04:00 DBG Attempting to select an output formatter based on Accept header '["application/json"]'.
2025-04-02 19:57:46.312 +04:00 DBG Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-04-02 19:57:46.359 +04:00 DBG Connection ID "18014398515387564047" disconnecting.
2025-04-02 19:57:46.360 +04:00 INF Request finished HTTP/2 GET https://localhost:44346/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 172.905ms
